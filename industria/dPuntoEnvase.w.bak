&ANALYZE-SUSPEND _VERSION-NUMBER AB_v9r12 GUI ADM2
&ANALYZE-RESUME
/* Connected Databases 
          general         PROGRESS
*/
&Scoped-define WINDOW-NAME CURRENT-WINDOW
{adecomm/appserv.i}
DEFINE VARIABLE h_asindustria              AS HANDLE          NO-UNDO.
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS dTables 
/*------------------------------------------------------------------------

  File:  

  Description: from DATA.W - Template For SmartData objects in the ADM

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Modified:     February 24, 1999
------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */
DEFINE VARIABLE hLib AS HANDLE     NO-UNDO.

{adm2/support/customColors.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE SmartDataObject
&Scoped-define DB-AWARE yes

&Scoped-define ADM-SUPPORTED-LINKS Data-Source,Data-Target,Navigation-Target,Update-Target,Commit-Target,Filter-Target


/* Db-Required definitions. */
&IF DEFINED(DB-REQUIRED) = 0 &THEN
    &GLOBAL-DEFINE DB-REQUIRED TRUE
&ENDIF
&GLOBAL-DEFINE DB-REQUIRED-START   &IF {&DB-REQUIRED} &THEN
&GLOBAL-DEFINE DB-REQUIRED-END     &ENDIF

&Scoped-define QUERY-NAME Query-Main

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES punto_envase

/* Definitions for QUERY Query-Main                                     */
&Scoped-Define ENABLED-FIELDS  bx_correg c_fecha c_hora c_usuario id_empresa_proceso id_punto_envase~
 id_sucursal id_sucursal_proceso id_tipotambor_proceso litros nromov_proceso~
 solido_soluble sol_totales id_empresa id_sucursal_punto_envase~
 id_tipotambor nromov Anio cantidad_tambores Fecha id_articulo id_calidad~
 id_envase id_lote tambor_desde tambor_hasta kilos_tambor Acidez_w_v~
 Acidez_w_w Bx_20_20 Ratio cant_2 id_envase_2
&Scoped-define ENABLED-FIELDS-IN-punto_envase bx_correg c_fecha c_hora ~
c_usuario id_empresa_proceso id_punto_envase id_sucursal ~
id_sucursal_proceso id_tipotambor_proceso litros nromov_proceso ~
solido_soluble sol_totales id_empresa id_sucursal_punto_envase ~
id_tipotambor nromov Anio cantidad_tambores Fecha id_articulo id_calidad ~
id_envase id_lote tambor_desde tambor_hasta kilos_tambor Acidez_w_v ~
Acidez_w_w Bx_20_20 Ratio cant_2 id_envase_2 
&Scoped-Define DATA-FIELDS  bx_correg c_fecha c_hora c_usuario id_empresa_proceso id_punto_envase~
 id_sucursal id_sucursal_proceso id_tipotambor_proceso litros nromov_proceso~
 solido_soluble sol_totales id_empresa id_sucursal_punto_envase~
 id_tipotambor nromov Anio cantidad_tambores Fecha id_articulo id_calidad~
 id_envase id_lote tambor_desde tambor_hasta kilos_tambor Acidez_w_v~
 Acidez_w_w Bx_20_20 Ratio cant_2 id_envase_2
&Scoped-define DATA-FIELDS-IN-punto_envase bx_correg c_fecha c_hora ~
c_usuario id_empresa_proceso id_punto_envase id_sucursal ~
id_sucursal_proceso id_tipotambor_proceso litros nromov_proceso ~
solido_soluble sol_totales id_empresa id_sucursal_punto_envase ~
id_tipotambor nromov Anio cantidad_tambores Fecha id_articulo id_calidad ~
id_envase id_lote tambor_desde tambor_hasta kilos_tambor Acidez_w_v ~
Acidez_w_w Bx_20_20 Ratio cant_2 id_envase_2 
&Scoped-Define MANDATORY-FIELDS  id_sucursal id_sucursal_proceso id_sucursal_punto_envase id_calidad id_lote~
 tambor_desde tambor_hasta
&Scoped-Define APPLICATION-SERVICE 
&Scoped-Define ASSIGN-LIST   rowObject.cant_2 = punto_envase.cantidad_tambores_2
&Scoped-Define DATA-FIELD-DEFS "dPuntoEnvase.i"
&Scoped-define QUERY-STRING-Query-Main FOR EACH punto_envase NO-LOCK INDEXED-REPOSITION
{&DB-REQUIRED-START}
&Scoped-define OPEN-QUERY-Query-Main OPEN QUERY Query-Main FOR EACH punto_envase NO-LOCK INDEXED-REPOSITION.
{&DB-REQUIRED-END}
&Scoped-define TABLES-IN-QUERY-Query-Main punto_envase
&Scoped-define FIRST-TABLE-IN-QUERY-Query-Main punto_envase


/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME


/* ************************  Function Prototypes ********************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getNextId dTables  _DB-REQUIRED
FUNCTION getNextId RETURNS INTEGER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getSolidosRowObject dTables  _DB-REQUIRED
FUNCTION getSolidosRowObject RETURNS DECIMAL
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}


/* ***********************  Control Definitions  ********************** */

{&DB-REQUIRED-START}

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY Query-Main FOR 
      punto_envase SCROLLING.
&ANALYZE-RESUME
{&DB-REQUIRED-END}


/* ************************  Frame Definitions  *********************** */


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: SmartDataObject
   Allow: Query
   Frames: 0
   Add Fields to: Neither
   Other Settings: PERSISTENT-ONLY COMPILE APPSERVER DB-AWARE
 */

/* This procedure should always be RUN PERSISTENT.  Report the error,  */
/* then cleanup and return.                                            */
IF NOT THIS-PROCEDURE:PERSISTENT THEN DO:
  MESSAGE "{&FILE-NAME} should only be RUN PERSISTENT.":U
          VIEW-AS ALERT-BOX ERROR BUTTONS OK.
  RETURN.
END.

&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW dTables ASSIGN
         HEIGHT             = 1.67
         WIDTH              = 46.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB dTables 
/* ************************* Included-Libraries *********************** */

{src/adm2/data.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW dTables
  VISIBLE,,RUN-PERSISTENT                                               */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK QUERY Query-Main
/* Query rebuild information for SmartDataObject Query-Main
     _TblList          = "industria.punto_envase"
     _Options          = "NO-LOCK INDEXED-REPOSITION"
     _FldNameList[1]   > general.punto_envase.bx_correg
"bx_correg" "bx_correg" ? ? "decimal" ? ? ? ? ? ? yes ? no 13 yes
     _FldNameList[2]   > general.punto_envase.c_fecha
"c_fecha" "c_fecha" ? ? "date" ? ? ? ? ? ? yes ? no 9.2 yes
     _FldNameList[3]   > general.punto_envase.c_hora
"c_hora" "c_hora" ? ? "character" ? ? ? ? ? ? yes ? no 8 yes
     _FldNameList[4]   > general.punto_envase.c_usuario
"c_usuario" "c_usuario" ? ? "character" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[5]   > general.punto_envase.id_empresa_proceso
"id_empresa_proceso" "id_empresa_proceso" ? ? "integer" ? ? ? ? ? ? yes ? no 8.2 yes
     _FldNameList[6]   > general.punto_envase.id_punto_envase
"id_punto_envase" "id_punto_envase" ? ? "integer" ? ? ? ? ? ? yes ? no 12.8 yes
     _FldNameList[7]   > general.punto_envase.id_sucursal
"id_sucursal" "id_sucursal" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[8]   > general.punto_envase.id_sucursal_proceso
"id_sucursal_proceso" "id_sucursal_proceso" ? ? "integer" ? ? ? ? ? ? yes ? yes 6.6 yes
     _FldNameList[9]   > general.punto_envase.id_tipotambor_proceso
"id_tipotambor_proceso" "id_tipotambor_proceso" ? ? "integer" ? ? ? ? ? ? yes ? no 9.2 yes
     _FldNameList[10]   > general.punto_envase.litros
"litros" "litros" ? ? "decimal" ? ? ? ? ? ? yes ? no 15 yes
     _FldNameList[11]   > general.punto_envase.nromov_proceso
"nromov_proceso" "nromov_proceso" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[12]   > general.punto_envase.solido_soluble
"solido_soluble" "solido_soluble" ? ? "decimal" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[13]   > general.punto_envase.sol_totales
"sol_totales" "sol_totales" ? ? "decimal" ? ? ? ? ? ? yes ? no 15 yes
     _FldNameList[14]   > general.punto_envase.id_empresa
"id_empresa" "id_empresa" ? ? "integer" ? ? ? ? ? ? yes ? no 8.2 yes
     _FldNameList[15]   > general.punto_envase.id_sucursal_punto_envase
"id_sucursal_punto_envase" "id_sucursal_punto_envase" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[16]   > general.punto_envase.id_tipotambor
"id_tipotambor" "id_tipotambor" ? ? "integer" ? ? ? ? ? ? yes ? no 9.2 yes
     _FldNameList[17]   > general.punto_envase.nromov
"nromov" "nromov" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[18]   > general.punto_envase.Anio
"Anio" "Anio" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _FldNameList[19]   > general.punto_envase.cantidad_tambores
"cantidad_tambores" "cantidad_tambores" ? ? "integer" ? ? ? ? ? ? yes ? no 18 yes
     _FldNameList[20]   > general.punto_envase.Fecha
"Fecha" "Fecha" ? ? "date" ? ? ? ? ? ? yes ? no 11.6 yes
     _FldNameList[21]   > general.punto_envase.id_articulo
"id_articulo" "id_articulo" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _FldNameList[22]   > general.punto_envase.id_calidad
"id_calidad" "id_calidad" ? ? "integer" ? ? ? ? ? ? yes ? yes 7 yes
     _FldNameList[23]   > general.punto_envase.id_envase
"id_envase" "id_envase" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _FldNameList[24]   > general.punto_envase.id_lote
"id_lote" "id_lote" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[25]   > general.punto_envase.tambor_desde
"tambor_desde" "tambor_desde" ? ? "integer" ? ? ? ? ? ? yes ? yes 13.4 yes
     _FldNameList[26]   > general.punto_envase.tambor_hasta
"tambor_hasta" "tambor_hasta" ? ? "integer" ? ? ? ? ? ? yes ? yes 12.8 yes
     _FldNameList[27]   > general.punto_envase.kilos_tambor
"kilos_tambor" "kilos_tambor" ? ? "decimal" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[28]   > general.punto_envase.Acidez_w_v
"Acidez_w_v" "Acidez_w_v" ? ? "decimal" ? ? ? ? ? ? yes ? no 11.4 yes
     _FldNameList[29]   > general.punto_envase.Acidez_w_w
"Acidez_w_w" "Acidez_w_w" ? ? "decimal" ? ? ? ? ? ? yes ? no 11.8 yes
     _FldNameList[30]   > general.punto_envase.Bx_20_20
"Bx_20_20" "Bx_20_20" ? ? "decimal" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[31]   > general.punto_envase.Ratio
"Ratio" "Ratio" ? ? "decimal" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[32]   > general.punto_envase.cantidad_tambores_2
"cantidad_tambores_2" "cant_2" "cant_2" ? "integer" ? ? ? ? ? ? yes ? no 20.4 yes
     _FldNameList[33]   > general.punto_envase.id_envase_2
"id_envase_2" "id_envase_2" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _Design-Parent    is WINDOW dTables @ ( 1.14 , 2.6 )
*/  /* QUERY Query-Main */
&ANALYZE-RESUME

 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK dTables 


/* ***************************  Main Block  *************************** */

  &IF DEFINED(UIB_IS_RUNNING) <> 0 &THEN          
    RUN initializeObject.
  &ENDIF

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE beginTransactionValidate dTables  _DB-REQUIRED
PROCEDURE beginTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  FIND LAST RowObjUpd NO-ERROR.
  
  /*add*/
  FOR EACH rowObjUpd WHERE rowObjUpd.rowMod = "A" OR rowObjUpd.rowMod = "C".     
    RUN createTambores.
  END.
  
  /*update*/
  FOR EACH rowObjUpd WHERE rowObjUpd.rowMod = "U". 
    ASSIGN rowObjUpd.solido_soluble = DYNAMIC-FUNCTION('getCoefSolidosSolubles' IN hLib, rowObjUpd.bx_correg)
           rowObjUpd.c_usuario      = USERID("userdb")
           rowObjUpd.c_fecha        = TODAY
           rowObjUpd.c_hora         = STRING(TIME,"HH:MM:SS").
    rowObjUpd.changedFields = rowObjUpd.changedFields + ",c_usuario,c_fecha,c_hora,solido_soluble".        
  END.
  
  /*delete*/
  FOR EACH rowObjUpd WHERE rowObjUpd.rowMod = "D". 
    RUN deleteTambores.
  END.



END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE createTambores dTables  _DB-REQUIRED
PROCEDURE createTambores :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE hSource         AS HANDLE     NO-UNDO.
  DEFINE VARIABLE iEstado         AS INTEGER    NO-UNDO.
  DEFINE VARIABLE cChangedFields  AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE i               AS INTEGER    NO-UNDO.
  DEFINE VARIABLE lExiste         AS LOGICAL    NO-UNDO.

  hSource = DYNAMIC-FUNCTION('getDataSource').  


  ASSIGN rowObjUpd.id_empresa_proceso       = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_empresa')
         rowObjUpd.id_sucursal_proceso      = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_sucursal')
         rowObjUpd.id_tipotambor_proceso    = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_tipotambor')
         rowObjUpd.nromov_proceso           = DYNAMIC-FUNCTION('columnValue' IN hSource, 'nromov')
         rowObjUpd.id_empresa               = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_empresa')
         rowObjUpd.id_sucursal              = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_sucursal')
         rowObjUpd.nromov                   = NEXT-VALUE(nromov)
         rowObjUpd.id_punto_envase          = getNextId()  
         rowObjUpd.id_sucursal_punto_envase = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_sucursal')
         rowObjUpd.solido_soluble           = DYNAMIC-FUNCTION('getCoefSolidosSolubles' IN hLib, rowObjUpd.bx_correg)
         rowObjUpd.c_usuario                = USERID("userdb")
         rowObjUpd.c_fecha                  = TODAY
         rowObjUpd.c_hora                   = STRING(TIME,"HH:MM:SS").
    
  cChangedFields = ",c_usuario,c_fecha,c_hora".
  cChangedFields = cChangedFields + ",id_empresa_proceso,id_sucursal_proceso,id_tipotambor_proceso,nromov_proceso".
  cChangedFields = cChangedFields + ",id_empresa,id_sucursal,nromov".
  cChangedFields = cChangedFields + ",id_sucursal_punto_envase,id_punto_envase,solido_soluble".
  rowObjUpd.changedFields = rowObjUpd.changedFields + cChangedFields.

  IF rowObjUpd.id_tipotambor = 0 THEN
    RETURN "Asegurese de Especificar si los tambores son de Lote o Produccion".

  /*conrol lote o produccion existente*/
  lExiste = DYNAMIC-FUNCTION('getLoteExistente' IN hLib, rowObjUpd.id_sucursal,
                                                         rowObjUpd.id_tipotambor,
                                                         rowObjUpd.id_lote,
                                                         rowObjUpd.anio,
                                                         rowObjUpd.id_articulo).
  IF lExiste THEN
    RETURN "Lote o Produccion Existente".
  
  
  /*creo las cabeceras*/
  IF rowObjUpd.id_tipotambor = 1 THEN DO: /*producciones*/
    RUN createCabeceraProduccion IN hLib (rowObjUpd.id_empresa,
                                          rowObjUpd.id_sucursal,
                                          rowObjUpd.id_tipotambor,
                                          rowObjUpd.nromov,
                                          rowObjUpd.id_lote,
                                          rowObjUpd.anio,
                                          rowObjUpd.id_articulo,
                                          rowObjUpd.id_calidad,
                                          rowObjUpd.id_envase,
                                          rowObjUpd.fecha).
    iEstado = 10.
  END.

  IF rowObjUpd.id_tipotambor = 3 OR rowObjUpd.id_tipotambor = 9 THEN DO: /*lotes*/
    RUN createCabeceraLoteJugo IN hLib (rowObjUpd.id_empresa,
                                        rowObjUpd.id_sucursal,
                                        rowObjUpd.id_tipotambor,
                                        rowObjUpd.nromov,
                                        rowObjUpd.id_lote,
                                        rowObjUpd.anio,
                                        rowObjUpd.id_articulo,
                                        rowObjUpd.id_calidad,
                                        rowObjUpd.id_envase,
                                        rowObjUpd.fecha).

    RUN createComposicionLoteJugo IN hLib (rowObjUpd.id_empresa,
                                           rowObjUpd.id_sucursal,
                                           rowObjUpd.id_tipotambor,
                                           rowObjUpd.nromov,
                                           rowObjUpd.cantidad,
                                           rowObjUpd.tambor_desde,
                                           rowObjUpd.tambor_hasta,
                                           rowObjUpd.fecha, 
                                           rowObjUpd.kilos_tambor).
    iEstado = 10.
  END.

  /*grabo los valores de brix y litros en las cabeceras*/
  RUN setValoresAnalisis IN hLib (rowObjUpd.id_empresa,
                                  rowObjUpd.id_sucursal,
                                  rowObjUpd.id_tipotambor, 
                                  rowObjUpd.nromov,
                                  rowObjUpd.bx_20_20,
                                  rowObjUpd.bx_correg,
                                  rowObjUpd.acidez_w_w,
                                  rowObjUpd.acidez_w_v,
                                  rowObjUpd.litros).

  /*creo los tambores*/
  RUN createDrumsInBatch IN hLib (rowObjUpd.id_empresa,
                                  rowObjUpd.id_sucursal,
                                  rowObjUpd.id_tipotambor, 
                                  rowObjUpd.nromov,
                                  rowObjUpd.cantidad,
                                  rowObjUpd.tambor_desde,
                                  rowObjUpd.tambor_hasta,
                                  rowObjUpd.kilos_tambor,
                                  (IF rowObjUpd.id_tipotambor = 9 THEN rowObjUpd.id_envase ELSE 0), 
                                  iEstado).

  
  /*creo la relacion con el proceso*/
  DO i = rowObjUpd.tambor_desde TO rowObjUpd.tambor_hasta:
    RUN setRelProcesoTambor IN hLib (rowObjUpd.id_empresa_proceso,
                                     rowObjUpd.id_sucursal_proceso,
                                     rowObjUpd.id_tipotambor_proceso,
                                     rowObjUpd.nromov_proceso,
                                     rowObjUpd.id_empresa,
                                     rowObjUpd.id_sucursal,
                                     rowObjUpd.id_tipotambor,
                                     rowObjUpd.nromov,
                                     i).
  END.

  /*esto esta feo*/
  IF rowObjUpd.cant_2 <> 0 AND rowObjUpd.id_envase_2 <> 0 THEN DO:
    /*creo los tambores con distinto peso*/
    RUN createDrumsInBatch IN hLib (rowObjUpd.id_empresa,
                                    rowObjUpd.id_sucursal,
                                    rowObjUpd.id_tipotambor, 
                                    rowObjUpd.nromov,
                                    rowObjUpd.cant_2,
                                    rowObjUpd.tambor_hasta + 1,
                                    rowObjUpd.tambor_hasta + rowObjUpd.cant_2,
                                    rowObjUpd.id_envase_2,
                                    0, 
                                    iEstado).
    /*creo la relacion con el proceso de los tambores con diferente peso*/
    DO i = rowObjUpd.tambor_hasta + 1 TO rowObjUpd.tambor_hasta + rowObjUpd.cant_2:
      RUN setRelProcesoTambor IN hLib (rowObjUpd.id_empresa_proceso,
                                       rowObjUpd.id_sucursal_proceso,
                                       rowObjUpd.id_tipotambor_proceso,
                                       rowObjUpd.nromov_proceso,
                                       rowObjUpd.id_empresa,
                                       rowObjUpd.id_sucursal,
                                       rowObjUpd.id_tipotambor,
                                       rowObjUpd.nromov,
                                       i).
    END.
  END.

  /*grabar archivo de parametros*/
  RUN saveParamsFile IN hLib (rowObjUpd.id_empresa,
                              rowObjUpd.id_sucursal,
                              rowObjUpd.id_tipotambor, 
                              rowObjUpd.nromov).

  RUN refreshRow IN hSource.

  

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE customEnable dTables  _DB-REQUIRED
PROCEDURE customEnable :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteTambores dTables  _DB-REQUIRED
PROCEDURE deleteTambores :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE lTieneRemito AS LOGICAL    NO-UNDO.
  DEFINE VARIABLE lTieneReproc AS LOGICAL    NO-UNDO.

  /*si tiene remitos u oes*/
  lTieneRemito = DYNAMIC-FUNCTION('getLoteTieneRemitos' IN hLib, rowObjUpd.id_empresa, 
                                                                 rowObjUpd.id_sucursal, 
                                                                 rowObjUpd.id_tipotambor,
                                                                 rowObjUpd.nromov).
  IF lTieneRemito THEN DO:
    MESSAGE "Imposible Eliminar al cual se la han hecho remitos" VIEW-AS ALERT-BOX ERROR BUTTONS OK.
    RETURN "ADM-ERROR".
  END.

  /*si tiene reprocesos*/
  lTieneReproc = DYNAMIC-FUNCTION('getLoteTieneReprocesos' IN hLib, rowObjUpd.id_empresa, 
                                                                    rowObjUpd.id_sucursal, 
                                                                    rowObjUpd.id_tipotambor,
                                                                    rowObjUpd.nromov).
  IF lTieneReproc THEN DO:
    MESSAGE "Imposible Eliminar que tiene tambores que fueron reprocesados" VIEW-AS ALERT-BOX ERROR BUTTONS OK.
    RETURN "ADM-ERROR".
  END.

  /*elimino cabecera produccion*/
  IF rowObjUpd.id_tipotambor = 1 THEN DO:
    FIND FIRST produccion_jugo WHERE produccion_jugo.id_empresa     = rowObjUpd.id_empresa
                                 AND produccion_jugo.id_sucursal    = rowObjUpd.id_sucursal
                                 AND produccion_jugo.id_tipotambor  = rowObjUpd.id_tipotambor
                                 AND produccion_jugo.nromov         = rowObjUpd.nromov
                               NO-ERROR.
    IF AVAILABLE produccion_jugo THEN
      DELETE produccion_jugo.
  END.

  /*elimino cabecera lote*/
  IF rowObjUpd.id_tipotambor = 3 THEN DO:
    FIND FIRST lotes_jugo WHERE lotes_jugo.id_empresa     = rowObjUpd.id_empresa
                            AND lotes_jugo.id_sucursal    = rowObjUpd.id_sucursal
                            AND lotes_jugo.id_tipotambor  = rowObjUpd.id_tipotambor
                            AND lotes_jugo.nromov         = rowObjUpd.nromov
                          NO-ERROR.
    IF AVAILABLE lotes_jugo THEN
      DELETE lotes_jugo.

    FIND FIRST productos_terceros
         WHERE productos_terceros.id_empresa    = rowObjUpd.id_empresa
           AND productos_terceros.id_sucursal   = rowObjUpd.id_sucursal
           AND productos_terceros.id_tipotambor = rowObjUpd.id_tipotambor
           AND productos_terceros.nromov        = rowObjUpd.nromov
         NO-ERROR.
    IF AVAILABLE productos_terceros THEN 
      DELETE productos_terceros.

    /*elimino analisis*/
    FOR EACH inspecciones_lote WHERE inspecciones_lote.id_empresa     = rowObjUpd.id_empresa
                                 AND inspecciones_lote.id_sucursal    = rowObjUpd.id_sucursal
                                 AND inspecciones_lote.id_tipotambor  = rowObjUpd.id_tipotambor
                                 AND inspecciones_lote.nromov         = rowObjUpd.nromov.
      DELETE inspecciones_lote.
    END.
  END.

  /*agrego entrada en el spool de mails a depositos*/
  RUN addMailingSpoolEntry IN hLib (rowObjUpd.id_empresa,
                                    rowObjUpd.id_sucursal,
                                    rowObjUpd.id_tipotambor,
                                    rowObjUpd.nromov, 
                                    "delete").

  /*elimino tambores*/
  RUN deleteDrumsFromBatch IN hLib (rowObjUpd.id_empresa,
                                    rowObjUpd.id_sucursal,
                                    rowObjUpd.id_tipotambor,
                                    rowObjUpd.nromov, 
                                    TRUE).

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI dTables  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE endTransactionValidate dTables  _DB-REQUIRED
PROCEDURE endTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
FIND LAST RowObjUpd NO-ERROR.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPosUpdate dTables  _DB-REQUIRED
PROCEDURE especialPosUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER  xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreCreate dTables  _DB-REQUIRED
PROCEDURE especialPreCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xCase AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreUpdate dTables  _DB-REQUIRED
PROCEDURE especialPreUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE    NO-UNDO.
DEFINE INPUT PARAMETER xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE fieldsWithProblems dTables  _DB-REQUIRED
PROCEDURE fieldsWithProblems :
/*------------------------------------------------------------------------------
  Purpose: In this procedure we check all conditions of BUssines Logic that the
  RowObject can give us.Returns a comma separated list in wich each element is a
  pair of field + chr(3)+  color we want to mark as irregular ones
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER cList AS CHARACTER NO-UNDO.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getField dTables  _DB-REQUIRED
PROCEDURE getField :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xFieldName AS CHARACTER NO-UNDO.

DEFINE VAR hBuffer AS HANDLE NO-UNDO.
DEFINE VAR hField  AS HANDLE NO-UNDO.

hBuffer = BUFFER RowObject:HANDLE.
IF VALID-HANDLE(hBuffer) THEN
DO:
    hField = hBuffer:BUFFER-FIELD(xFieldName).
    IF VALID-HANDLE(hField) THEN
    DO:
        RETURN hField:BUFFER-VALUE().
    END.
END.

RETURN.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE id_envaseValidate dTables  _DB-REQUIRED
PROCEDURE id_envaseValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE INPUT  PARAMETER pcValue AS CHARACTER  NO-UNDO.

  IF INTEGER(pcValue) = 0 OR (pcValue = ?) THEN 
    RETURN "Error en el codigo de Envase.".

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE id_tipotamborValidate dTables  _DB-REQUIRED
PROCEDURE id_tipotamborValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE INPUT  PARAMETER pcValor AS CHARACTER  NO-UNDO.

  IF pcValor = "0" THEN 
    RETURN "Asegurese que selecciono correctamente el campo Lote o Produccion".

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initializeObject dTables  _DB-REQUIRED
PROCEDURE initializeObject :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/



  /* Code placed here will execute PRIOR to standard behavior. */
  
  RUN SUPER.

  RUN libTamboresIndustria.p PERSISTENT SET hLib.

  /* Code placed here will execute AFTER standard behavior.    */
  /*
  DEFINE VAR xDataSource AS CHARACTER NO-UNDO.
  {get DataSource xDataSource}.
  IF xDataSource <> ? THEN
  DO:
      {set AutoCommit NO}.
      {set CommitSource xDataSource}.
  END.
  */

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postTransactionValidate dTables  _DB-REQUIRED
PROCEDURE postTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
 

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postUpdate dTables  _DB-REQUIRED
PROCEDURE postUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer   AS HANDLE NO-UNDO.
DEFINE VAR hField                AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preCreate dTables  _DB-REQUIRED
PROCEDURE preCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preTransactionValidate dTables  _DB-REQUIRED
PROCEDURE preTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preUpdate dTables  _DB-REQUIRED
PROCEDURE preUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

/* ************************  Function Implementations ***************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getNextId dTables  _DB-REQUIRED
FUNCTION getNextId RETURNS INTEGER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE iRet    AS INTEGER    NO-UNDO.
  DEFINE VARIABLE hSource AS HANDLE     NO-UNDO.

  hSource = DYNAMIC-FUNCTION('getDataSource').
                                                            
  FIND LAST punto_envase WHERE punto_envase.nromov_proceso = DYNAMIC-FUNCTION('columnValue' IN hSource, 'nromov') NO-LOCK NO-ERROR.
  IF AVAILABLE punto_envase THEN DO:
    iRet = punto_envase.id_punto_envase.
  END.

  iRet = iRet + 1.

  RETURN iRet.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getSolidosRowObject dTables  _DB-REQUIRED
FUNCTION getSolidosRowObject RETURNS DECIMAL
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE dRet AS DECIMAL    NO-UNDO.
  DEFINE BUFFER buRo FOR rowObject.

  FOR EACH buRo NO-LOCK.
    dRet = dRet + buRo.sol_totales.    
  END.

  RETURN dRet.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

