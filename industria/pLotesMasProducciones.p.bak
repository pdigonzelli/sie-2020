define input parameter fecha_desde as date.
define input parameter fecha_hasta as date.
define input parameter p_sucursal as integer.
define input parameter p_articulo as integer.
define input parameter p_calidad as integer.

define var v_tambores as integer.
define var v_kilos as decimal.
define var p_articulo_2 as integer.

for each produccion_industria.
    delete produccion_industria.
end.

if p_articulo = 52 or p_articulo = 53 then
    do:
        p_articulo_2 = p_articulo + 900.       
    end.

            
/**********  LOTES DE JUGO  **************************************************/
for each lotes_jugo where (lotes_jugo.fecha >= fecha_desde)
                      and (lotes_jugo.fecha <= fecha_hasta)
                      and (if p_sucursal > 0 then lotes_jugo.id_sucursal = p_sucursal else true)
                      and 
                      (if p_articulo > 0 then 
                        (if p_articulo = 52 or p_articulo = 53 then 
                                lotes_jugo.id_articulo = p_articulo or 
                                lotes_jugo.id_articulo = p_articulo_2 
                         else
                                  lotes_jugo.id_articulo = p_articulo)  
                      else true)                     
                      and (if p_calidad > 0 then lotes_jugo.id_calidad = p_calidad else true)
                      no-lock.
    
    v_tambores = 0.
    v_kilos = 0.
    for each tambores_industria of lotes_jugo no-lock.
        v_tambores = v_tambores + 1.
        v_kilos = v_kilos + tambores_industria.kilos_tambor.
    end.                      
    
    find last tambores_industria of lotes_jugo no-lock no-error.   
    find contratos where contratos.id_contrato      = tambores_industria.id_contrato_of
                     and contratos.id_tipo_contrato = tambores_industria.id_tipocontrato_of
                     and contratos.anio             = tambores_industria.anio_of no-lock no-error.
    
    find productos_terminados of lotes_jugo no-lock no-error.
    find calidades of lotes_jugo no-lock no-error.
    find envases_prod of lotes_jugo no-lock no-error.
    find comercial.sucursales of lotes_jugo no-lock no-error.
    find FIRST r_productos_calidad where r_productos_calidad.id_articulo = lotes_jugo.id_articulo
                                   and r_productos_calidad.id_calidad = lotes_jugo.id_calidad
                                   no-lock no-error.
    
    create produccion_industria.
    assign produccion_industria.id_empresa          = lotes_jugo.id_empresa
           produccion_industria.id_sucursal         = lotes_jugo.id_sucursal
           produccion_industria.fecha               = lotes_jugo.fecha
           produccion_industria.id_lote             = lotes_jugo.id_lote
           produccion_industria.anio_lote           = INTEGER(SUBSTRING(STRING(lotes_jugo.anio),3,2))
           produccion_industria.tambores            = v_tambores
           produccion_industria.kilos               = v_kilos
           produccion_industria.kilos_tambor        = lotes_jugo.peso_neto
           produccion_industria.id_articulo         = lotes_jugo.id_articulo
           produccion_industria.id_calidad          = lotes_jugo.id_calidad
           produccion_industria.id_envase           = lotes_jugo.id_envase
           produccion_industria.id_produccion_industria = NEXT-VALUE(rep_produccion)
           produccion_industria.c_usuario           = lotes_jugo.c_usuario
           produccion_industria.c_fecha             = lotes_jugo.c_fecha
           produccion_industria.c_hora              = lotes_jugo.c_hora.

           if available sucursales then       
               assign produccion_industria.sucursal            = sucursales.nombre.

           if available productos_terminados then       
               assign produccion_industria.articulo            = productos_terminados.abreviatura.
           
           if available calidades then
               assign produccion_industria.calidad             = calidades.abreviatura.
        
           if available envases_prod then
               assign produccion_industria.envase              = envases_prod.abreviatura. 
           
           if available contratos then
                    assign produccion_industria.orden_fabricacion = string(contratos.orden_fabricacion)
                           produccion_industria.id_contrato = contratos.id_contrato.

           if available r_productos_calidad then
                    assign produccion_industria.kilos_400 = v_kilos * r_productos_calidad.coeficiente.

end.                      

/***************************************************************************************************/

/******************** LOTES DE ACEITE **************************************************************/

for each lotes_aceite where (lotes_aceite.fecha >= fecha_desde)
                        and (lotes_aceite.fecha <= fecha_hasta)
                        and (if p_sucursal > 0 then lotes_aceite.id_sucursal = p_sucursal else true)
                        and (if p_articulo > 0 then lotes_aceite.id_articulo = p_articulo else true)
                        no-lock
                        BREAK BY lotes_aceite.nro_partida
                              BY lotes_aceite.fecha
     .
    IF LAST-OF(lotes_aceite.nro_partida) THEN DO:
    
    v_tambores = 0.
    v_kilos = 0.
    for each tambores_industria of lotes_aceite no-lock.
        v_tambores = v_tambores + 1.
        v_kilos = v_kilos + tambores_industria.kilos_tambor.
    end.                      
    
    find last tambores_industria of lotes_aceite no-lock no-error.   
    find contratos where contratos.id_contrato      = tambores_industria.id_contrato_of
                     and contratos.id_tipo_contrato = tambores_industria.id_tipocontrato_of
                     and contratos.anio             = tambores_industria.anio_of no-lock no-error.

    find productos_terminados of lotes_aceite no-lock no-error.
    find comercial.sucursales of lotes_aceite no-lock no-error.
    find envases_prod of lotes_aceite no-lock no-error.
        
    create produccion_industria.
    assign produccion_industria.id_empresa          = lotes_aceite.id_empresa
           produccion_industria.id_sucursal         = lotes_aceite.id_sucursal
           produccion_industria.fecha               = lotes_aceite.fecha
           produccion_industria.id_lote             = lotes_aceite.id_lote
           produccion_industria.anio_lote           = INTEGER(SUBSTRING(STRING(lotes_aceite.anio),3,2))
           produccion_industria.tambores            = v_tambores
           produccion_industria.kilos               = v_kilos
           produccion_industria.kilos_tambor        = lotes_aceite.peso_neto
           produccion_industria.id_articulo         = lotes_aceite.id_articulo
           produccion_industria.id_envase           = lotes_aceite.id_envase
           produccion_industria.id_produccion_industria = NEXT-VALUE(rep_produccion)
           produccion_industria.c_usuario           = lotes_aceite.c_usuario
           produccion_industria.c_fecha             = lotes_aceite.c_fecha
           produccion_industria.c_hora              = lotes_aceite.c_hora. 
           
           if available sucursales then       
               assign produccion_industria.sucursal            = sucursales.nombre.

           if available productos_terminados then       
               assign produccion_industria.articulo            = productos_terminados.abreviatura.
           
           if available envases_prod then
               assign produccion_industria.envase              = envases_prod.abreviatura.
               
           if available contratos then
                    assign produccion_industria.orden_fabricacion = string(contratos.orden_fabricacion)
                           produccion_industria.id_contrato = contratos.id_contrato.

    
    END.
end.

/***************************************************************************************************/


/**********  PRODUCCIONES DE JUGO  **************************************************/
   v_tambores = 0.
    v_kilos = 0.
 
FOR EACH tambores_industria WHERE (tambores_industria.fecha >= fecha_desde)
                              AND (tambores_industria.fecha <= fecha_hasta)
                              AND (IF p_sucursal > 0 THEN tambores_industria.id_sucursal = p_sucursal ELSE TRUE)
                              AND (IF p_articulo > 0 THEN tambores_industria.id_articulo = p_articulo ELSE TRUE)                     
                              AND tambores_industria.id_locacion_ubicacion = 4
                              AND tambores_industria.id_tipotambor = 1
                            BREAK BY tambores_industria.nromov.
    
 
        v_tambores = v_tambores + 1.
        v_kilos = v_kilos + tambores_industria.kilos_tambor.
 
  IF LAST-OF(tambores_industria.nromov) THEN DO:
  
    FIND FIRST productos_terminados OF tambores_industria NO-LOCK NO-ERROR.
    FIND FIRST envases_prod OF tambores_industria NO-LOCK NO-ERROR.
    FIND FIRST comercial.sucursales OF tambores_industria NO-LOCK NO-ERROR.
    FIND FIRST r_productos_calidad WHERE r_productos_calidad.id_articulo = tambores_industria.id_articulo
                                     AND r_productos_calidad.id_calidad = tambores_industria.id_calidad
                                     NO-LOCK NO-ERROR.
    
    CREATE produccion_industria.
    ASSIGN produccion_industria.id_empresa          = tambores_industria.id_empresa
           produccion_industria.id_sucursal         = tambores_industria.id_sucursal
           produccion_industria.fecha               = tambores_industria.fecha
           produccion_industria.id_lote             = tambores_industria.id_lote
           produccion_industria.anio_lote           = INTEGER(SUBSTRING(STRING(tambores_industria.anio),3,2))
           produccion_industria.tambores            = v_tambores
           produccion_industria.kilos               = v_kilos
           produccion_industria.kilos_tambor        = tambores_industria.kilos_tambor 
           produccion_industria.id_articulo         = tambores_industria.id_articulo
           produccion_industria.id_calidad          = tambores_industria.id_calidad 
           produccion_industria.id_envase           = tambores_industria.id_envase 
           produccion_industria.id_produccion_industria = NEXT-VALUE(rep_produccion)
           produccion_industria.c_usuario           = tambores_industria.c_usuario
           produccion_industria.c_fecha             = tambores_industria.c_fecha
           produccion_industria.c_hora              = tambores_industria.c_hora.

           IF AVAILABLE sucursales THEN       
               ASSIGN produccion_industria.sucursal            = sucursales.nombre.

           IF AVAILABLE productos_terminados THEN       
               ASSIGN produccion_industria.articulo            = productos_terminados.abreviatura.
           
           IF AVAILABLE envases_prod THEN
               ASSIGN produccion_industria.envase              = envases_prod.abreviatura. 
           
           IF AVAILABLE r_productos_calidad THEN
                    ASSIGN produccion_industria.kilos_400 = v_kilos * r_productos_calidad.coeficiente.
      v_tambores = 0.
      v_kilos = 0.

  END.
end.                      

/***************************************************************************************************/

/******************** PRODUCCION DE ACEITES **************************************************************/

FOR EACH tambores_industria WHERE tambores_industria.id_tipotambor = 2
                              AND tambores_industria.id_locacion_ubicacion = 4
                              AND (tambores_industria.fecha >= fecha_desde)
                              AND (tambores_industria.fecha <= fecha_hasta)
                              AND (IF p_sucursal > 0 THEN tambores_industria.id_sucursal = p_sucursal ELSE TRUE)
                              AND (IF p_articulo > 0 THEN tambores_industria.id_articulo = p_articulo ELSE TRUE)
                              NO-LOCK.
    
    FIND FIRST productos_terminados OF tambores_industria NO-LOCK NO-ERROR.
    FIND FIRST comercial.sucursales OF tambores_industria NO-LOCK NO-ERROR.
    FIND FIRST envases_prod OF tambores_industria NO-LOCK NO-ERROR.
        
    CREATE produccion_industria.
    ASSIGN produccion_industria.id_empresa          = tambores_industria.id_empresa
           produccion_industria.id_sucursal         = tambores_industria.id_sucursal
           produccion_industria.fecha               = tambores_industria.fecha
           produccion_industria.id_lote             = tambores_industria.id_tambor
           produccion_industria.anio_lote           = INTEGER(SUBSTRING(STRING(tambores_industria.anio),3,2))
           produccion_industria.tambores            = 1
           produccion_industria.kilos               = tambores_industria.kilos_tambor
           produccion_industria.kilos_tambor        = tambores_industria.kilos_tambor
           produccion_industria.id_articulo         = tambores_industria.id_articulo
           produccion_industria.id_envase           = tambores_industria.id_envase
           produccion_industria.id_produccion_industria = NEXT-VALUE(rep_produccion)
           produccion_industria.c_usuario           = tambores_industria.c_usuario
           produccion_industria.c_fecha             = tambores_industria.c_fecha
           produccion_industria.c_hora              = tambores_industria.c_hora. 
           
           IF AVAILABLE sucursales THEN       
               ASSIGN produccion_industria.sucursal            = sucursales.nombre.

           IF AVAILABLE productos_terminados THEN       
               ASSIGN produccion_industria.articulo            = productos_terminados.abreviatura.
           
           IF AVAILABLE envases_prod THEN
               ASSIGN produccion_industria.envase              = envases_prod.abreviatura. 

    

end.

/***************************************************************************************************/


