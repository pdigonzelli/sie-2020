&ANALYZE-SUSPEND _VERSION-NUMBER AB_v9r12 GUI ADM2
&ANALYZE-RESUME
/* Connected Databases 
          general         PROGRESS
*/
&Scoped-define WINDOW-NAME CURRENT-WINDOW
{adecomm/appserv.i}
DEFINE VARIABLE h_asindustria              AS HANDLE          NO-UNDO.
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS dTables 
/*------------------------------------------------------------------------

  File:  

  Description: from DATA.W - Template For SmartData objects in the ADM

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Modified:     February 24, 1999
------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */

{adm2/support/customColors.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE SmartDataObject
&Scoped-define DB-AWARE yes

&Scoped-define ADM-SUPPORTED-LINKS Data-Source,Data-Target,Navigation-Target,Update-Target,Commit-Target,Filter-Target


/* Db-Required definitions. */
&IF DEFINED(DB-REQUIRED) = 0 &THEN
    &GLOBAL-DEFINE DB-REQUIRED TRUE
&ENDIF
&GLOBAL-DEFINE DB-REQUIRED-START   &IF {&DB-REQUIRED} &THEN
&GLOBAL-DEFINE DB-REQUIRED-END     &ENDIF

&Scoped-define QUERY-NAME Query-Main

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES r_facturas_exterior_proforma

/* Definitions for QUERY Query-Main                                     */
&Scoped-Define ENABLED-FIELDS  id_gasto id_moneda_origen id_operacion id_punto_venta id_tipocomp_factura~
 id_tipocomp_proforma id_unidad_medida importe item nromov nro_comp~
 nro_proforma item_proforma
&Scoped-define ENABLED-FIELDS-IN-r_facturas_exterior_proforma id_gasto ~
id_moneda_origen id_operacion id_punto_venta id_tipocomp_factura ~
id_tipocomp_proforma id_unidad_medida importe item nromov nro_comp ~
nro_proforma item_proforma 
&Scoped-Define DATA-FIELDS  id_gasto id_moneda_origen id_operacion id_punto_venta id_tipocomp_factura~
 id_tipocomp_proforma id_unidad_medida importe item nromov nro_comp~
 nro_proforma item_proforma
&Scoped-define DATA-FIELDS-IN-r_facturas_exterior_proforma id_gasto ~
id_moneda_origen id_operacion id_punto_venta id_tipocomp_factura ~
id_tipocomp_proforma id_unidad_medida importe item nromov nro_comp ~
nro_proforma item_proforma 
&Scoped-Define MANDATORY-FIELDS 
&Scoped-Define APPLICATION-SERVICE 
&Scoped-Define ASSIGN-LIST 
&Scoped-Define DATA-FIELD-DEFS "drfacturasexteriorproformas.i"
&Scoped-define QUERY-STRING-Query-Main FOR EACH r_facturas_exterior_proforma NO-LOCK INDEXED-REPOSITION
{&DB-REQUIRED-START}
&Scoped-define OPEN-QUERY-Query-Main OPEN QUERY Query-Main FOR EACH r_facturas_exterior_proforma NO-LOCK INDEXED-REPOSITION.
{&DB-REQUIRED-END}
&Scoped-define TABLES-IN-QUERY-Query-Main r_facturas_exterior_proforma
&Scoped-define FIRST-TABLE-IN-QUERY-Query-Main r_facturas_exterior_proforma


/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

{&DB-REQUIRED-START}

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY Query-Main FOR 
      r_facturas_exterior_proforma SCROLLING.
&ANALYZE-RESUME
{&DB-REQUIRED-END}


/* ************************  Frame Definitions  *********************** */


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: SmartDataObject
   Allow: Query
   Frames: 0
   Add Fields to: Neither
   Other Settings: PERSISTENT-ONLY COMPILE APPSERVER DB-AWARE
 */

/* This procedure should always be RUN PERSISTENT.  Report the error,  */
/* then cleanup and return.                                            */
IF NOT THIS-PROCEDURE:PERSISTENT THEN DO:
  MESSAGE "{&FILE-NAME} should only be RUN PERSISTENT.":U
          VIEW-AS ALERT-BOX ERROR BUTTONS OK.
  RETURN.
END.

&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW dTables ASSIGN
         HEIGHT             = 1.62
         WIDTH              = 46.6.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB dTables 
/* ************************* Included-Libraries *********************** */

{src/adm2/data.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW dTables
  VISIBLE,,RUN-PERSISTENT                                               */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK QUERY Query-Main
/* Query rebuild information for SmartDataObject Query-Main
     _TblList          = "industria.r_facturas_exterior_proforma"
     _Options          = "NO-LOCK INDEXED-REPOSITION"
     _FldNameList[1]   > general.r_facturas_exterior_proforma.id_gasto
"id_gasto" "id_gasto" ? ? "integer" ? ? ? ? ? ? yes ? no 3.6 yes
     _FldNameList[2]   > general.r_facturas_exterior_proforma.id_moneda_origen
"id_moneda_origen" "id_moneda_origen" ? ? "integer" ? ? ? ? ? ? yes ? no 7.2 yes
     _FldNameList[3]   > general.r_facturas_exterior_proforma.id_operacion
"id_operacion" "id_operacion" ? ? "integer" ? ? ? ? ? ? yes ? no 3.6 yes
     _FldNameList[4]   > general.r_facturas_exterior_proforma.id_punto_venta
"id_punto_venta" "id_punto_venta" ? ? "integer" ? ? ? ? ? ? yes ? no 6.4 yes
     _FldNameList[5]   > general.r_facturas_exterior_proforma.id_tipocomp_factura
"id_tipocomp_factura" "id_tipocomp_factura" ? ? "integer" ? ? ? ? ? ? yes ? no 8.4 yes
     _FldNameList[6]   > general.r_facturas_exterior_proforma.id_tipocomp_proforma
"id_tipocomp_proforma" "id_tipocomp_proforma" ? ? "integer" ? ? ? ? ? ? yes ? no 8.4 yes
     _FldNameList[7]   > general.r_facturas_exterior_proforma.id_unidad_medida
"id_unidad_medida" "id_unidad_medida" ? ? "integer" ? ? ? ? ? ? yes ? no 8.6 yes
     _FldNameList[8]   > general.r_facturas_exterior_proforma.importe
"importe" "importe" ? ? "decimal" ? ? ? ? ? ? yes ? no 17.4 yes
     _FldNameList[9]   > general.r_facturas_exterior_proforma.item
"item" "item" ? ? "integer" ? ? ? ? ? ? yes ? no 4 yes
     _FldNameList[10]   > general.r_facturas_exterior_proforma.nromov
"nromov" "nromov" ? ? "integer" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[11]   > general.r_facturas_exterior_proforma.nro_comp
"nro_comp" "nro_comp" ? ? "integer" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[12]   > general.r_facturas_exterior_proforma.nro_proforma
"nro_proforma" "nro_proforma" ? ? "integer" ? ? ? ? ? ? yes ? no 7.2 yes
     _FldNameList[13]   > general.r_facturas_exterior_proforma.item_proforma
"item_proforma" "item_proforma" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _Design-Parent    is WINDOW dTables @ ( 1.19 , 4 )
*/  /* QUERY Query-Main */
&ANALYZE-RESUME

 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK dTables 


/* ***************************  Main Block  *************************** */

  &IF DEFINED(UIB_IS_RUNNING) <> 0 &THEN          
    RUN initializeObject.
  &ENDIF

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE beginTransactionValidate dTables  _DB-REQUIRED
PROCEDURE beginTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE BUFFER bbItemFac FOR items_facturas_exterior.
DEFINE BUFFER bbrFacturas FOR r_facturas_exterior_lote.
DEFINE BUFFER bbFacturas FOR facturas_exterior.
DEFINE VAR vOperacion AS INTEGER.
DEFINE VAR vTipocomp AS INTEGER.
DEFINE VAR vNromov AS INTEGER.
DEFINE VAR vItem AS INTEGER.
DEFINE VAR hSource AS HANDLE.
DEFINE VAR vLote AS INTEGER.
DEFINE VAR vAnio AS INTEGER.
DEFINE VAR vTambores AS INTEGER.
DEFINE VAR vTotalTambores AS INTEGER.
DEFINE VAR vImporteItemFactura AS DECIMAL.
DEFINE VAR vGastoItemFactura AS INTEGER.
DEFINE VAR vEmpresa AS INTEGER.
DEFINE VAR vSucursal AS INTEGER.
DEFINE VAR vTipoTambor AS INTEGER.
DEFINE VAR vNromovLote AS INTEGER.
DEFINE VAR hCon AS HANDLE.

FIND LAST RowObjUpd NO-ERROR.

hSource               = DYNAMIC-FUNCTION('getDataSource').
vTipocomp             = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_tipocomp').
vOperacion            = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_operacion').
vItem                 = DYNAMIC-FUNCTION('columnValue' IN hSource, 'item').
vNromov               = DYNAMIC-FUNCTION('columnValue' IN hSource, 'nromov').
vImporteItemFactura   = DYNAMIC-FUNCTION('columnValue' IN hSource, 'importe').
vGastoItemFactura     = DYNAMIC-FUNCTION('columnValue' IN hSource, 'id_gasto').
hCon                  = DYNAMIC-FUNCTION('getContainerHandle':U).

FOR EACH RowObjUpd WHERE RowObjUpd.RowMod = "A" OR RowObjUpd.RowMod = "C".
  
  FIND FIRST bbFacturas WHERE bbFacturas.id_tipocomp    = vTipocomp
                          AND bbFacturas.id_operacion   = vOperacion
                          AND bbFacturas.nromov         = vNromov
                        NO-LOCK NO-ERROR.

  ASSIGN RowObjUpd.id_tipocomp_factura   = vTipocomp
         RowObjUpd.id_operacion          = vOperacion
         RowObjUpd.nromov                = vNromov
         RowObjUpd.ITEM                  = vItem
         rowObjUpd.importe               = vImporteItemFactura
         rowObjUpd.id_moneda_origen      = IF AVAILABLE bbFacturas THEN bbFacturas.id_moneda_origen ELSE 0.

  RowObjUpd.changedFields = RowObjUpd.changedFields + ",id_operacion,id_tipocomp_factura,item,nromov,importe,id_moneda_origen".
    
  /*  A CONTINUACION ESTAN TODOS LOS CALCULOS DE DESGLOCE POR LOTE */
    vTotalTambores = 0.
    FOR EACH aux_items_venta WHERE aux_items_venta.id_punto_venta = RowObjUpd.id_punto_venta
                               AND aux_items_venta.nromov         = RowObjUpd.nro_comp
                                 NO-LOCK.
        /* ACA BUSCO TODOS LOS LOTES ASOCIADOS A LA PROFORMA */
        vLote = INTEGER(SUBSTRING(aux_items_venta.nro_lote,1,4)).
        vAnio = INTEGER(SUBSTRING(aux_items_venta.nro_lote,6,2)).
        vAnio = vAnio + 2000.
        
        FIND FIRST items_venta OF aux_items_venta NO-LOCK NO-ERROR.
        IF AVAILABLE items_venta THEN DO:
            /* ENTRO A items_venta PARA PODER SACAR EL ARTICULO EN LA BUSQUEDA DEL LOTE */
            /* DESPUES RECORRO TODOS LOS TAMBORES PARA PODER DIVIDIR EL IMPORTE DE ACUERDO
               A LA CANTIDAD DE TAMBORES DE CADA LOTE */
            vTambores = 0 .
            FOR EACH tambores_industria WHERE  (tambores_industria.id_tipotambor  = 3
                                             OR tambores_industria.id_tipotambor  = 6
                                             OR tambores_industria.id_tipotambor  = 7)
                                            AND tambores_industria.id_lote        = vLote
                                            AND tambores_industria.anio           = vAnio
                                            AND tambores_industria.id_articulo    = items_venta.id_articulo
                                            AND tambores_industria.id_tambor      >= aux_items_venta.desde_lote
                                            AND tambores_industria.id_tambor      <= aux_items_venta.hasta_lote
                                            NO-LOCK.
                vTambores = vTambores + 1.
                vTotalTambores = vTotalTambores + 1.
                vEmpresa    = tambores_industria.id_empresa.
                vSucursal   = tambores_industria.id_sucursal.
                vTipoTambor = tambores_industria.id_tipotambor.
                vNromovLote = tambores_industria.nromov.
            END.
            
            IF vTambores > 0 THEN DO:
                /* CREO LOS REGISTROS RELACIONANDO LOS FACTURAS EXTERIOR CON LOS LOTES
                   PERO NO ESTA TERMINADO EL PROCESO, ACA CARGO EN EL CAMPOR IMPORTE LA CANTIDAD
                   DE TAMBORES DEL LOTE */
                CREATE r_facturas_exterior_lote.
                ASSIGN r_facturas_exterior_lote.id_tipocomp         = vTipocomp
                       r_facturas_exterior_lote.id_operacion        = vOperacion
                       r_facturas_exterior_lote.nromov              = vNromov
                       r_facturas_exterior_lote.ITEM                = vItem
                       r_facturas_exterior_lote.id_gasto            = vGastoItemFactura
                       r_facturas_exterior_lote.id_empresa          = vEmpresa
                       r_facturas_exterior_lote.id_sucursal         = vSucursal
                       r_facturas_exterior_lote.id_tipotambor       = vTipoTambor
                       r_facturas_exterior_lote.nromov_lote         = vNromovLote
                       r_facturas_exterior_lote.id_moneda_origen    = rowObjUpd.id_moneda_origen
                       r_facturas_exterior_lote.id_unidad_medida    = rowObjUpd.id_unidad_medida
                       r_facturas_exterior_lote.importe             = vTambores
                       r_facturas_exterior_lote.desde_tambor        = aux_items_venta.desde_lote
                       r_facturas_exterior_lote.hasta_tambor        = aux_items_venta.hasta_lote.

            END.
        END.
    END.
    /* ACA HAGO EL CALCULO FINAL DEL IMPORTE SEGUN LA CANTIDAD DE TAMBORES DE CADA LOTE */
    FOR EACH bbrFacturas WHERE bbrFacturas.id_tipocomp         = vTipocomp
                           AND bbrFacturas.id_operacion        = vOperacion
                           AND bbrFacturas.nromov              = vNromov
                           AND bbrFacturas.ITEM                = vItem
                           AND bbrFacturas.id_gasto            = vGastoItemFactura.
        bbrFacturas.importe = (bbrFacturas.importe / vTotalTambores) * vImporteItemFactura.
    END.
END.

FOR EACH RowObjUpd WHERE RowObjUpd.RowMod = "D".
    FOR EACH bbrFacturas WHERE bbrFacturas.id_tipocomp         = vTipocomp
                           AND bbrFacturas.id_operacion        = vOperacion
                           AND bbrFacturas.nromov              = vNromov
                           AND bbrFacturas.ITEM                = vItem.
        DELETE bbrFacturas.
    END.
END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI dTables  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE endTransactionValidate dTables  _DB-REQUIRED
PROCEDURE endTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
FIND LAST RowObjUpd NO-ERROR.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPosUpdate dTables  _DB-REQUIRED
PROCEDURE especialPosUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER  xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreCreate dTables  _DB-REQUIRED
PROCEDURE especialPreCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xCase AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreUpdate dTables  _DB-REQUIRED
PROCEDURE especialPreUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE    NO-UNDO.
DEFINE INPUT PARAMETER xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE fieldsWithProblems dTables  _DB-REQUIRED
PROCEDURE fieldsWithProblems :
/*------------------------------------------------------------------------------
  Purpose: In this procedure we check all conditions of BUssines Logic that the
  RowObject can give us.Returns a comma separated list in wich each element is a
  pair of field + chr(3)+  color we want to mark as irregular ones
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER cList AS CHARACTER NO-UNDO.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getField dTables  _DB-REQUIRED
PROCEDURE getField :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xFieldName AS CHARACTER NO-UNDO.

DEFINE VAR hBuffer AS HANDLE NO-UNDO.
DEFINE VAR hField  AS HANDLE NO-UNDO.

hBuffer = BUFFER RowObject:HANDLE.
IF VALID-HANDLE(hBuffer) THEN
DO:
    hField = hBuffer:BUFFER-FIELD(xFieldName).
    IF VALID-HANDLE(hField) THEN
    DO:
        RETURN hField:BUFFER-VALUE().
    END.
END.

RETURN.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initializeObject dTables  _DB-REQUIRED
PROCEDURE initializeObject :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/



  /* Code placed here will execute PRIOR to standard behavior. */
  
  RUN SUPER.

  /* Code placed here will execute AFTER standard behavior.    */
  /*
  DEFINE VAR xDataSource AS CHARACTER NO-UNDO.
  {get DataSource xDataSource}.
  IF xDataSource <> ? THEN
  DO:
      {set AutoCommit NO}.
      {set CommitSource xDataSource}.
  END.
  */

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postTransactionValidate dTables  _DB-REQUIRED
PROCEDURE postTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
FIND LAST RowObjUpd NO-ERROR.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postUpdate dTables  _DB-REQUIRED
PROCEDURE postUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer   AS HANDLE NO-UNDO.
DEFINE VAR hField                AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preCreate dTables  _DB-REQUIRED
PROCEDURE preCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preTransactionValidate dTables  _DB-REQUIRED
PROCEDURE preTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preUpdate dTables  _DB-REQUIRED
PROCEDURE preUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

