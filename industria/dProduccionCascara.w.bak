&ANALYZE-SUSPEND _VERSION-NUMBER AB_v9r12 GUI ADM2
&ANALYZE-RESUME
/* Connected Databases 
          general         PROGRESS
*/
&Scoped-define WINDOW-NAME CURRENT-WINDOW
{adecomm/appserv.i}
DEFINE VARIABLE h_asindustria              AS HANDLE          NO-UNDO.
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS dTables 
/*------------------------------------------------------------------------

  File:  

  Description: from DATA.W - Template For SmartData objects in the ADM

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Modified:     February 24, 1999
------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */
DEFINE VARIABLE hLib AS HANDLE     NO-UNDO.

{adm2/support/customColors.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE SmartDataObject
&Scoped-define DB-AWARE yes

&Scoped-define ADM-SUPPORTED-LINKS Data-Source,Data-Target,Navigation-Target,Update-Target,Commit-Target,Filter-Target


/* Db-Required definitions. */
&IF DEFINED(DB-REQUIRED) = 0 &THEN
    &GLOBAL-DEFINE DB-REQUIRED TRUE
&ENDIF
&GLOBAL-DEFINE DB-REQUIRED-START   &IF {&DB-REQUIRED} &THEN
&GLOBAL-DEFINE DB-REQUIRED-END     &ENDIF

&Scoped-define QUERY-NAME Query-Main

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES produccion_cascara

/* Definitions for QUERY Query-Main                                     */
&Scoped-Define ENABLED-FIELDS  id_empresa bolsas_disponibles id_sucursal id_sucursal_ubicacion id_turno~
 id_produccion id_posicion_ubicacion id_locacion_ubicacion id_etiqueta~
 id_empresa_ubicacion id_supervisor id_capataz id_articulo Fecha~
 cantidad_bolsas observaciones c_usuario c_fecha c_hora id_tipotambor nromov~
 anio codigo_prod desde_bolsa hasta_bolsa nro_prensa responsable supervisor~
 tipo
&Scoped-define ENABLED-FIELDS-IN-produccion_cascara id_empresa id_sucursal ~
id_sucursal_ubicacion id_turno id_produccion id_posicion_ubicacion ~
id_locacion_ubicacion id_etiqueta id_empresa_ubicacion id_supervisor ~
id_capataz id_articulo Fecha cantidad_bolsas observaciones c_usuario ~
c_fecha c_hora id_tipotambor nromov anio codigo_prod desde_bolsa ~
hasta_bolsa nro_prensa responsable supervisor tipo 
&Scoped-Define DATA-FIELDS  id_empresa bolsas_disponibles id_sucursal id_sucursal_ubicacion id_turno~
 id_produccion id_posicion_ubicacion id_locacion_ubicacion id_etiqueta~
 id_empresa_ubicacion id_supervisor id_capataz id_articulo Fecha~
 cantidad_bolsas observaciones c_usuario c_fecha c_hora id_tipotambor nromov~
 anio codigo_prod desde_bolsa hasta_bolsa nro_prensa responsable supervisor~
 tipo
&Scoped-define DATA-FIELDS-IN-produccion_cascara id_empresa id_sucursal ~
id_sucursal_ubicacion id_turno id_produccion id_posicion_ubicacion ~
id_locacion_ubicacion id_etiqueta id_empresa_ubicacion id_supervisor ~
id_capataz id_articulo Fecha cantidad_bolsas observaciones c_usuario ~
c_fecha c_hora id_tipotambor nromov anio codigo_prod desde_bolsa ~
hasta_bolsa nro_prensa responsable supervisor tipo 
&Scoped-Define MANDATORY-FIELDS  id_empresa id_sucursal id_sucursal_ubicacion id_turno Fecha
&Scoped-Define APPLICATION-SERVICE 
&Scoped-Define ASSIGN-LIST 
&Scoped-Define DATA-FIELD-DEFS "dproduccioncascara.i"
&Scoped-define QUERY-STRING-Query-Main FOR EACH produccion_cascara NO-LOCK ~
    BY produccion_cascara.Fecha DESCENDING INDEXED-REPOSITION
{&DB-REQUIRED-START}
&Scoped-define OPEN-QUERY-Query-Main OPEN QUERY Query-Main FOR EACH produccion_cascara NO-LOCK ~
    BY produccion_cascara.Fecha DESCENDING INDEXED-REPOSITION.
{&DB-REQUIRED-END}
&Scoped-define TABLES-IN-QUERY-Query-Main produccion_cascara
&Scoped-define FIRST-TABLE-IN-QUERY-Query-Main produccion_cascara


/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME


/* ************************  Function Prototypes ********************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getBolsasDisponibles dTables  _DB-REQUIRED
FUNCTION getBolsasDisponibles RETURNS INTEGER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getCantidadSucursal dTables  _DB-REQUIRED
FUNCTION getCantidadSucursal RETURNS INTEGER
  (INPUT piSucursal AS INTEGER)  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getCantidadTotalDisponible dTables  _DB-REQUIRED
FUNCTION getCantidadTotalDisponible RETURNS INTEGER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getCantidadTotalProducida dTables  _DB-REQUIRED
FUNCTION getCantidadTotalProducida RETURNS INTEGER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getNextNumeroProduccion dTables  _DB-REQUIRED
FUNCTION getNextNumeroProduccion RETURNS INTEGER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD reprocesarProduccion dTables  _DB-REQUIRED
FUNCTION reprocesarProduccion RETURNS LOGICAL
  (INPUT piEmpresa AS INTEGER,
   INPUT piSucursal   AS INTEGER,
   INPUT piTipoTambor AS INTEGER,
   INPUT piNroMov     AS INTEGER,
   INPUT piProduccion AS INTEGER,
   INPUT piCantidad   AS INTEGER)  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}


/* ***********************  Control Definitions  ********************** */

{&DB-REQUIRED-START}

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY Query-Main FOR 
      produccion_cascara
    FIELDS(produccion_cascara.id_empresa
      produccion_cascara.id_sucursal
      produccion_cascara.id_sucursal_ubicacion
      produccion_cascara.id_turno
      produccion_cascara.id_produccion
      produccion_cascara.id_posicion_ubicacion
      produccion_cascara.id_locacion_ubicacion
      produccion_cascara.id_etiqueta
      produccion_cascara.id_empresa_ubicacion
      produccion_cascara.id_supervisor
      produccion_cascara.id_capataz
      produccion_cascara.id_articulo
      produccion_cascara.Fecha
      produccion_cascara.cantidad_bolsas
      produccion_cascara.observaciones
      produccion_cascara.c_usuario
      produccion_cascara.c_fecha
      produccion_cascara.c_hora
      produccion_cascara.id_tipotambor
      produccion_cascara.nromov
      produccion_cascara.anio
      produccion_cascara.codigo_prod
      produccion_cascara.desde_bolsa
      produccion_cascara.hasta_bolsa
      produccion_cascara.nro_prensa
      produccion_cascara.responsable
      produccion_cascara.supervisor
      produccion_cascara.tipo) SCROLLING.
&ANALYZE-RESUME
{&DB-REQUIRED-END}


/* ************************  Frame Definitions  *********************** */


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: SmartDataObject
   Allow: Query
   Frames: 0
   Add Fields to: Neither
   Other Settings: PERSISTENT-ONLY COMPILE APPSERVER DB-AWARE
 */

/* This procedure should always be RUN PERSISTENT.  Report the error,  */
/* then cleanup and return.                                            */
IF NOT THIS-PROCEDURE:PERSISTENT THEN DO:
  MESSAGE "{&FILE-NAME} should only be RUN PERSISTENT.":U
          VIEW-AS ALERT-BOX ERROR BUTTONS OK.
  RETURN.
END.

&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW dTables ASSIGN
         HEIGHT             = 1.62
         WIDTH              = 46.6.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB dTables 
/* ************************* Included-Libraries *********************** */

{src/adm2/data.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW dTables
  VISIBLE,,RUN-PERSISTENT                                               */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK QUERY Query-Main
/* Query rebuild information for SmartDataObject Query-Main
     _TblList          = "industria.produccion_cascara"
     _Options          = "NO-LOCK INDEXED-REPOSITION"
     _TblOptList       = "USED"
     _OrdList          = "industria.produccion_cascara.Fecha|no"
     _FldNameList[1]   > general.produccion_cascara.id_empresa
"id_empresa" "id_empresa" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[2]   > "_<CALC>"
"getBolsasDisponibles()" "bolsas_disponibles" "Disponibles" ">,>>9" "Integer" ? ? ? ? ? ? yes ? no 10.8 no
     _FldNameList[3]   > general.produccion_cascara.id_sucursal
"id_sucursal" "id_sucursal" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[4]   > general.produccion_cascara.id_sucursal_ubicacion
"id_sucursal_ubicacion" "id_sucursal_ubicacion" ? ? "integer" ? ? ? ? ? ? yes ? yes 8.2 yes
     _FldNameList[5]   > general.produccion_cascara.id_turno
"id_turno" "id_turno" ? ? "integer" ? ? ? ? ? ? yes ? yes 10.2 yes
     _FldNameList[6]   > general.produccion_cascara.id_produccion
"id_produccion" "id_produccion" ? ? "integer" ? ? ? ? ? ? yes ? no 10.8 yes
     _FldNameList[7]   > general.produccion_cascara.id_posicion_ubicacion
"id_posicion_ubicacion" "id_posicion_ubicacion" ? ? "integer" ? ? ? ? ? ? yes ? no 10.2 yes
     _FldNameList[8]   > general.produccion_cascara.id_locacion_ubicacion
"id_locacion_ubicacion" "id_locacion_ubicacion" ? ? "integer" ? ? ? ? ? ? yes ? no 7.4 yes
     _FldNameList[9]   > general.produccion_cascara.id_etiqueta
"id_etiqueta" "id_etiqueta" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[10]   > general.produccion_cascara.id_empresa_ubicacion
"id_empresa_ubicacion" "id_empresa_ubicacion" ? ? "integer" ? ? ? ? ? ? yes ? no 8.6 yes
     _FldNameList[11]   > general.produccion_cascara.id_supervisor
"id_supervisor" "id_supervisor" ? ? "integer" ? ? ? ? ? ? yes ? no 12.4 yes
     _FldNameList[12]   > general.produccion_cascara.id_capataz
"id_capataz" "id_capataz" ? ? "integer" ? ? ? ? ? ? yes ? no 10.4 yes
     _FldNameList[13]   > general.produccion_cascara.id_articulo
"id_articulo" "id_articulo" ? ? "integer" ? ? ? ? ? ? yes ? no 7.8 yes
     _FldNameList[14]   > general.produccion_cascara.Fecha
"Fecha" "Fecha" ? ? "date" ? ? ? ? ? ? yes ? yes 9.2 yes
     _FldNameList[15]   > general.produccion_cascara.cantidad_bolsas
"cantidad_bolsas" "cantidad_bolsas" "Producidas" ">>,>>9" "integer" ? ? ? ? ? ? yes ? no 10.6 yes
     _FldNameList[16]   > general.produccion_cascara.observaciones
"observaciones" "observaciones" ? ? "character" ? ? ? ? ? ? yes ? no 50 yes
     _FldNameList[17]   > general.produccion_cascara.c_usuario
"c_usuario" "c_usuario" ? ? "character" ? ? ? ? ? ? yes ? no 20 yes
     _FldNameList[18]   > general.produccion_cascara.c_fecha
"c_fecha" "c_fecha" ? ? "date" ? ? ? ? ? ? yes ? no 9.2 yes
     _FldNameList[19]   > general.produccion_cascara.c_hora
"c_hora" "c_hora" ? ? "character" ? ? ? ? ? ? yes ? no 20 yes
     _FldNameList[20]   > general.produccion_cascara.id_tipotambor
"id_tipotambor" "id_tipotambor" ? ? "integer" ? ? ? ? ? ? yes ? no 9.2 yes
     _FldNameList[21]   > general.produccion_cascara.nromov
"nromov" "nromov" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[22]   > general.produccion_cascara.anio
"anio" "anio" ? ? "integer" ? ? ? ? ? ? yes ? no 8.4 yes
     _FldNameList[23]   > general.produccion_cascara.codigo_prod
"codigo_prod" "codigo_prod" ? ? "character" ? ? ? ? ? ? yes ? no 50 yes
     _FldNameList[24]   > general.produccion_cascara.desde_bolsa
"desde_bolsa" "desde_bolsa" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[25]   > general.produccion_cascara.hasta_bolsa
"hasta_bolsa" "hasta_bolsa" ? ? "integer" ? ? ? ? ? ? yes ? no 12 yes
     _FldNameList[26]   > general.produccion_cascara.nro_prensa
"nro_prensa" "nro_prensa" ? ? "character" ? ? ? ? ? ? yes ? no 15 yes
     _FldNameList[27]   > general.produccion_cascara.responsable
"responsable" "responsable" ? ? "character" ? ? ? ? ? ? yes ? no 50 yes
     _FldNameList[28]   > general.produccion_cascara.supervisor
"supervisor" "supervisor" ? ? "character" ? ? ? ? ? ? yes ? no 50 yes
     _FldNameList[29]   > general.produccion_cascara.tipo
"tipo" "tipo" ? ? "character" ? ? ? ? ? ? yes ? no 50 yes
     _Design-Parent    is WINDOW dTables @ ( 1.14 , 2.6 )
*/  /* QUERY Query-Main */
&ANALYZE-RESUME

 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK dTables 


/* ***************************  Main Block  *************************** */

  &IF DEFINED(UIB_IS_RUNNING) <> 0 &THEN          
    RUN initializeObject.
  &ENDIF

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE beginTransactionValidate dTables  _DB-REQUIRED
PROCEDURE beginTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cLot AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE hLib AS HANDLE     NO-UNDO.

  DEFINE VARIABLE hLibCom AS HANDLE.
  RUN libCommonFunctions.p PERSISTENT SET hLibCom.
  hLib = DYNAMIC-FUNCTION('getPersistentLib' IN hLibCom, 'libTamboresIndustria.p').
  DELETE OBJECT hLibCom.
  


  FOR EACH RowObjUpd WHERE RowObjUpd.RowMod = "A" OR RowObjUpd.RowMod = "C".
    cLot = DYNAMIC-FUNCTION('getNextNroLote' IN hLib, rowObjUpd.id_sucursal, rowObjUpd.id_articulo, YEAR(rowObjUpd.fecha)).
    
    ASSIGN RowObjUpd.id_empresa            = 1
           RowObjUpd.id_sucursal_ubicacion = RowObjUpd.id_sucursal
           RowObjUpd.id_tipotambor         = 12
           RowObjUpd.nromov                = NEXT-VALUE(nromov)
           RowObjUpd.id_articulo           = 54
           RowObjUpd.id_empresa_ubicacion  = 1
           RowObjUpd.id_capataz            = 0
           RowObjUpd.id_posicion_ubicacion = 1
           RowObjUpd.id_locacion_ubicacion = 4
           RowObjUpd.id_supervisor         = 0
           RowObjUpd.id_etiqueta           = IF RowObjUpd.id_sucursal = 96 THEN NEXT-VALUE(tambores) ELSE NEXT-VALUE(tambores_famailla)
           RowObjUpd.anio                  = YEAR(RowObjUpd.fecha)
           RowObjUpd.c_fecha               = TODAY
           RowObjUpd.c_usuario             = USERID("userdb")
           RowObjUpd.c_hora                = STRING(TIME,"HH:MM:SS")
           rowObjUpd.codigo_prod           = cLot
           .
  
    RowObjUpd.changedFields = RowObjUpd.changedFields + ",id_empresa,id_sucursal_ubicacion,id_articulo,id_empresa_ubicacion,id_capataz,id_posicion_ubicacion,id_locacion_ubicacion,id_supervisor,id_etiqueta,id_turno,c_fecha,c_usuario,c_hora,id_tipotambor,nromov,anio,codigo_prod".
  END.
  
  FIND LAST RowObjUpd NO-ERROR.
  
  FOR EACH rowObjUpd WHERE rowObjUpd.rowMod = "D".
    FIND FIRST r_produccion_cascara_lote WHERE r_produccion_cascara_lote.id_sucursal_prod = rowObjUpd.id_sucursal
                                           AND r_produccion_cascara_lote.id_produccion    = rowObjUpd.id_produccion
                                         NO-LOCK NO-ERROR.
    IF AVAILABLE r_produccion_cascara_lote THEN
      RETURN "Imposible Eliminar la produccion porque se encuentra asociada a un lote.".
    
    RUN registrarStock(35).
  END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE DATA.CALCULATE dTables  DATA.CALCULATE _DB-REQUIRED
PROCEDURE DATA.CALCULATE :
/*------------------------------------------------------------------------------
  Purpose:     Calculate all the Calculated Expressions found in the
               SmartDataObject.
  Parameters:  <none>
------------------------------------------------------------------------------*/
      ASSIGN 
         rowObject.bolsas_disponibles = (getBolsasDisponibles())
      .

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI dTables  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE endTransactionValidate dTables  _DB-REQUIRED
PROCEDURE endTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
FIND LAST RowObjUpd NO-ERROR.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPosUpdate dTables  _DB-REQUIRED
PROCEDURE especialPosUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER  xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreCreate dTables  _DB-REQUIRED
PROCEDURE especialPreCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xCase AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE especialPreUpdate dTables  _DB-REQUIRED
PROCEDURE especialPreUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE    NO-UNDO.
DEFINE INPUT PARAMETER xCase   AS CHARACTER NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE fieldsWithProblems dTables  _DB-REQUIRED
PROCEDURE fieldsWithProblems :
/*------------------------------------------------------------------------------
  Purpose: In this procedure we check all conditions of BUssines Logic that the
  RowObject can give us.Returns a comma separated list in wich each element is a
  pair of field + chr(3)+  color we want to mark as irregular ones
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER cList AS CHARACTER NO-UNDO.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getField dTables  _DB-REQUIRED
PROCEDURE getField :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xFieldName AS CHARACTER NO-UNDO.

DEFINE VAR hBuffer AS HANDLE NO-UNDO.
DEFINE VAR hField  AS HANDLE NO-UNDO.

hBuffer = BUFFER RowObject:HANDLE.
IF VALID-HANDLE(hBuffer) THEN
DO:
    hField = hBuffer:BUFFER-FIELD(xFieldName).
    IF VALID-HANDLE(hField) THEN
    DO:
        RETURN hField:BUFFER-VALUE().
    END.
END.

RETURN.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE id_turnoValidate dTables  _DB-REQUIRED
PROCEDURE id_turnoValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER pcTurno AS CHARACTER NO-UNDO.

IF pcTurno = "1" OR pcTurno = "2" OR pcTurno = "3" THEN 
  RETURN "".
ELSE
  RETURN "El valor del turno es invalido.".

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initializeObject dTables  _DB-REQUIRED
PROCEDURE initializeObject :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/



  /* Code placed here will execute PRIOR to standard behavior. */
  RUN libProduccionCascara.p PERSISTENT SET hLib.
  
  RUN SUPER.

  /* Code placed here will execute AFTER standard behavior.    */
  /*
  DEFINE VAR xDataSource AS CHARACTER NO-UNDO.
  {get DataSource xDataSource}.
  IF xDataSource <> ? THEN
  DO:
      {set AutoCommit NO}.
      {set CommitSource xDataSource}.
  END.
  */

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postTransactionValidate dTables  _DB-REQUIRED
PROCEDURE postTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
FIND LAST RowObjUpd NO-ERROR.

FOR EACH rowObjUpd WHERE rowObjUpd.rowMod = "A" OR rowObjUpd.rowMod = "C".
  RUN registrarStock(33).
END.





END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE postUpdate dTables  _DB-REQUIRED
PROCEDURE postUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer   AS HANDLE NO-UNDO.
DEFINE VAR hField                AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preCreate dTables  _DB-REQUIRED
PROCEDURE preCreate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preTransactionValidate dTables  _DB-REQUIRED
PROCEDURE preTransactionValidate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE preUpdate dTables  _DB-REQUIRED
PROCEDURE preUpdate :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER hBuffer AS HANDLE NO-UNDO.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE registrarStock dTables  _DB-REQUIRED
PROCEDURE registrarStock :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER piTipoMov AS INTEGER   NO-UNDO.

/*grabo la produccion en stock*/
  
RUN y_gstkmovdep_cascara.p (rowObjUpd.id_empresa, 
                            rowObjUpd.id_sucursal,
                            12,
                            rowObjUpd.id_Produccion,
                            rowObjUpd.id_sucursal * 10,
                            rowObjUpd.id_sucursal,
                            1,
                            rowObjUpd.cantidad_bolsas,
                            piTipoMov,
                            TODAY).

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE setProduccionesLoteCompleto dTables  _DB-REQUIRED
PROCEDURE setProduccionesLoteCompleto :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE INPUT PARAMETER piEmpresaLote    AS INTEGER NO-UNDO.
  DEFINE INPUT PARAMETER piSucLote        AS INTEGER NO-UNDO.
  DEFINE INPUT PARAMETER piNroMovLote     AS INTEGER NO-UNDO.
  DEFINE INPUT PARAMETER piCantidadBolsas AS INTEGER NO-UNDO.
  
  DEFINE VARIABLE vhDataSource AS HANDLE     NO-UNDO.
  DEFINE VARIABLE viCantidad   AS INTEGER    NO-UNDO.
  DEFINE BUFFER buProd FOR rowObject.

  vhDataSource = DYNAMIC-FUNCTION('getDataSource').
  viCantidad = piCantidadBolsas.
  FOR EACH buProd WHERE buProd.bolsas_disponibles > 0 
                  NO-LOCK.
    IF viCantidad >= buProd.bolsas_disponibles THEN DO:
      RUN addQty IN vhDataSource (buProd.bolsas_disponibles, 
                                  piEmpresaLote,
                                  piSucLote,
                                  piNroMovLote,
                                  buProd.id_sucursal, 
                                  buProd.id_produccion, 
                                  "+").
      viCantidad = viCantidad - buProd.bolsas_disponibles.
      RUN refreshRow.
    END.
    ELSE DO:
      RUN addQty IN vhDataSource (viCantidad, 
                                  piEmpresaLote,
                                  piSucLote,
                                  piNroMovLote,
                                  buProd.id_sucursal, 
                                  buProd.id_produccion, 
                                  "+").
      RUN refreshRow.
      LEAVE.
    END.
  END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

/* ************************  Function Implementations ***************** */

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getBolsasDisponibles dTables  _DB-REQUIRED
FUNCTION getBolsasDisponibles RETURNS INTEGER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE viCount AS INTEGER    NO-UNDO.
  DEFINE VARIABLE iRet    AS INTEGER    NO-UNDO.

  FOR EACH r_produccion_cascara_lote 
      WHERE r_produccion_cascara_lote.id_sucursal_prod = rowObject.id_sucursal
        AND r_produccion_cascara_lote.id_produccion    = rowObject.id_produccion
      NO-LOCK.
    viCount = viCount + r_produccion_cascara_lote.cantidad.
  END.
  iRet = rowObject.cantidad - viCount.

  IF iRet < 0 THEN 
    RETURN 0.
  ELSE 
    RETURN iRet.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getCantidadSucursal dTables  _DB-REQUIRED
FUNCTION getCantidadSucursal RETURNS INTEGER
  (INPUT piSucursal AS INTEGER) :
  
  DEFINE VARIABLE viCant AS INTEGER    NO-UNDO.

  FOR EACH produccion_cascara WHERE produccion_cascara.id_sucursal = piSucursal NO-LOCK.
    viCant = viCant + produccion_cascara.cantidad.
  END.

  RETURN viCant.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getCantidadTotalDisponible dTables  _DB-REQUIRED
FUNCTION getCantidadTotalDisponible RETURNS INTEGER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE BUFFER buProd FOR rowObject.
  DEFINE VARIABLE viCant AS INTEGER    NO-UNDO.

  FIND FIRST buProd NO-LOCK NO-ERROR.
  FOR EACH buProd NO-LOCK.
    viCant = viCant + buProd.bolsas_disponibles.
  END.

  RETURN viCant.   /* Function return value. */

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getCantidadTotalProducida dTables  _DB-REQUIRED
FUNCTION getCantidadTotalProducida RETURNS INTEGER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE BUFFER buProd FOR rowObject.
  DEFINE VARIABLE viCant AS INTEGER    NO-UNDO.

  FIND FIRST buProd NO-LOCK NO-ERROR.
  FOR EACH buProd NO-LOCK.
    viCant = viCant + buProd.cantidad_bolsas.
  END.

  RETURN viCant.   /* Function return value. */

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getNextNumeroProduccion dTables  _DB-REQUIRED
FUNCTION getNextNumeroProduccion RETURNS INTEGER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE iSeq AS INTEGER    NO-UNDO.

  RUN getNextNroProduccion IN hLib (OUTPUT iSeq).
  RETURN iSeq.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

{&DB-REQUIRED-START}

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION reprocesarProduccion dTables  _DB-REQUIRED
FUNCTION reprocesarProduccion RETURNS LOGICAL
  (INPUT piEmpresa AS INTEGER,
   INPUT piSucursal   AS INTEGER,
   INPUT piTipoTambor AS INTEGER,
   INPUT piNroMov     AS INTEGER,
   INPUT piProduccion AS INTEGER,
   INPUT piCantidad   AS INTEGER) :

  IF piCantidad <= 0 THEN RETURN FALSE.

  FIND FIRST produccion_cascara WHERE produccion_cascara.id_empresa    = piEmpresa
                                  AND produccion_cascara.id_sucursal   = piSucursal
                                  AND produccion_cascara.id_tipotambor = piTipoTambor
                                  AND produccion_cascara.nromov        = piNroMov
                                  AND produccion_cascara.id_produccion = piProduccion
                                NO-ERROR.
  IF AVAILABLE produccion_cascara THEN DO:
    IF piCantidad > produccion_cascara.cantidad THEN 
      RETURN FALSE.
    ELSE DO:
      produccion_cascara.cantidad_bolsas = produccion_cascara.cantidad_bolsas - piCantidad.
      RUN y_gstkmovdep_cascara.p (produccion_cascara.id_empresa, 
                                  produccion_cascara.id_sucursal,
                                  12,
                                  produccion_cascara.id_produccion,
                                  produccion_cascara.id_sucursal,
                                  produccion_cascara.id_sucursal * 10,
                                  1,
                                  piCantidad,
                                  34,
                                  TODAY).
      RETURN TRUE.
    END.

  END.
  ELSE 
    RETURN FALSE.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

{&DB-REQUIRED-END}

