define input parameter p_suc as integer.
define input parameter p_articulo as integer.
define input parameter p_orden as integer.

define var v_tambores as integer.
define var v_tam_pedidos as integer.
define var v_kilos_pedidos as decimal format ">>>,>>>,>>9.99".
define var v_kilos_prod as decimal format ">>>,>>>,>>9.99".
define var v_kilos_despachados as decimal format ">>>,>>>,>>9.99".
define var v_kilos_stock as decimal format ">>>,>>>,>>9.99".
define var v_kilos_faltantes as decimal format ">>>,>>>,>>9.99".
define var v_kilos as integer.
define var h_con as handle.
define var v_total_tambores_of as integer.
define var v_total_kilos_of as decimal.
define var v_envase as integer.
define buffer b_tam for tambores_industria.

find comercial.sucursales where comercial.sucursales.id_sucursal = p_suc no-lock no-error.

/******************** TAMBORES DE LOTE JUGO CON OF **********************************/
FOR EACH tambores_industria NO-LOCK WHERE tambores_industria.id_sucursal_ubicacion  = p_suc
                                      AND tambores_industria.id_locacion_ubicacion  = 4
                                      AND tambores_industria.id_tipotambor          = 3
                                      AND tambores_industria.id_articulo            = p_articulo
                                      AND tambores_industria.id_contrato_of         <> ""
                                      AND tambores_industria.id_tipocontrato_of     <> 0
                                      AND tambores_industria.anio_of                <> 0,
                                    FIRST lotes_jugo OF tambores_industria WHERE lotes_jugo.estado_lote >= 2
                                    BREAK BY tambores_industria.id_contrato_of
                                          BY tambores_industria.id_lote
                                          BY tambores_industria.anio.

    ACCUMULATE tambores_industria.id_lote (count by tambores_industria.id_lote
                                                 by tambores_industria.anio) .
    v_tambores = v_tambores + 1.
    v_tam_pedidos = v_tam_pedidos + 1.
    v_kilos_pedidos = v_kilos_pedidos + tambores_industria.kilos_tambor.
        
    ACCUMULATE tambores_industria.kilos_tambor (total by tambores_industria.id_lote
                                                      by tambores_industria.anio).
        
    IF LAST-OF(tambores_industria.anio) THEN DO:
        FIND FIRST estados_lotes where estados_lotes.id_estado_lote = lotes_jugo.estado_lote no-lock no-error.      
        {i_calculo_lotes_jugo.i}
                           
        /**************** SECTOR DE DATOS DE CONTRATOS *********************************************/
        FIND FIRST contratos where contratos.id_contrato      = tambores_industria.id_contrato_of
                               and contratos.id_tipo_contrato = tambores_industria.id_tipocontrato_of
                               and contratos.anio             = tambores_industria.anio_of no-lock no-error.
            
        v_total_tambores_of = 0.
        v_total_kilos_of = 0.
        
        FOR EACH items_contratos of contratos no-lock.
            v_total_tambores_of = v_total_tambores_of + items_contratos.cantidad.
        END.
            
        FIND FIRST clientes_ventas of contratos no-lock no-error.

        IF AVAILABLE contratos THEN DO:
            ASSIGN stock_tambores.orden_fabricacion   = string(contratos.orden_fabricacion) 
                   stock_tambores.id_contrato         = contratos.id_contrato
                   stock_tambores.anio                = contratos.anio
                   stock_tambores.id_cliente          = contratos.id_cliente
                   stock_tambores.id_tipo_contrato    = contratos.id_tipo_contrato
                   stock_tambores.cantidad_total_of   = v_total_tambores_of
                   stock_tambores.kilos_total_of      = v_total_tambores_of * tambores_industria.kilos_tambor
                   stock_tambores.anio_contrato       = integer(substring(string(year(contrato.fecha)),3,2)).

            v_kilos_stock = v_kilos_stock + (v_total_tambores_of * tambores_industria.kilos_tambor).
        
            IF AVAILABLE clientes_ventas THEN ASSIGN stock_tambores.cliente             = clientes.nombre.
            ELSE ASSIGN stock_tambores.cliente             = "SIN CLIENTE ASIGNADO".
        
        END.
        /*************************************************************************************************/
        v_tambores = 0.
        
             
        IF LAST-OF(tambores_industria.id_contrato_of) THEN DO:

            FOR EACH b_tam where b_tam.id_contrato_of = contratos.id_contrato
                             and b_tam.id_tipocontrato_of = contratos.id_tipo_contrato
                             and b_tam.anio_of = contratos.anio no-lock.
                
                v_kilos_prod = v_kilos_prod + b_tam.kilos_tambor.
                
                if b_tam.id_tipo_movsto > 0 and b_tam.nro_remito > 0 then 
                    v_kilos_despachados = v_kilos_despachados + b_tam.kilos_tambor.
            END.
                    
            v_kilos_faltantes = v_kilos_pedidos - v_kilos_prod.
                    
            create info_contrato.
            assign info_contrato.orden_fabricacion  = string(contratos.orden_fabricacion)
                   info_contrato.anio_corto         = integer(substring(string(contratos.anio),3,2))
                   info_contrato.id_contrato        = contratos.id_contrato
                   info_contrato.id_tipo_contrato   = contratos.id_tipo_contrato
                   info_contrato.anio               = INTEGER(SUBSTRING(STRING(contratos.anio),3,2))
                   info_contrato.id_cliente         = clientes.id_cliente
                   info_contrato.cliente            = contratos.nombre
                   info_contrato.tambores_pedidos   = v_tam_pedidos
                   info_contrato.kilos_pedidos      = v_kilos_pedidos
                   info_contrato.kilos_producidos   = v_kilos_prod
                   info_contrato.kilos_despachados  = v_kilos_despachados
                   info_contrato.kilos_stock        = v_kilos_stock
                   info_contrato.kilos_faltante    = v_kilos_faltantes.
                         
            v_tam_pedidos = 0.
            v_kilos_pedidos = 0.
            v_kilos_prod = 0.
            v_kilos_despachados = 0.
            v_kilos_stock = 0.
            v_kilos_faltantes = 0.
        END.
    END.
END.    

/******************** TAMBORES DE LOTE JUGO SIN OF **********************************/
FOR EACH tambores_industria NO-LOCK WHERE tambores_industria.id_sucursal_ubicacion  = p_suc
                                      AND tambores_industria.id_locacion_ubicacion  = 4
                                      AND tambores_industria.id_tipotambor          = 3
                                      AND tambores_industria.id_articulo            = p_articulo 
                                      AND tambores_industria.id_contrato_of         = ""
                                      AND tambores_industria.id_tipocontrato_of     = 0
                                      AND tambores_industria.anio_of                = 0,
                                    FIRST lotes_jugo of tambores_industria where lotes_jugo.estado_lote >= 2
                                    BREAK BY tambores_industria.id_lote
                                          BY tambores_industria.anio.

    ACCUMULATE tambores_industria.id_lote (count by tambores_industria.id_lote
                                                 by tambores_industria.anio).
    v_tambores = v_tambores + 1.
    ACCUMULATE tambores_industria.kilos_tambor (total by tambores_industria.id_lote
                                                      by tambores_industria.anio).
        
    IF LAST-OF(tambores_industria.anio) THEN DO:
        FIND FIRST estados_lotes where estados_lotes.id_estado_lote = lotes_jugo.estado_lote no-lock no-error.
        {i_calculo_lotes_jugo.i}  
        v_tambores = 0.
    END.
END.
