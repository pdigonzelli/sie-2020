&ANALYZE-SUSPEND _VERSION-NUMBER AB_v9r12 GUI ADM2
&ANALYZE-RESUME
&Scoped-define WINDOW-NAME wWin
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS wWin 
/*------------------------------------------------------------------------

  File: 

  Description: from cntnrwin.w - ADM SmartWindow Template

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  History: New V9 Version - January 15, 1998
          
------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AB.              */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */
DEFINE INPUT  PARAMETER piSuc AS INTEGER    NO-UNDO.
DEFINE INPUT  PARAMETER piTip AS INTEGER    NO-UNDO.
DEFINE INPUT  PARAMETER piNro AS INTEGER    NO-UNDO.
DEFINE INPUT  PARAMETER pdFec AS DATE       NO-UNDO.


/* Local Variable Definitions ---                                       */

DEFINE VAR queryText1   AS CHARACTER INITIAL " "NO-UNDO.
DEFINE VAR querysort1   AS CHARACTER INITIAL " "NO-UNDO.
DEFINE VAR qh           AS HANDLE NO-UNDO.

DEFINE VAR iOldPage     AS INTEGER INITIAL 0.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE SmartWindow
&Scoped-define DB-AWARE no

&Scoped-define ADM-CONTAINER WINDOW

&Scoped-define ADM-SUPPORTED-LINKS Data-Target,Data-Source,Page-Target,Update-Source,Update-Target,Filter-target,Filter-Source

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME fMain

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME


/* ************************  Function Prototypes ********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getClaveInspeccion wWin 
FUNCTION getClaveInspeccion RETURNS CHARACTER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD getClaveRemito wWin 
FUNCTION getClaveRemito RETURNS CHARACTER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD queryName wWin 
FUNCTION queryName RETURNS CHARACTER
  ( /* parameter-definitions */ )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR wWin AS WIDGET-HANDLE NO-UNDO.

/* Menu Definitions                                                     */
DEFINE MENU POPUP-MENU-fMain 
       MENU-ITEM m_Query_Constructor LABEL "Query Constructor".


/* Definitions of handles for SmartObjects                              */
DEFINE VARIABLE h_dinspeccionescamiones AS HANDLE NO-UNDO.
DEFINE VARIABLE h_dinspeccionescontenedores AS HANDLE NO-UNDO.
DEFINE VARIABLE h_dyntoolbar AS HANDLE NO-UNDO.
DEFINE VARIABLE h_dyntoolbar-2 AS HANDLE NO-UNDO.
DEFINE VARIABLE h_folder AS HANDLE NO-UNDO.
DEFINE VARIABLE h_vinspeccionescamiones AS HANDLE NO-UNDO.
DEFINE VARIABLE h_vinspeccionescontenedores AS HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */

/* ************************  Frame Definitions  *********************** */

DEFINE FRAME fMain
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
         SIDE-LABELS NO-UNDERLINE THREE-D 
         AT COL 1 ROW 1
         SIZE 126.2 BY 24.76.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: SmartWindow
   Allow: Basic,Browse,DB-Fields,Query,Smart,Window
   Container Links: Data-Target,Data-Source,Page-Target,Update-Source,Update-Target,Filter-target,Filter-Source
   Design Page: 1
   Other Settings: COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW wWin ASSIGN
         HIDDEN             = YES
         TITLE              = "Inspeccion Transporte"
         HEIGHT             = 24.62
         WIDTH              = 126.2
         MAX-HEIGHT         = 33.38
         MAX-WIDTH          = 204.8
         VIRTUAL-HEIGHT     = 33.38
         VIRTUAL-WIDTH      = 204.8
         RESIZE             = no
         SCROLL-BARS        = no
         STATUS-AREA        = no
         BGCOLOR            = ?
         FGCOLOR            = ?
         THREE-D            = yes
         MESSAGE-AREA       = no
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB wWin 
/* ************************* Included-Libraries *********************** */

{src/adm2/containr.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR FRAME fMain
                                                                        */
ASSIGN 
       FRAME fMain:POPUP-MENU       = MENU POPUP-MENU-fMain:HANDLE.

IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(wWin)
THEN wWin:HIDDEN = yes.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME wWin
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL wWin wWin
ON END-ERROR OF wWin /* Inspeccion Transporte */
OR ENDKEY OF {&WINDOW-NAME} ANYWHERE DO:
  /* This case occurs when the user presses the "Esc" key.
     In a persistently run window, just ignore this.  If we did not, the
     application would exit. */
  IF THIS-PROCEDURE:PERSISTENT THEN RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL wWin wWin
ON WINDOW-CLOSE OF wWin /* Inspeccion Transporte */
DO:
  /* This ADM code must be left here in order for the SmartWindow
     and its descendents to terminate properly on exit. */
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME m_Query_Constructor
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL m_Query_Constructor wWin
ON CHOOSE OF MENU-ITEM m_Query_Constructor /* Query Constructor */
DO:
    DEFINE VAR xSDOS        AS CHARACTER    NO-UNDO.
    DEFINE VAR i            AS INTEGER      NO-UNDO.
    DEFINE VAR iPage        AS INTEGER      NO-UNDO.
    DEFINE VAR iActualPage  AS INTEGER      NO-UNDO.
    DEFINE VAR xDataSource  AS CHARACTER    NO-UNDO.
    DEFINE VAR hDataSource  AS HANDLE       NO-UNDO.

    xSDOS = DYNAMIC-FUNCTION ('getSDO').
    {get CurrentPage iActualPage}.

    DO i = 1 TO NUM-ENTRIES(xSDOS):
        qh = WIDGET-HANDLE(ENTRY(i,xSDOS)).
        {get ObjectPage iPage qh}.
        {get DataSource xDataSource qh}.
        hDataSource = WIDGET-HANDLE(xDataSource).
        IF ( iPage = iActualPage OR iPage = 0 ) AND NOT valid-handle(hDataSource)THEN
            RUN adm2/support/wquery.w ( INPUT qh ).
        ELSE
            MESSAGE 'No puede ejecutar consulta en el detalle' VIEW-AS ALERT-BOX WARNING.

    END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK wWin 


/* ***************************  Main Block  *************************** */

/* Include custom  Main Block code for SmartWindows. */
{src/adm2/windowmn.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE adm-create-objects wWin  _ADM-CREATE-OBJECTS
PROCEDURE adm-create-objects :
/*------------------------------------------------------------------------------
  Purpose:     Create handles for all SmartObjects used in this procedure.
               After SmartObjects are initialized, then SmartLinks are added.
  Parameters:  <none>
------------------------------------------------------------------------------*/
  DEFINE VARIABLE currentPage  AS INTEGER NO-UNDO.

  ASSIGN currentPage = getCurrentPage().

  CASE currentPage: 

    WHEN 0 THEN DO:
       RUN constructObject (
             INPUT  'adm2/folder.w':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'FolderLabels':U + 'Contenedor|Camion' + 'FolderTabWidth0FolderFont-1HideOnInitnoDisableOnInitnoObjectLayout':U ,
             OUTPUT h_folder ).
       RUN repositionObject IN h_folder ( 1.00 , 1.00 ) NO-ERROR.
       RUN resizeObject IN h_folder ( 24.52 , 126.00 ) NO-ERROR.

       /* Links to SmartFolder h_folder. */
       RUN addLink ( h_folder , 'Page':U , THIS-PROCEDURE ).

    END. /* Page 0 */

    WHEN 1 THEN DO:
       RUN constructObject (
             INPUT  'dinspeccionescontenedores.wDB-AWARE':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'AppServiceASUsePromptASInfoForeignFieldsRowsToBatch200CheckCurrentChangedyesRebuildOnReposnoServerOperatingModeNONEDestroyStatelessnoDisconnectAppServernoObjectNamedinspeccionescontenedoresUpdateFromSourcenoToggleDataTargetsyesOpenOnInityes':U ,
             OUTPUT h_dinspeccionescontenedores ).
       RUN repositionObject IN h_dinspeccionescontenedores ( 1.24 , 47.00 ) NO-ERROR.
       /* Size in AB:  ( 1.86 , 10.80 ) */

       RUN constructObject (
             INPUT  'vinspeccionescontenedores.w':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'DataSourceNamesUpdateTargetNamesLogicalObjectNameLogicalObjectNamePhysicalObjectNameDynamicObjectnoRunAttributeHideOnInitnoDisableOnInitnoObjectLayout':U ,
             OUTPUT h_vinspeccionescontenedores ).
       RUN repositionObject IN h_vinspeccionescontenedores ( 3.62 , 2.00 ) NO-ERROR.
       /* Size in AB:  ( 21.67 , 124.40 ) */

       RUN constructObject (
             INPUT  'adm2/dyntoolbar.w':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'FlatButtonsyesMenunoShowBorderyesToolbaryesActionGroupsTableio,Navigation,Banda1,Banda3SubModulesTableIOTypeUpdateSupportedLinksNavigation-source,Tableio-sourceToolbarBandsToolbarParentMenuToolbarAutoSizenoToolbarDrawDirectionHorizontalToolbarInitialStateLogicalObjectNameAutoResizeDisabledActionsHiddenActionsHiddenToolbarBandsHiddenMenuBandsMenuMergeOrder0EdgePixels2PanelTypeToolbarDeactivateTargetOnHidenoDisabledActionsNavigationTargetNameHideOnInitnoDisableOnInitnoObjectLayout':U ,
             OUTPUT h_dyntoolbar ).
       RUN repositionObject IN h_dyntoolbar ( 2.19 , 2.00 ) NO-ERROR.
       RUN resizeObject IN h_dyntoolbar ( 1.24 , 124.00 ) NO-ERROR.

       /* Links to SmartDataObject h_dinspeccionescontenedores. */
       RUN addLink ( h_dyntoolbar , 'Navigation':U , h_dinspeccionescontenedores ).

       /* Links to SmartDataViewer h_vinspeccionescontenedores. */
       RUN addLink ( h_dinspeccionescontenedores , 'Data':U , h_vinspeccionescontenedores ).
       RUN addLink ( h_vinspeccionescontenedores , 'Update':U , h_dinspeccionescontenedores ).
       RUN addLink ( h_dyntoolbar , 'TableIo':U , h_vinspeccionescontenedores ).

    END. /* Page 1 */

    WHEN 2 THEN DO:
       RUN constructObject (
             INPUT  'dinspeccionescamiones.wDB-AWARE':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'AppServiceASUsePromptASInfoForeignFieldsRowsToBatch200CheckCurrentChangedyesRebuildOnReposnoServerOperatingModeNONEDestroyStatelessnoDisconnectAppServernoObjectNamedinspeccionescamionesUpdateFromSourcenoToggleDataTargetsyesOpenOnInityes':U ,
             OUTPUT h_dinspeccionescamiones ).
       RUN repositionObject IN h_dinspeccionescamiones ( 1.00 , 84.00 ) NO-ERROR.
       /* Size in AB:  ( 1.86 , 10.80 ) */

       RUN constructObject (
             INPUT  'vinspeccionescamiones.w':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'DataSourceNamesUpdateTargetNamesLogicalObjectNameLogicalObjectNamePhysicalObjectNameDynamicObjectnoRunAttributeHideOnInitnoDisableOnInitnoObjectLayout':U ,
             OUTPUT h_vinspeccionescamiones ).
       RUN repositionObject IN h_vinspeccionescamiones ( 3.86 , 3.00 ) NO-ERROR.
       /* Size in AB:  ( 16.29 , 121.60 ) */

       RUN constructObject (
             INPUT  'adm2/dyntoolbar.w':U ,
             INPUT  FRAME fMain:HANDLE ,
             INPUT  'FlatButtonsyesMenunoShowBorderyesToolbaryesActionGroupsTableio,Navigation,Banda1,Banda2SubModulesTableIOTypeUpdateSupportedLinksNavigation-source,Tableio-sourceToolbarBandsToolbarParentMenuToolbarAutoSizenoToolbarDrawDirectionHorizontalToolbarInitialStateLogicalObjectNameAutoResizeDisabledActionsHiddenActionsFilter,Customaction,Excelaction,PrintactionHiddenToolbarBandsHiddenMenuBandsMenuMergeOrder0EdgePixels2PanelTypeToolbarDeactivateTargetOnHidenoDisabledActionsNavigationTargetNameHideOnInitnoDisableOnInitnoObjectLayout':U ,
             OUTPUT h_dyntoolbar-2 ).
       RUN repositionObject IN h_dyntoolbar-2 ( 2.19 , 3.00 ) NO-ERROR.
       RUN resizeObject IN h_dyntoolbar-2 ( 1.24 , 121.00 ) NO-ERROR.

       /* Links to SmartDataObject h_dinspeccionescamiones. */
       RUN addLink ( h_dyntoolbar-2 , 'Navigation':U , h_dinspeccionescamiones ).

       /* Links to SmartDataViewer h_vinspeccionescamiones. */
       RUN addLink ( h_dinspeccionescamiones , 'Data':U , h_vinspeccionescamiones ).
       RUN addLink ( h_vinspeccionescamiones , 'Update':U , h_dinspeccionescamiones ).
       RUN addLink ( h_dyntoolbar-2 , 'TableIo':U , h_vinspeccionescamiones ).

       /* Adjust the tab order of the smart objects. */
    END. /* Page 2 */

  END CASE.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE changePage wWin 
PROCEDURE changePage :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  /* Code placed here will execute PRIOR to standard behavior. */
  {adm2/support/changePage.i}.  
  
  RUN SUPER.

  /* Code placed here will execute AFTER standard behavior.    */

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE createButtons wWin 
PROCEDURE createButtons :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  /*
  /*Boton de Imprimir Cont*/
  RUN ToolBarButtonAdd.p (h_dyntoolbar, 
                          "printContAction", 
                          "btnPrintContAction", 
                          "Imprimir Inspeccion Contenedor", 
                          "print.bmp", 
                          "btnPrintCont", 
                          "BANDA2").
  */
  /*Boton de Imprimir Cam*/
  RUN ToolBarButtonAdd.p (h_dyntoolbar-2, 
                          "printCamAction", 
                          "tlbPrintCam", 
                          "Imprimir Inspeccion Camion", 
                          "print.bmp", 
                          "tlbPrintCam", 
                          "BANDA2").

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE createObjects wWin 
PROCEDURE createObjects :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  /* Code placed here will execute PRIOR to standard behavior. */

  RUN SUPER.

  RUN initPages("2").
  RUN createButtons.
  
  RUN selectPage IN THIS-PROCEDURE (1).

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI wWin  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Delete the WINDOW we created */
  IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(wWin)
  THEN DELETE WIDGET wWin.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI wWin  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  VIEW FRAME fMain IN WINDOW wWin.
  {&OPEN-BROWSERS-IN-QUERY-fMain}
  VIEW wWin.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE exitObject wWin 
PROCEDURE exitObject :
/*------------------------------------------------------------------------------
  Purpose:  Window-specific override of this procedure which destroys 
            its contents and itself.
    Notes:  
------------------------------------------------------------------------------*/

  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getQuery wWin 
PROCEDURE getQuery :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER queryText AS CHARACTER NO-UNDO.
    queryText = queryText1.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getSort wWin 
PROCEDURE getSort :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER querySort AS CHARACTER NO-UNDO.
    querySort = querySort1.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initializeObject wWin 
PROCEDURE initializeObject :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  /* Code placed here will execute PRIOR to standard behavior. */

  RUN SUPER.

  DYNAMIC-FUNCTION('enableActions' IN h_dyntoolbar, "exitAction").  
  SUBSCRIBE TO "tlbExit" IN h_dyntoolbar.

  DYNAMIC-FUNCTION('enableActions' IN h_dyntoolbar, "printAction").  
  SUBSCRIBE TO "tlbPrint" IN h_dyntoolbar.

  DYNAMIC-FUNCTION('enableActions' IN h_dyntoolbar-2, "exitAction").  
  SUBSCRIBE TO "tlbExit" IN h_dyntoolbar-2.

  DYNAMIC-FUNCTION('enableActions' IN h_dyntoolbar-2, "printCamAction").  
  SUBSCRIBE TO "tlbPrintCam" IN h_dyntoolbar-2.

  DYNAMIC-FUNCTION('enableActions' IN h_dyntoolbar, "customAction").  
  SUBSCRIBE TO "tlbCustom" IN h_dyntoolbar.
  
  RUN initQuery.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initQuery wWin 
PROCEDURE initQuery :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cCol AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE cOps AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE cVal AS CHARACTER  NO-UNDO.

  IF piNro <> 0 THEN DO:
    cCol = "id_sucursal_remito,id_tipo_movsto,nro_remito".
    cOps = "=,=,=".
    cVal = STRING(piSuc) + CHR(1) +
           STRING(piTip) + CHR(1) + 
           STRING(piNro).


    DYNAMIC-FUNCTION('assignQuerySelection' IN h_dInspeccionesCamiones, cCol, cVal, cOps).
    DYNAMIC-FUNCTION('assignQuerySelection' IN h_dInspeccionesContenedores, cCol, cVal, cOps).
    DYNAMIC-FUNCTION('openQuery' IN h_dInspeccionesCamiones).    
    DYNAMIC-FUNCTION('openQuery' IN h_dInspeccionesContenedores).    
  END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE prepareOperariosCamion wWin 
PROCEDURE prepareOperariosCamion :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cAux AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE crlf AS CHARACTER  NO-UNDO.

  crlf = CHR(10).

  /* para inspeccion de camiones */
  FOR FIRST inspeccion_camiones
      WHERE inspeccion_camiones.id_sucursal_remito  = piSuc
        AND inspeccion_camiones.id_tipo_movsto      = piTip
        AND inspeccion_camiones.nro_remito          = piNro
        AND inspeccion_camiones.id_inspeccion       = DYNAMIC-FUNCTION('columnValue' IN h_dInspeccionesCamiones, 'id_inspeccion')
      .

    FOR EACH r_inspeccion_operario
        WHERE r_inspeccion_operario.id_sucursal_remito  = piSuc
          AND r_inspeccion_operario.id_tipo_movsto      = piTip
          AND r_inspeccion_operario.nro_remit           = piNro
          AND r_inspeccion_operario.id_inspeccion       = inspeccion_camiones.id_inspeccion, 
        FIRST operarios_carga 
        WHERE operarios_carga.id_operario = r_inspeccion_operario.id_operario NO-LOCK
        BY operarios_carga.funcion.


      cAux = cAux + operarios_carga.funcion + ": " + operarios_carga.apellido + ", " + operarios_carga.nombre + crlf.
      
    END.

    cAux = SUBSTRING(cAux, 1, LENGTH(cAux) - 1).
    ASSIGN inspeccion_camion.observaciones = cAux.
  END.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE prepareOperariosContenedor wWin 
PROCEDURE prepareOperariosContenedor :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cAux AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE crlf AS CHARACTER  NO-UNDO.

  crlf = CHR(10).

  /* para inspeccion de contenedores */
  FOR FIRST inspeccion_contenedores
      WHERE inspeccion_contenedores.id_sucursal_remito  = piSuc
        AND inspeccion_contenedores.id_tipo_movsto      = piTip
        AND inspeccion_contenedores.nro_remito          = piNro
        AND inspeccion_contenedores.id_inspeccion       = DYNAMIC-FUNCTION('columnValue' IN h_dInspeccionesContenedores, 'id_inspeccion')
      .

    FOR EACH r_inspeccion_operario
        WHERE r_inspeccion_operario.id_sucursal_remito  = piSuc
          AND r_inspeccion_operario.id_tipo_movsto      = piTip
          AND r_inspeccion_operario.nro_remit           = piNro
          AND r_inspeccion_operario.id_inspeccion       = inspeccion_contenedores.id_inspeccion, 
        FIRST operarios_carga 
        WHERE operarios_carga.id_operario = r_inspeccion_operario.id_operario NO-LOCK
        BY operarios_carga.funcion.


      cAux = cAux + operarios_carga.funcion + ": " + operarios_carga.apellido + ", " + operarios_carga.nombre + crlf.
      
    END.

    cAux = SUBSTRING(cAux, 1, LENGTH(cAux) - 1).
    ASSIGN inspeccion_contenedores.observaciones = cAux.
  
  END.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE setSort wWin 
PROCEDURE setSort :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER xSort AS CHARACTER NO-UNDO.

querySort1 = xSort.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE tlbCustom wWin 
PROCEDURE tlbCustom :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

  DEFINE VARIABLE cKey AS CHARACTER  NO-UNDO.
  cKey = getClaveInspeccion().

  RUN wOperariosCarga.w (cKey).

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE tlbExit wWin 
PROCEDURE tlbExit :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE tlbPrint wWin 
PROCEDURE tlbPrint :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cFiltro AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE RB-MEMO-FILE AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE cOps AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE hLibRem AS HANDLE     NO-UNDO.

  DEFINE VARIABLE hLibCom AS HANDLE.
  RUN libCommonFunctions.p PERSISTENT SET hLibCom.
  hLibRem   = DYNAMIC-FUNCTION('getPersistentLib' IN hLibCom, 'libRemitos.p'). 
  DELETE OBJECT hLibCom.


  cFiltro = DYNAMIC-FUNCTION('getQueryWhere' IN h_dInspeccionesContenedores).
  cFiltro = REPLACE(cFiltro, "INDEXED-REPOSITION", "").
  cFiltro = REPLACE(cFiltro, "'", "").
  cFiltro = REPLACE(cFiltro, "FOR EACH inspeccion_contenedores WHERE", "").
  cFiltro = REPLACE(cFiltro, "NO-LOCK", "").
  cFiltro = REPLACE(cFiltro, "BY tambores_industria.id_lote", "").
  cFiltro = REPLACE(cFiltro, "BY tambores_industria.id_tambor", "").


  cOps = DYNAMIC-FUNCTION('getOperariosCarga' IN hLibRem, piSuc, piTip, piNro).
  cOps = REPLACE(cOps, CHR(10), "|").
  cOps = "operarios=" + cOps.

                    
  RUN  aderb\_prntrb2("n:\industria\reports_9.prl", /* RB-REPORT-LIBRARY */
                        "inspeccion_contenedor",                    /* RB-REPORT-NAME */
                        "",                             /* RB-DB-CONNECTION */
                        "O",                             /* RB-INCLUDE-RECORDS */
                        cFiltro,                              /* RB-FILTER */
                        RB-MEMO-FILE,                              /* RB-MEMO-FILE */
                        "D",                             /* RB-PRINT-DESTINATION */
                        "?",                              /* RB-PRINTER-NAME */
                        "",                              /* RB-PRINTER-PORT */
                        "",                              /* RB-OUTPUT-FILE */
                        1,                              /* RB-NUMBER-COPIES  - zero */                  
                        0,                              /* RB-BEGIN-PAGE - zero */
                        0,                              /* RB-END-PAGE - zero */
                        no,                              /* RB-TEST-PATTERN */
                        "Inspeccion Transporte",         /* RB-WINDOW-TITLE */
                        yes,                           /* RB-DISPLAY-ERRORS */
                        yes,                           /* RB-DISPLAY-STATUS */
                        no,                              /* RB-NO-WAIT */
                        cOps /* RB-OTHER-PARAMETERS */,
                        "").   


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE tlbPrintCam wWin 
PROCEDURE tlbPrintCam :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cFiltro AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE RB-MEMO-FILE AS CHARACTER INITIAL ""  NO-UNDO.
  DEFINE VARIABLE cOps AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE hLibRem AS HANDLE     NO-UNDO.

  DEFINE VARIABLE hLibCom AS HANDLE.
  RUN libCommonFunctions.p PERSISTENT SET hLibCom.
  hLibRem   = DYNAMIC-FUNCTION('getPersistentLib' IN hLibCom, 'libRemitos.p'). 
  DELETE OBJECT hLibCom.

  cFiltro = DYNAMIC-FUNCTION('getQueryWhere' IN h_dInspeccionesCamiones).
  cFiltro = REPLACE(cFiltro, "INDEXED-REPOSITION", "").
  cFiltro = REPLACE(cFiltro, "'", "").
  cFiltro = REPLACE(cFiltro, "FOR EACH inspeccion_camiones WHERE", "").
  cFiltro = REPLACE(cFiltro, "NO-LOCK", "").
  cFiltro = REPLACE(cFiltro, "BY tambores_industria.id_lote", "").
  cFiltro = REPLACE(cFiltro, "BY tambores_industria.id_tambor", "").
  /*cFiltro = "inspeccion_camiones.id_inspeccion = 2". /* + DYNAMIC-FUNCTION('columnValue' IN h_dInspeccionesCamiones, 'id_inspeccion').*/*/


  cOps = DYNAMIC-FUNCTION('getOperariosCarga' IN hLibRem, piSuc, piTip, piNro).
  cOps = REPLACE(cOps, CHR(10), "|").
  cOps = "operarios=" + cOps.
                    
    RUN  aderb\_prntrb2(
                      "n:\industria\reports_9.prl", /* RB-REPORT-LIBRARY */
                       "inspeccion_camion",                    /* RB-REPORT-NAME */
                       "",                             /* RB-DB-CONNECTION */
                       "O",                             /* RB-INCLUDE-RECORDS */
                       cFiltro,                              /* RB-FILTER */
                       RB-MEMO-FILE,                              /* RB-MEMO-FILE */
                       "D",                             /* RB-PRINT-DESTINATION */
                       "?",                              /* RB-PRINTER-NAME */
                       "",                              /* RB-PRINTER-PORT */
                       "",                              /* RB-OUTPUT-FILE */
                       1,                   /* RB-NUMBER-COPIES  - zero */                  
                       0,                              /* RB-BEGIN-PAGE - zero */
                       0,                              /* RB-END-PAGE - zero */
                       no,                              /* RB-TEST-PATTERN */
                       "Inspeccion Transporte",         /* RB-WINDOW-TITLE */
                       yes,                           /* RB-DISPLAY-ERRORS */
                       yes,                           /* RB-DISPLAY-STATUS */
                       no,                              /* RB-NO-WAIT */
                       cOps /* RB-OTHER-PARAMETERS */,
                       ""
                     ).

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

/* ************************  Function Implementations ***************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getClaveInspeccion wWin 
FUNCTION getClaveInspeccion RETURNS CHARACTER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cRet AS CHARACTER  NO-UNDO.
  DEFINE VARIABLE iIns AS INTEGER    NO-UNDO.

  cRet = getClaveRemito().

  iIns = DYNAMIC-FUNCTION('columnValue' IN h_dInspeccionesCamiones, 'id_inspeccion').

  IF iIns = ? THEN
    iIns = DYNAMIC-FUNCTION('columnValue' IN h_dInspeccionesContenedores, 'id_inspeccion').

  cRet = cRet + CHR(1) + STRING(iIns).


  RETURN cRet.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION getClaveRemito wWin 
FUNCTION getClaveRemito RETURNS CHARACTER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  DEFINE VARIABLE cRet AS CHARACTER  NO-UNDO.

  cRet = STRING(piSuc) + CHR(1) + 
         STRING(piTip) + CHR(1) +
         STRING(piNro) + CHR(1) + 
         STRING(pdFec).

  RETURN cRet.

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION queryName wWin 
FUNCTION queryName RETURNS CHARACTER
  ( /* parameter-definitions */ ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN "".   /* Function return value. */

END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

