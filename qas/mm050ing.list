...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 1   

{} Line Blk
-- ---- ---
      1     
      2     /*------------------------------------------------------------------
      2     ------
      3         File        : mm050ing.p
      4         Purpose     : 
      5     
      6         Syntax      :
      7     
      8         Description : 
      9     
     10         Author(s)   : pdigonzelli
     11         Created     : Sun Dec 20 19:25:32 ACT 2015
     12         Notes       :
     13       ------------------------------------------------------------------
     13     ----*/
     14     
     15     /* ***************************  Definitions  ***********************
     15     *** */
     16     
     17     
     18     
     19     ROUTINE-LEVEL ON ERROR UNDO, THROW.
     20     SESSION:NUMERIC-FORMAT = 'european'.
     21     
     22     FUNCTION devuelvefechaoperativa RETURNS DATE
     23         ( INPUT pfecha AS DATE, INPUT phora AS CHARACTER)  FORWARD.
     24     
     25     FUNCTION nroPesada RETURNS INTEGER
     26         ( INPUT IBALANZA AS INTEGER, INPUT IPESASA AS INTEGER)  FORWARD.
     27     
     28     FUNCTION WLOG RETURNS LOGICAL
     29         ( INPUT ARCHIVO AS CHARACTER, INPUT TEXTO AS CHARACTER)  FORWARD
     29     .
     30     
     31     
     32     DEFINE TEMP-TABLE POSICIONES
     33         FIELD PSNROREMITO            AS CHARACTER
     34         FIELD PSFECHAREMITO          AS CHARACTER
     35         FIELD PSNROLOTE              AS CHARACTER
     36         FIELD PSFECHACOSECHA         AS CHARACTER
     37         FIELD PSMERCADO              AS CHARACTER
     38         FIELD PSMATERIAL             AS CHARACTER
     39         FIELD PSLOTEAGRICOLA         AS CHARACTER
     40         FIELD PSNRODOCUMENTOMATERIAL AS CHARACTER
     41         FIELD PSESPECIE              AS CHARACTER
     42         FIELD PSVARIEDAD             AS CHARACTER
     43         FIELD PSFINCA                AS CHARACTER
     44         FIELD PSTRAZABILIDAD         AS CHARACTER
     45         FIELD PSTIPOENVASE           AS CHARACTER
     46         FIELD PSCANTENVASES          AS CHARACTER
     47         FIELD PSCANTPES              AS CHARACTER
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 2   

{} Line Blk
-- ---- ---
     48         FIELD PSUNIDAD               AS CHARACTER
     49         FIELD PSTIPOCORTE            AS CHARACTER
     50         FIELD PSCOLOR                AS CHARACTER
     51         FIELD PSNROPESADA            AS CHARACTER
     52         FIELD PSNROPOSICIONPESADA    AS CHARACTER.
     53     
     54     DEFINE TEMP-TABLE RESPUESTAS NO-UNDO
     55         FIELD POSTATUS  AS CHARACTER
     56         FIELD POMENSAJE AS CHARACTER.
     57         
     58             
     59     
     60     
     61     
     62     DEFINE INPUT PARAMETER SSUCURSAL AS CHARACTER NO-UNDO.
     63     DEFINE INPUT PARAMETER STRANSPORTISTA AS CHARACTER NO-UNDO.
     64     DEFINE INPUT PARAMETER STRANSPORTE AS CHARACTER NO-UNDO.
     65     DEFINE INPUT PARAMETER SPESOENTRADA AS CHARACTER NO-UNDO.
     66     DEFINE INPUT PARAMETER SFECHAENTRADA AS CHARACTER NO-UNDO.
     67     DEFINE INPUT PARAMETER SHORAENTRADA AS CHARACTER NO-UNDO.
     68     DEFINE INPUT PARAMETER SPESOSALIDA AS CHARACTER NO-UNDO.
     69     DEFINE INPUT PARAMETER SFECHASALIDA AS CHARACTER NO-UNDO.
     70     DEFINE INPUT PARAMETER SHORASALIDA AS CHARACTER NO-UNDO.
     71     DEFINE INPUT PARAMETER SPESODESCARTE AS CHARACTER NO-UNDO.
     72     DEFINE INPUT PARAMETER SPESONETO AS CHARACTER NO-UNDO.
     73     DEFINE INPUT PARAMETER SNROPESADA AS CHARACTER NO-UNDO.
     74     DEFINE INPUT PARAMETER TABLE FOR POSICIONES.
     75     DEFINE OUTPUT PARAMETER TABLE FOR RESPUESTAS.
     76     
     77     
     78     
     79     
     80     DEFINE VARIABLE VIBALANZA           AS INTEGER   NO-UNDO.
     81     DEFINE VARIABLE nm                  AS CHARACTER NO-UNDO.
     82     DEFINE VARIABLE hProd               AS HANDLE    NO-UNDO.
     83     DEFINE VARIABLE i                   AS INTEGER   NO-UNDO.
     84     DEFINE VARIABLE vposicion           AS INTEGER   NO-UNDO.
     85     DEFINE VARIABLE v1                  AS INTEGER   NO-UNDO.
     86     DEFINE VARIABLE v2                  AS INTEGER   NO-UNDO.
     87     DEFINE VARIABLE vtipocosecha        AS INTEGER   NO-UNDO.
     88     DEFINE VARIABLE vunioneuropea       AS LOGICAL   NO-UNDO.
     89     DEFINE VARIABLE vchina              AS LOGICAL   NO-UNDO.
     90     DEFINE VARIABLE vusa                AS LOGICAL   NO-UNDO.
     91     DEFINE VARIABLE vsucursaletiqueta   AS INTEGER   NO-UNDO.
     92     DEFINE VARIABLE vorigenorigen       AS INTEGER   NO-UNDO.
     93     DEFINE VARIABLE vfechacosecha       AS DATE      NO-UNDO.
     94     DEFINE VARIABLE vfincasenasa        AS INTEGER   NO-UNDO.
     95     DEFINE VARIABLE vlotesenasa         AS INTEGER   NO-UNDO.
     96     DEFINE VARIABLE vcertificado        AS CHARACTER NO-UNDO.
     97     DEFINE VARIABLE vpesonetoticket     AS DECIMAL   NO-UNDO DECIMALS 3.
     98     DEFINE VARIABLE laceptado           AS LOGICAL   NO-UNDO.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 3   

{} Line Blk
-- ---- ---
     99     DEFINE VARIABLE ctipocosecha        AS CHARACTER NO-UNDO.
    100     DEFINE VARIABLE vcertunion          AS CHARACTER NO-UNDO.
    101     DEFINE VARIABLE vcertchina          AS CHARACTER NO-UNDO.
    102     DEFINE VARIABLE ctiposervicio       AS CHARACTER NO-UNDO.
    103     DEFINE VARIABLE cenvase             AS CHARACTER NO-UNDO.
    104     DEFINE VARIABLE cvariedad           AS CHARACTER NO-UNDO.
    105     DEFINE VARIABLE ccolor              AS CHARACTER NO-UNDO.
    106     DEFINE VARIABLE clote               AS CHARACTER NO-UNDO.
    107     DEFINE VARIABLE cproveedor          AS CHARACTER NO-UNDO.
    108     DEFINE VARIABLE cmateriaprima       AS CHARACTER NO-UNDO.
    109     DEFINE VARIABLE corigensap          AS CHARACTER NO-UNDO.
    110     DEFINE VARIABLE ccodigotrazabilidad AS CHARACTER NO-UNDO.
    111     DEFINE VARIABLE vtiposervicio       AS INTEGER   NO-UNDO.
    112     DEFINE VARIABLE venvase             AS INTEGER   NO-UNDO.
    113     DEFINE VARIABLE cmercado            AS CHARACTER NO-UNDO.
    114     DEFINE VARIABLE vcolor              AS INTEGER   NO-UNDO.
    115     DEFINE VARIABLE iarticulo           AS INTEGER   NO-UNDO.
    116     DEFINE VARIABLE vpesadasap          AS INTEGER   NO-UNDO.
    117     DEFINE VARIABLE vzona_up            AS CHARACTER NO-UNDO.
    118     DEFINE VARIABLE vrenspa             AS CHARACTER NO-UNDO.
    119     DEFINE VARIABLE vordencomprasap     AS CHARACTER NO-UNDO.
    120     DEFINE VARIABLE vposordencomprasap  AS INTEGER   NO-UNDO.
    121     DEFINE VARIABLE vpesoenvasesentrada AS DECIMAL   NO-UNDO.
    122     DEFINE VARIABLE vvariedad           AS INTEGER   NO-UNDO.
    123     DEFINE VARIABLE vvariedadsap        AS INTEGER   NO-UNDO.
    124     DEFINE VARIABLE vbalanza            AS INTEGER   NO-UNDO.
    125     DEFINE VARIABLE vpesada             AS INTEGER   NO-UNDO.
    126     DEFINE VARIABLE vsucursal           AS INTEGER   NO-UNDO.
    127     DEFINE VARIABLE vsucplaya           AS INTEGER   NO-UNDO.
    128     DEFINE VARIABLE vtipomov            AS INTEGER   NO-UNDO.
    129     DEFINE VARIABLE vsucorigen          AS INTEGER   NO-UNDO.
    130     DEFINE VARIABLE vproveedor          AS INTEGER   NO-UNDO.
    131     DEFINE VARIABLE vpesodescarte       AS DECIMAL   NO-UNDO DECIMALS 3.
    132     DEFINE VARIABLE vsucursalpacking    AS INTEGER   NO-UNDO.
    133     DEFINE VARIABLE vproveedororigen    AS INTEGER   NO-UNDO.
    134     DEFINE VARIABLE vorigen             AS INTEGER   NO-UNDO.
    135     DEFINE VARIABLE vmateriaprima       AS INTEGER   NO-UNDO.
    136     DEFINE VARIABLE vlote               AS INTEGER   NO-UNDO.
    137     DEFINE VARIABLE vetiqueta           AS INTEGER   NO-UNDO.
    138     DEFINE VARIABLE vdetalletransporte  AS INTEGER   NO-UNDO.
    139     DEFINE VARIABLE vdestinopacking     AS INTEGER   NO-UNDO.
    140     DEFINE VARIABLE vdescarte           AS DECIMAL   NO-UNDO.
    141     DEFINE VARIABLE vcalidadbalanza     AS INTEGER   NO-UNDO.
    142     DEFINE VARIABLE vhorasalida         AS CHARACTER NO-UNDO.
    143     DEFINE VARIABLE vhoraentrada        AS CHARACTER NO-UNDO.
    144     DEFINE VARIABLE vfinca              AS LOGICAL   NO-UNDO.
    145     DEFINE VARIABLE vfechasalida        AS DATE      NO-UNDO.
    146     DEFINE VARIABLE vfecharemito        AS DATE      NO-UNDO.
    147     DEFINE VARIABLE vfechaoperativa     AS DATE      NO-UNDO.
    148     DEFINE VARIABLE vfechaentrada       AS DATE      NO-UNDO.
    149     DEFINE VARIABLE vcodbarrasap        AS CHARACTER NO-UNDO.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 4   

{} Line Blk
-- ---- ---
    150     DEFINE VARIABLE vcantenvasesentrada AS DECIMAL   NO-UNDO.
    151     DEFINE VARIABLE pcode               AS CHARACTER FORMAT "x" NO-UNDO.
    152     DEFINE VARIABLE porden              AS CHARACTER FORMAT "x(10)" NO-U
    152     NDO.
    153     DEFINE VARIABLE pposic              AS CHARACTER FORMAT "x(10)" NO-U
    153     NDO.
    154     DEFINE VARIABLE perror              AS CHARACTER FORMAT "x(3)" NO-UN
    154     DO.
    155     DEFINE VARIABLE ptexto              AS CHARACTER FORMAT "x(100)" NO-
    155     UNDO.
    156     DEFINE VARIABLE ptipoe              AS CHARACTER FORMAT "x" NO-UNDO.
    157     DEFINE VARIABLE cerror              AS CHARACTER NO-UNDO INITIAL 'Er
    157     ror de interface de ingreso de fruta'.
    158     DEFINE VARIABLE VINDEX              AS INTEGER   NO-UNDO.
    159     DEFINE VARIABLE VNROREMITO          AS CHARACTER NO-UNDO.
    160     DEFINE VARIABLE cStatus             AS CHARACTER NO-UNDO.
    161     DEFINE VARIABLE IPESADA             AS INTEGER   NO-UNDO.
    162     
    163     DEFINE VARIABLE ORESPUESTA          AS CHARACTER NO-UNDO.
    164     DEFINE VARIABLE OMENSAJERESPUESTA   AS CHARACTER NO-UNDO.
    165     
    166     DEFINE BUFFER aux_items FOR items_stock.
    167     DEFINE BUFFER AUX_IT FOR items_stock.
    168     
    169     
    170     DEFINE VARIABLE ARCHIVO AS CHARACTER NO-UNDO.
    171     DEFINE VARIABLE VTEXTO  AS CHARACTER NO-UNDO.
    172     DEFINE VARIABLE ICOS    AS INTEGER NO-UNDO.
    173     DEFINE VARIABLE XCOD    AS CHARACTER NO-UNDO.
    174     
    175     DEFINE VARIABLE VPARTIDAENTREGA AS INTEGER NO-UNDO.
    176     DEFINE VARIABLE VPARTIDASERIALENTREGA AS INTEGER NO-UNDO.
    177     
    178     DEFINE TEMP-TABLE TTING
    179         FIELD PES  AS CHARACTER
    180         FIELD POSPES AS CHARACTER
    181         FIELD NROP AS INTEGER
    182         FIELD NROPS AS INTEGER.
    183     
    184     /* ********************  Preprocessor Definitions  *****************
    184     *** */
    185     
    186     
    187     /* ***************************  Main Block  ************************
    187     *** */
    188     
    189     nm = SESSION:NUMERIC-FORMAT.
    190     ARCHIVO = SESSION:TEMP-DIRECTORY + SNROPESADA.
    191     ORESPUESTA = 'OK'.
    192     OMENSAJERESPUESTA = 'Ingreso correcto'.  
    193     
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 5   

{} Line Blk
-- ---- ---
    194     CASE SSUCURSAL:
    195         WHEN '1101' OR WHEN '1102' THEN 
    196             VBALANZA = 2.
    197         WHEN '1200' THEN 
    198             VBALANZA = 4.
    199         OTHERWISE
    200   1     DO:
    201   1         ORESPUESTA = 'NOK'.
    202   1         OMENSAJERESPUESTA = 'Balanza inexistente ' + SSUCURSAL.  
    203   1         RETURN.
    204         END.
    205     END CASE.
    206     
    207     
    208     
    209     VTEXTO = "CABECERA: " + SSUCURSAL + "|" + 
    210         STRANSPORTISTA + "|" + STRANSPORTE + "|" + 
    211         SPESOENTRADA + "|" + SFECHAENTRADA + "|" + 
    212         SHORAENTRADA + "|" + SPESOSALIDA + "|" + 
    213         SFECHASALIDA + "|" +  SHORASALIDA + "|" + SPESODESCARTE + "|" + 
    213     SPESONETO + "|" + SNROPESADA.
    214     
    215     WLOG(ARCHIVO,VTEXTO).
    216     
    217     
    218     
    219   1 FOR EACH POSICIONES.
    220   1     ICOS =  INTEGER(SUBSTRING(POSICIONES.PSMATERIAL,4,1)).
    221   1     IF ICOS > 1 THEN
    222   2     DO:
    223             VTEXTO = ' TIPO DE COSECHA DISTINTO DE TIJERA O PROCESADO NO
    223   2  SE PERMITE ' + POSICIONES.PSMATERIAL.
    224   2         WLOG(ARCHIVO,VTEXTO).
    225   2         
    226   2         ORESPUESTA = 'NOK'.
    227             OMENSAJERESPUESTA = ' TIPO DE COSECHA DISTINTO DE TIJERA O P
    227   2 ROCESADO  NO SE PERMITE ' + POSICIONES.PSMATERIAL.  
    228   2         RETURN.        
    229   1     END.
    230   1     
    231         FIND FIRST lotes_plantacion WHERE lotes_plantacion.codigo_trazab
    231   1 ilidad = POSICIONES.PSTRAZABILIDAD NO-LOCK NO-ERROR.
    232   1     FIND FIRST lote        OF lotes_plantacion  NO-LOCK NO-ERROR.
    233   1     FIND FIRST origenes    OF lote NO-LOCK NO-ERROR.       
    234   1 
    235   1 
    236         IF NOT AVAILABLE LOTES_PLANTACION OR NOT AVAILABLE LOTE OR NOT A
    236   1 VAILABLE origenes THEN
    237   2     DO:
    238             VTEXTO = 'INCONSISTENCIA DE TRAZABILIDADES '  + POSICIONES.P
    238   2 STRAZABILIDAD.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 6   

{} Line Blk
-- ---- ---
    239   2         WLOG(ARCHIVO,VTEXTO).
    240   2         
    241   2         ORESPUESTA = 'NOK'.
    242             OMENSAJERESPUESTA = 'INCONSISTENCIA DE TRAZABILIDADES '  + P
    242   2 OSICIONES.PSTRAZABILIDAD.  
    243   2         RETURN.
    244   1     END.
    245   1 
    246         FIND mercados WHERE mercados.id_mercado_sap = posiciones.PSMERCA
    246   1 DO NO-LOCK NO-ERROR.
    247   1 
    248   1     IF NOT AVAILABLE MERCADOS  THEN
    249   2     DO:
    250             VTEXTO = 'INCONSISTENCIA DE MERCADOS '  + POSICIONES.PSTRAZA
    250   2 BILIDAD.
    251   2         WLOG(ARCHIVO,VTEXTO).
    252   2         
    253   2         ORESPUESTA = 'NOK'.
    254             OMENSAJERESPUESTA = 'INCONSISTENCIA DE MERCADOS '  + POSICIO
    254   2 NES.PSTRAZABILIDAD.  
    255   2         RETURN.
    256   1     END.
    257   1 
    258         IF POSICIONES.PSNROREMITO = ? OR POSICIONES.PSNROREMITO = '' THE
    258   1 N
    259   2     DO:
    260   2         IF INTEGER(SUBSTRING(POSICIONES.PSMATERIAL,1,3)) <> 303 THEN
    261   3         DO:
    262                 VTEXTO = 'POSICIONES S/REMITOS '  + POSICIONES.PSTRAZABI
    262   3 LIDAD.
    263   3             WLOG(ARCHIVO,VTEXTO).
    264   3             
    265   3             ORESPUESTA = 'NOK'.
    266                 OMENSAJERESPUESTA = 'POSICIONES S/REMITOS '  + POSICIONE
    266   3 S.PSTRAZABILIDAD.  
    267   3             RETURN.
    268   2         END.
    269   1     END.
    270   1 
    271   1     VTEXTO = "POSICION: " + 
    272   1         PSNROREMITO + "|" +
    273   1         PSFECHAREMITO + "|" +
    274   1         PSNROLOTE + "|" +
    275   1         PSFECHACOSECHA + "|" +
    276   1         PSMERCADO + "|" +
    277   1         PSMATERIAL + "|" +
    278   1         PSLOTEAGRICOLA + "|" +
    279   1         PSNRODOCUMENTOMATERIAL + "|" +
    280   1         PSESPECIE + "|" +
    281   1         PSVARIEDAD + "|" +
    282   1         PSFINCA + "|" +
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 7   

{} Line Blk
-- ---- ---
    283   1         PSTRAZABILIDAD + "|" +
    284   1         PSTIPOENVASE + "|" +
    285   1         PSCANTENVASES + "|" +
    286   1         PSCANTPES + "|" +
    287   1         PSUNIDAD + "|" +
    288   1         PSTIPOCORTE + "|" +
    289   1         PSCOLOR + "|" +
    290   1         PSNROPESADA + "|" +
    291   1         PSNROPOSICIONPESADA.
    292   1     
    293   1     WLOG(ARCHIVO,VTEXTO).
    294   1 
    295     END.
    296     
    297     
    298     DEFINE VARIABLE CANTPES1 AS DECIMAL NO-UNDO.
    299     DEFINE VARIABLE SUMAPES AS DECIMAL NO-UNDO.
    300     DEFINE VARIABLE VPESONETO1 AS DECIMAL NO-UNDO.
    301     DEFINE VARIABLE VPESODESCARTE1 AS DECIMAL NO-UNDO.
    302     DEFINE VARIABLE VPESOENTRADA1 AS DECIMAL NO-UNDO.
    303     DEFINE VARIABLE VPESOSALIDA1 AS DECIMAL NO-UNDO.
    304     DEFINE VARIABLE DIF1 AS DECIMAL NO-UNDO.
    305     
    306   1 FOR EACH POSICIONES.
    307   1     IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , PSCANTPES ) <> 0 THEN
    308   1         cantpes1 = DECIMAL(PSCANTPES).
    309   1     ELSE
    310   2     DO:
    311   2         IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
    312   2             cantpes1 = DECIMAL (REPLACE(PSCANTPES , ',' , '.')  ).
    313   2         ELSE
    314   2             cantpes1 = DECIMAL (REPLACE(PSCANTPES , '.' , ',') ).
    315   1     END.
    316   1     cantpes1 = TRUNCATE(cantpes1,0).
    317   1     PSCANTPES = STRING(CANTPES1).
    318   1     SUMAPES = SUMAPES + DECIMAL(PSCANTPES).
    319     END.
    320      
    321     IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , SPESONETO ) <> 0 THEN
    322         vpesoneto1 = TRUNCATE(DECIMAL(SPESONETO),0).
    323     ELSE
    324   1 DO:
    325   1     IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
    326             vpesoneto1 = TRUNCATE(DECIMAL (REPLACE(SPESONETO , ',' , '.'
    326   1 )  ),0).
    327   1     ELSE
    328   1         vpesoneto1 = DECIMAL (REPLACE(SPESONETO , '.' , ',') ).
    329     END.
    330     
    331     IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , SPESODESCARTE ) <> 0 THEN
    332         vpesodescarte1 = DECIMAL(SPESODESCARTE).
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 8   

{} Line Blk
-- ---- ---
    333     ELSE
    334   1 DO:
    335   1     IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
    336             vpesodescarte1 = DECIMAL (REPLACE(SPESODESCARTE , ',' , '.')
    336   1   ).
    337   1     ELSE
    338             vpesodescarte1 = DECIMAL (REPLACE(SPESODESCARTE , '.' , ',')
    338   1  ).
    339     END.
    340     
    341     IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , SPESOENTRADA ) <> 0 THEN
    342         vpesoentrada1 = DECIMAL(SPESOENTRADA).
    343     ELSE
    344   1 DO:
    345   1     IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
    346             vpesoentrada1 = DECIMAL (REPLACE(SPESOENTRADA , ',' , '.')  
    346   1 ).
    347   1     ELSE
    348             vpesoentrada1 = DECIMAL (REPLACE(SPESOENTRADA , '.' , ',') )
    348   1 .
    349     END.
    350     
    351     IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , SPESOSALIDA ) <> 0 THEN
    352         vpesosalida1 = DECIMAL(SPESOSALIDA).
    353     ELSE
    354   1 DO:
    355   1     IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
    356   1         vpesosalida1 = DECIMAL (REPLACE(SPESOSALIDA , ',' , '.')  ).
    357   1     ELSE
    358   1         vpesosalida1 = DECIMAL (REPLACE(SPESOSALIDA , '.' , ',') ).
    359     END.
    360     
    361     VPESOENTRADA1 = TRUNCATE(VPESOENTRADA1,0).
    362     VPESOSALIDA1 = TRUNCATE(VPESOSALIDA1,0).
    363     VPESONETO1 = TRUNCATE(VPESONETO1,0).
    364     VPESODESCARTE1 = TRUNCATE(VPESODESCARTE1,0).
    365     
    366     
    367     DIF1 = SUMAPES - VPESONETO1.
    368     
    369     
    370     
    371     VPESONETO1 = VPESONETO1 + DIF1.
    372     VPESOENTRADA1 = VPESOENTRADA1 + DIF1.
    373     
    374     
    375     
    376     SPESONETO = STRING(VPESONETO1).
    377     SPESOSALIDA = STRING(VPESOSALIDA1).
    378     SPESOENTRADA = STRING(VPESOENTRADA1).
    379     SPESODESCARTE = STRING(VPESODESCARTE1).
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 9   

{} Line Blk
-- ---- ---
    380     
    381     FIND FIRST balanzas WHERE balanzas.id_balanza = VBALANZA NO-LOCK.
    382     /*    IF NOT AVAILABLE balanzas  THEN
    383             UNDO , RETURN ERROR 'Balanza inexistente'. */
    384       
    385     
    386     MESSAGE 'ENCONTRANDO DATOS'.
    387     DEFINE VAR NROS AS INTEGER.
    388     FOR EACH POSICIONES NO-LOCK,FIRST items_stock WHERE items_stock.ID_S
    388     UCURSAL = 110 AND items_stock.ID_TIPO_MOVSTO = 78 AND 
    389                    items_stock.codigo_trazabilidad = POSICIONES.PSTRAZAB
    389     ILIDAD AND 
    390                    items_stock.orden_entrega_sap =  posiciones.PSNROLOTE
    390      AND
    391                    items_stock.orden_entrega_procesado = SNROPESADA  NO-
    391   1 LOCK.
    392   1 
    393        MESSAGE POSICIONES.PSTRAZABILIDAD POSICIONES.PSNROLOTE SNROPESADA
    393   1 .
    394   1 
    395   1    FIND FIRST  TTING WHERE  
    396   1                TTING.NROP = items_stock.nro_partida NO-ERROR.
    397   1     IF NOT AVAILABLE TTING THEN
    398   2     DO:
    399   2         NROS = 1.
    400             FOR  LAST  AUX_IT WHERE AUX_IT.NRO_PARTIDA = items_stock.NRO
    400   3 _PARTIDA .
    401   3             NROS = AUX_IT.NRO_PARTIDA_SERIAL + 1.
    402   2         END.
    403   2         CREATE TTING.
    404   2         ASSIGN  TTING.PES = POSICIONES.PSNROPESADA
    405   2                 TTING.POSPES = POSICIONES.PSNROPOSICIONPESADA
    406   2                 TTING.NROP = items_stock.nro_partida
    407   2                 TTING.NROPS = NROS.
    408   1     END.        
    409   1     ELSE
    410   2     DO:
    411   2         CREATE TTING.
    412   2         ASSIGN  TTING.PES = POSICIONES.PSNROPESADA
    413   2                 TTING.POSPES = POSICIONES.PSNROPOSICIONPESADA
    414   2                 TTING.NROP = items_stock.nro_partida
    415   2                 TTING.NROPS = TTING.NROPS + 1.
    416   1     END.
    417   1                                             
    418     END.
    419       
    420     
    421   1 FOR EACH TTING.
    422   1     MESSAGE TTING.PES
    423   1          TTING.POSPES
    424   1          TTING.NROP
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 10  

{} Line Blk
-- ---- ---
    425   1          TTING.NROPS.
    426     END.
    427       
    428     ipesada  =   INTEGER(SNROPESADA).
    429     ipesada  = nroPesada (balanzas.id_balanza , ipesada).  
    430     
    431     VTEXTO = "PESADA: " + STRING(IPESADA).
    432     WLOG(ARCHIVO,VTEXTO)  .
    433     FIND FIRST balanza_pesadas WHERE balanza_pesadas.id_balanza = balanz
    433     as.ID_BALANZA AND 
    434         balanza_pesadas.id_pesada = IPESADA NO-LOCK NO-ERROR.
    435                                          
    436      
    437     IF AVAILABLE balanza_pesadas THEN 
    438   1 DO ON ERROR UNDO, THROW:
    439   1     VTEXTO = "ACTUALIZAPESADA: INICIO".
    440   1     WLOG(ARCHIVO,VTEXTO).      
    441   1     RUN ACTUALIZADOCUMENTOMATERIALPESADA(BUFFER BALANZA_PESADAS).
    442   1     VTEXTO = "ACTUALIZAPESADA: OK".
    443   1     /*VTEXTO = "IMPRIME".
    444   1     WLOG(ARCHIVO,VTEXTO)  .
    445         RUN pimprimeEtiquetasIngreso.p (balanza_pesadas.id_balanza , bal
    445   1 anza_pesadas.id_pesada , OUTPUT xcod) NO-ERROR.
    446   1     VTEXTO = "SALE IMPRIME".*/
    447   1     WLOG(ARCHIVO,VTEXTO)  .
    448   1     
    449   2     CATCH ERRA AS Progress.Lang.Error :
    450   2         ORESPUESTA = 'NOK'.
    451   2         OMENSAJERESPUESTA = ERRA:GetMessage(1). 
    452   2         VTEXTO = "ACTUALIZAPESADA : " + ERRA:GetMessage(1).
    453   2         UNDO , THROW ERRA.
    454   1     END CATCH.  
    455   2     FINALLY.
    456   2         WLOG(ARCHIVO,VTEXTO).
    457   1     END.      
    458     END.
    459     ELSE
    460   1 DO TRANSACTION ON ERROR UNDO, THROW:
    461   1     
    462   1     VTEXTO = "INICIA SAPTOBALANZAPESADA".
    463   1     WLOG(ARCHIVO,VTEXTO)  .
    464   1     
    465         RUN sapToBalanzaPesada (balanzas.ID_BALANZA, OUTPUT vbalanza , O
    465   1 UTPUT vpesada ).
    466   1 
    467   1     VTEXTO = "FINALIZA SAPTOBALANZAPESADA".
    468   1     WLOG(ARCHIVO,VTEXTO)  .
    469   1     
    470         FIND balanza_pesadas WHERE balanza_pesadas.id_balanza = VBALANZA
    470   1  AND balanza_pesadas.ID_PESADA = VPESADA NO-LOCK.
    471   1     
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 11  

{} Line Blk
-- ---- ---
    472   1     
    473   1     
    474   1     RUN valoresfijos (    INPUT  vbalanza,     
    475   1         OUTPUT vsucursal,
    476   1         OUTPUT vsucplaya,
    477   1         OUTPUT vtipomov,
    478   1         OUTPUT vsucorigen).
    479   1                           
    480   1     DEFINE VARIABLE I-C AS INTEGER NO-UNDO.
    481   1     I-C = 0.
    482   2     FOR EACH POSICIONES.
    483   2         I-C = I-C + 1.
    484   1     END.                          
    485   1 
    486   1     VTEXTO = "INICIA POSCIONES".
    487   1     WLOG(ARCHIVO,VTEXTO)  .
    488   1 
    489   1     
    490   1     I = 0.
    491   2     FOR EACH POSICIONES BY POSICIONES.PSNROLOTE:
    492   2         i = i + 1.
    493   2 
    494   2         VTEXTO = "POSICION " + STRING(I).
    495   2         WLOG(ARCHIVO,VTEXTO)  .
    496   2                 
    497   2         RUN devuelvevaloresMovflete ( i, vsucursal ,
    498   2             OUTPUT cmateriaprima , 
    499   2             OUTPUT vcantenvasesentrada , 
    500   2             OUTPUT vpesoenvasesentrada , 
    501   2             OUTPUT ctipocosecha , 
    502   2             OUTPUT ctiposervicio , 
    503   2             OUTPUT cenvase , 
    504   2             OUTPUT corigensap , 
    505   2             OUTPUT ccodigotrazabilidad , 
    506   2             OUTPUT vcolor,
    507   2             OUTPUT cmercado ,
    508   2             OUTPUT vpesonetoticket , 
    509   2             OUTPUT vunioneuropea ,
    510   2             OUTPUT vchina ,
    511   2             OUTPUT vusa,
    512   2             OUTPUT vfinca ,
    513   2             OUTPUT vsucursaletiqueta,
    514   2             OUTPUT vsucursalpacking,
    515   2             OUTPUT vproveedor,
    516   2             OUTPUT vproveedororigen,
    517   2             OUTPUT vorigen,
    518   2             OUTPUT vorigenorigen,
    519   2             OUTPUT vtipocosecha,
    520   2             OUTPUT vcalidadbalanza,
    521   2             OUTPUT vtiposervicio,
    522   2             OUTPUT venvase,
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 12  

{} Line Blk
-- ---- ---
    523   2             OUTPUT vlotesenasa,
    524   2             OUTPUT vlote,
    525   2             OUTPUT vfincasenasa,
    526   2             OUTPUT vcertunion,
    527   2             OUTPUT vcertchina,
    528   2             OUTPUT vcertificado,
    529   2             OUTPUT v1,
    530   2             OUTPUT v2,
    531   2             OUTPUT iarticulo,
    532   2             OUTPUT vvariedad,
    533   2             OUTPUT vzona_up,
    534   2             OUTPUT vrenspa) NO-ERROR.
    535   2         IF ERROR-STATUS:ERROR THEN UNDO, RETURN ERROR RETURN-VALUE.
    536   2 
    537   2         VTEXTO = "SALE POSICION " + STRING(I).
    538   2         WLOG(ARCHIVO,VTEXTO)  .
    539   2 
    540             vcantenvasesentrada = INTEGER(POSICIONES.PSCANTENVASES).    
    540   2         
    541   2         vvariedadsap = vvariedad.
    542   2     
    543             FIND productos_terminados WHERE productos_terminados.id_arti
    543   2 culo = iarticulo NO-LOCK.
    544   2         FIND FIRST periodo_cosecha NO-LOCK.
    545   2 
    546   2 
    547             vfechacosecha   = DATE( INTEGER(SUBSTRING(PSFECHACOSECHA,4,2
    547     )) , INTEGER(SUBSTRING(PSFECHACOSECHA,1,2)) , INTEGER(SUBSTRING(PSFE
    547   2 CHACOSECHA,7,4)) ).
    548   2         IF  PSFECHAREMITO <> '' AND PSFECHAREMITO <> ? THEN
    549                 vfecharemito    = DATE( INTEGER(SUBSTRING(PSFECHAREMITO,
    549     4,2)) , INTEGER(SUBSTRING(PSFECHAREMITO,1,2)) , INTEGER(SUBSTRING(PS
    549   2 FECHAREMITO,7,4)) ).
    550   2 
    551   2 
    552   2         vfechaoperativa = balanza_pesadas.fecha_operativa.
    553   2         vfechaentrada   = balanza_pesadas.fecha_entrada.
    554   2         vfechasalida    = balanza_pesadas.fecha_salida.
    555   2 
    556   2 
    557   2 
    558   2         IF INTEGER(SUBSTRING(POSICIONES.PSMATERIAL,1,3)) = 303 THEN
    559   2             ASSIGN  VFECHAREMITO = TODAY
    560   2                     VNROREMITO = '999999999999'.
    561   2         ELSE
    562   2             ASSIGN
    563                     vfecharemito    = DATE( INTEGER(SUBSTRING(PSFECHAREM
    563     ITO,4,2)) , INTEGER(SUBSTRING(PSFECHAREMITO,1,2)) , INTEGER(SUBSTRIN
    563   2 G(PSFECHAREMITO,7,4)) )
    564   2                 vnroremito = PSNROREMITO.
    565   2     
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 13  

{} Line Blk
-- ---- ---
    566   2         vindex      = INDEX(VNROREMITO, "-").
    567   2         IF vindex = 0 THEN
    568   2             vindex      = INDEX(VNROREMITO, "R").
    569   2     
    570   2 
    571   2         IF VINDEX > 0 THEN
    572   3         DO:
    573                 vnroremito = FILL ('0', 4 - (LENGTH(SUBSTRING(vnroremito
    573     ,1,vindex - 1)))) + SUBSTRING(vnroremito,1,vindex - 1) + FILL ('0', 
    573     8 - (LENGTH(SUBSTRING(vnroremito , vindex + 1)))) + SUBSTRING(vnrore
    573   3 mito , vindex + 1).
    574   2         END.
    575   2         
    576   2     
    577   2         /* Asigno etiqueta */
    578   2         FIND LAST aux_items USE-INDEX etiqueta WHERE
    579                 aux_items.id_sucursal_etiqueta = vsucursaletiqueta NO-LO
    579   2 CK NO-ERROR.
    580   2         IF AVAILABLE aux_items THEN
    581   2             vetiqueta = aux_items.id_etiqueta + 1.
    582   2         ELSE
    583   2             vetiqueta = 1.
    584   2     
    585   2         VTEXTO = "CREA BALANZATICKETS".
    586   2         WLOG(ARCHIVO,VTEXTO)  .
    587   2 
    588             FIND mercados WHERE mercados.id_mercado_sap = posiciones.PSM
    588   2 ERCADO NO-LOCK NO-ERROR.
    589   2 
    590   2 
    591   2         
    592   2         VPARTIDAENTREGA = 0.
    593   2         VPARTIDASERIALENTREGA = 0.
    594   2         
    595   2         
    596             FIND TTING WHERE    TTING.PES    = POSICIONES.PSNROPESADA AN
    596   2 D 
    597                                 TTING.POSPES = POSICIONES.PSNROPOSICIONP
    597   2 ESADA NO-ERROR.
    598   2         IF AVAILABLE TTING THEN
    599   3         DO:
    600   3             VPARTIDAENTREGA = TTING.NROP.
    601   3             VPARTIDASERIALENTREGA = TTING.NROPS.
    602   2         END.         
    603   2         
    604   2         IF VPARTIDAENTREGA = 0          THEN 
    605   2             VPARTIDAENTREGA = NEXT-VALUE(nro_partida, produccion).
    606   2         IF VPARTIDASERIALENTREGA = 0    THEN 
    607   2             VPARTIDASERIALENTREGA = 1.
    608   2 
    609   2         {creabalanzatickets.i}
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 14  

{} Line Blk
-- ---- ---
 1    1   2 
 1    2     /*------------------------------------------------------------------
 1    2   2 ------
 1    3   2     File        : creabalanzatickets.i
 1    4   2     Purpose     : 
 1    5   2 
 1    6   2     Syntax      :
 1    7   2 
 1    8   2     Description : 
 1    9   2 
 1   10   2     Author(s)   : pdigonzelli
 1   11   2     Created     : Wed Jan 13 15:07:16 ACT 2016
 1   12   2     Notes       :
 1   13       ------------------------------------------------------------------
 1   13   2 ----*/
 1   14   2 
 1   15     /* ***************************  Definitions  ***********************
 1   15   2 *** */
 1   16   2 
 1   17   2 
 1   18     /* ********************  Preprocessor Definitions  *****************
 1   18   2 *** */
 1   19   2 
 1   20   2 
 1   21     /* ***************************  Main Block  ************************
 1   21   2 *** */
 1   22   2         CREATE balanza_tickets.
 1   23   2         ASSIGN 
 1   24   2             balanza_tickets.union_europea           = vunioneuropea
 1   25   2             balanza_tickets.renspa                  = vrenspa
 1   26                 balanza_tickets.orden_compra_sap        = POSICIONES.PSN
 1   26   2 ROPESADA
 1   27                 balanza_tickets.pos_orden_compra_sap    = POSICIONES.PSN
 1   27   2 ROPOSICIONPESADA
 1   28                 balanza_tickets.peso_neto_ticket        = vpesonetoticke
 1   28   2 t
 1   29                 balanza_tickets.peso_envases_entrada    = vpesoenvasesen
 1   29   2 trada
 1   30   2             balanza_tickets.peso_descarte           = vpesodescarte
 1   31                 balanza_tickets.periodo_cosecha         = periodo_cosech
 1   31   2 a.periodo_cosecha
 1   32   2             balanza_tickets.nro_ticket              = I
 1   33   2             balanza_tickets.nro_remito              = vnroremito
 1   34                 balanza_tickets.nro_partida_serial      = VPARTIDASERIAL
 1   34   2 ENTREGA
 1   35                 balanza_tickets.nro_partida             = VPARTIDAENTREG
 1   35   2 A
 1   36                 balanza_tickets.nro_partida_general     = balanza_ticket
 1   36   2 s.nro_partida
 1   37   2             balanza_tickets.id_variedad             = vvariedad
 1   38   2             balanza_tickets.id_variedad_sap         = vvariedadsap
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 15  

{} Line Blk
-- ---- ---
 1   39   2             balanza_tickets.id_tipo_servicio        = vtiposervicio
 1   40   2             balanza_tickets.id_tipo_cosecha         = vtipocosecha
 1   41                 balanza_tickets.id_sucursal_packing     = vsucursalpacki
 1   41   2 ng
 1   42                 balanza_tickets.id_sucursal_etiqueta    = vsucursaletiqu
 1   42   2 eta
 1   43   2             balanza_tickets.id_sucursal             = vsucursal
 1   44                 balanza_tickets.id_proveedor_origen     = vproveedororig
 1   44   2 en
 1   45   2             balanza_tickets.id_proveedor            = vproveedor
 1   46   2             balanza_tickets.id_pesada               = vpesada
 1   47   2             balanza_tickets.id_origen_origen        = vorigenorigen
 1   48   2             balanza_tickets.id_origen               = vorigen
 1   49   2             balanza_tickets.id_materia_prima        = iarticulo
 1   50                 balanza_tickets.id_lote_senasa          = IF vunioneurop
 1   50   2 ea  THEN vlotesenasa ELSE ''
 1   51   2             balanza_tickets.id_lote                 = vlote
 1   52                 balanza_tickets.id_finca_senasa         = IF vunioneurop
 1   52   2 ea THEN  vfincasenasa ELSE ''
 1   53   2             balanza_tickets.zona_up                 = vzona_up
 1   54   2             balanza_tickets.id_etiqueta             = vetiqueta
 1   55   2             balanza_tickets.id_envase               = venvase
 1   56                 balanza_tickets.id_detalle_transporte   = vdetalletransp
 1   56   2 orte
 1   57                 balanza_tickets.id_destino_packing      = vdestinopackin
 1   57   2 g
 1   58   2             balanza_tickets.id_descarte             = vdescarte
 1   59   2             balanza_tickets.id_color                = vcolor
 1   60                 balanza_tickets.id_calidad_balanza      = vcalidadbalanz
 1   60   2 a
 1   61   2             balanza_tickets.id_balanza              = vbalanza
 1   62                 balanza_tickets.hora_salida             = balanza_pesada
 1   62   2 s.hora_entrada
 1   63                 balanza_tickets.hora_entrada            = balanza_pesada
 1   63   2 s.hora_entrada
 1   64   2             balanza_tickets.finca                   = vfinca
 1   65   2             balanza_tickets.fecha_salida            = vfechaentrada
 1   66   2             balanza_tickets.fecha_remito            = vfecharemito
 1   67                 balanza_tickets.fecha_operativa         = vfechaoperativ
 1   67   2 a
 1   68   2             balanza_tickets.fecha_entrada           = vfechaentrada
 1   69   2             balanza_tickets.fecha_cosecha           = vfechacosecha
 1   70                 balanza_tickets.cod_barra_sap           = TRIM(cmateriap
 1   70   2 rima) + PSNROLOTE
 1   71                 balanza_tickets.codigo_trazabilidad     = ccodigotrazabi
 1   71   2 lidad
 1   72   2             balanza_tickets.china                   = vchina
 1   73   2             balanza_tickets.cert_china              = vcertchina
 1   74   2             balanza_tickets.certificado             = vcertificado
 1   75                 balanza_tickets.cant_env_entrada        = vcantenvasesen
 1   75   2 trada
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 16  

{} Line Blk
-- ---- ---
 1   76   2             balanza_tickets.loteagricolaSap         = PSLOTEAGRICOLA
 1   77   2             balanza_tickets.especieSap              = PSESPECIE
 1   78   2             balanza_tickets.variedadSap             = PSVARIEDAD
 1   79   2             balanza_tickets.fincasap                = PSFINCA
 1   80   2             balanza_tickets.usa                     = vusa
 1   81                 balanza_tickets.id_mercado              = IF AVAILABLE m
 1   81   2 ercados THEN mercados.id_mercado ELSE 0.
    609   2  
    610   2             
    611   2 
    612   2         VTEXTO = "PROCESA BALANZATICKETS".
    613   2         WLOG(ARCHIVO,VTEXTO)  .
    614   2 
    615   2         RUN procesarBalanzaTicket (BUFFER balanza_tickets).
    616   2         RELEASE balanza_tickets.
    617   2         SESSION:NUMERIC-FORMAT = nm.
    618   2 
    619   2         VTEXTO = "VA AL OTRO ITEM".
    620   2         WLOG(ARCHIVO,VTEXTO)  .
    621   2 
    622   2 
    623   1     END. 
    624   1     VTEXTO = "IMPRIME".
    625   1     WLOG(ARCHIVO,VTEXTO)  .
    626   1     
    627         /*RUN pimprimeEtiquetasIngreso.p (balanza_pesadas.id_balanza , b
    627   1 alanza_pesadas.id_pesada , OUTPUT xcod) NO-ERROR.*/
    628   1     VTEXTO = "SALE IMPRIME".
    629   1     WLOG(ARCHIVO,VTEXTO)  .
    630   1 
    631         /*RUN pcierrapesada.p (balanza_pesadas.id_balanza , balanza_pesa
    631   1 das.id_pesada , FALSE , OUTPUT cStatus).
    632   1     IF cStatus <> 'OK' THEN
    633   1         RETURN ERROR cStatus. */
    634   1 
    635   1 /*    CATCH ErrB AS Progress.Lang.ProError .
    636   1         OUTPUT TO D:\TEMP\WS2.TXT APPEND.
    637   1         EXPORT DELIMITER ';' "160" "ERROR" errC:GetMEssage(1).
    638   1         OUTPUT CLOSE.    
    639   1         ORESPUESTA = 'NOK'.
    640   1         OMENSAJERESPUESTA = 'Ingreso incorrecto'.  
    641   1         UNDO , THROW ErrB.
    642   1     END CATCH. */
    643     END.
    644     
    645     
    646     
    647   1 CATCH ErrC AS Progress.Lang.ProError .
    648   1     VTEXTO =  "161 " + errC:GetMEssage(1).
    649   1     WLOG(ARCHIVO,VTEXTO).
    650   1     ORESPUESTA = 'NOK'.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 17  

{} Line Blk
-- ---- ---
    651   1     OMENSAJERESPUESTA = 'Ingreso incorrecto'.  
    652   1     UNDO .
    653     END CATCH.
    654     
    655   1 FINALLY.
    656   1     CREATE RESPUESTAS.
    657   1     ASSIGN 
    658   1         RESPUESTAS.POSTATUS  = ORESPUESTA
    659   1         RESPUESTAS.POMENSAJE = OMENSAJERESPUESTA.
    660   1     VTEXTO =  "FINALIZO".
    661   1     WLOG(ARCHIVO,VTEXTO).
    662     END FINALLY.
    663     
    664     
    665     PROCEDURE ACTUALIZADOCUMENTOMATERIALPESADA.
    666         DEFINE PARAMETER BUFFER bp FOR balanza_pesadas.
    667         
    668         DEFINE VARIABLE I AS INTEGER NO-UNDO.
    669         I = 0.
    670         
    671   1     FOR EACH POSICIONES BY POSICIONES.PSNROLOTE.
    672   1         I = I + 1.
    673             FIND FIRST balanza_tickets OF bp WHERE balanza_tickets.nro_t
    673   1 icket = I.
    674   1         ASSIGN 
    675                 balanza_tickets.orden_compra_sap     = POSICIONES.PSNROD
    675   1 OCUMENTOMATERIAL
    676                 balanza_tickets.pos_orden_compra_sap = POSICIONES.PSNROP
    676   1 OSICIONPESADA. 
    677         END.
    678     END PROCEDURE.
    679     
    680     PROCEDURE SAPTOBALANZAPESADA.
    681     
    682         DEFINE INPUT  PARAMETER PIBALANZA                   AS INTEGER N
    682     O-UNDO.
    683         DEFINE OUTPUT PARAMETER pobalanza                   AS INTEGER N
    683     O-UNDO.
    684         DEFINE OUTPUT PARAMETER popesada                    AS INTEGER N
    684     O-UNDO.
    685     
    686         DEFINE VARIABLE X_numero        AS INTEGER.
    687         DEFINE VARIABLE hProd           AS HANDLE    NO-UNDO.
    688         DEFINE VARIABLE vfecha          AS DATE      NO-UNDO.
    689         DEFINE VARIABLE vfechaOperativa AS DATE      NO-UNDO.
    690         DEFINE VARIABLE vhora           AS DATETIME  NO-UNDO.
    691         DEFINE VARIABLE vfechaEntrada   AS DATE      NO-UNDO.
    692         DEFINE VARIABLE vfechaSalida    AS DATE      NO-UNDO.
    693         DEFINE VARIABLE vHoraEntrada    AS CHARACTER NO-UNDO.
    694         DEFINE VARIABLE vHoraSalida     AS CHARACTER NO-UNDO.
    695         DEFINE VARIABLE vPesoEntrada    AS DECIMAL   NO-UNDO DECIMALS 3.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 18  

{} Line Blk
-- ---- ---
    696         DEFINE VARIABLE vTransporte     AS CHARACTER NO-UNDO.
    697         DEFINE VARIABLE vProveedor      AS INTEGER   NO-UNDO.
    698         DEFINE VARIABLE vtipotransporte AS INTEGER   NO-UNDO.
    699         DEFINE VARIABLE vmarca          AS CHARACTER NO-UNDO.
    700         DEFINE VARIABLE vmodelo         AS INTEGER   NO-UNDO.
    701         DEFINE VARIABLE vnromov         AS INTEGER   NO-UNDO.
    702         DEFINE VARIABLE vpesoneto       AS DECIMAL   NO-UNDO DECIMALS 3.
    703         DEFINE VARIABLE vpesodescarte   AS DECIMAL   NO-UNDO DECIMALS 3.
    704         DEFINE VARIABLE vpesosalida     AS DECIMAL   NO-UNDO DECIMALS 3.
    705         DEFINE VARIABLE vtara           AS DECIMAL   NO-UNDO DECIMALS 3.
    706         DEFINE VARIABLE vsucursal       AS INTEGER   NO-UNDO.
    707         DEFINE VARIABLE vsucplaya       AS INTEGER   NO-UNDO.
    708         DEFINE VARIABLE vtipomov        AS INTEGER   NO-UNDO.
    709         DEFINE VARIABLE vsucorigen      AS INTEGER   NO-UNDO.
    710         DEFINE VARIABLE vpatente        AS CHARACTER NO-UNDO.
    711         DEFINE VARIABLE xenvase         AS CHARACTER NO-UNDO.
    712         DEFINE VARIABLE vpesadasap      AS CHARACTER NO-UNDO.
    713         DEFINE VARIABLE VOCARGA         AS CHARACTER NO-UNDO.
    714         DEFINE VARIABLE cError          AS CHARACTER NO-UNDO.
    715             /* DEFINE VAR vocarga          AS CHARACTER NO-UNDO. */ /* N
    715     O LO USO */
    716         DEFINE VARIABLE vbalanza        AS INTEGER   NO-UNDO.
    717         DEFINE VARIABLE vpesada         AS INTEGER   NO-UNDO.
    718         DEFINE VARIABLE vpref           AS INTEGER   NO-UNDO.
    719         DEFINE VARIABLE vTransportista  AS CHARACTER NO-UNDO.
    720     
    721   1     DO TRANSACTION ON ERROR UNDO, THROW.
    722   1     
    723   1         /* {persistentprocedure.i libProduccion.p hProd}. */
    724   1 
    725   1     
    726   1         /* vocarga = hTableMovFlete:VALUE(1,2). */ /* NO LO USO */
    727   1 
    728   1         VFECHAENTRADA = TODAY.
    729   1         vfecha = VFECHAENTRADA.
    730   1         VHORAENTRADA = STRING(TIME,'HH:MM').     
    731             vfechaOperativa =  DYNAMIC-FUNCTION("devuelvefechaoperativa"
    731   1  IN THIS-PROCEDURE, vfecha , vhoraEntrada).
    732   1 /*        
    733   1         vfecha = VFECHAENTRADA.
    734   1         vhoraEntrada  = SHORAENTRADA.
    735             vfechaEntrada = DATE( INTEGER(SUBSTRING(SFECHAENTRADA,5,2)) 
    735     , INTEGER(SUBSTRING(SFECHAENTRADA,7,2)) , INTEGER(SUBSTRING(SFECHAEN
    735   1 TRADA,1,4)) ).
    736   1  */
    737   1 
    738   1     
    739   1     
    740   1 
    741   1         vpesadasap = SNROPESADA.    
    742   1 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 19  

{} Line Blk
-- ---- ---
    743   1         vbalanza = pibalanza.
    744   1         vpref    = vbalanza.
    745   1         vpesada  = vpref * 1000000 + INTEGER(VPESADASAP).
    746   1     
    747   1         RUN valoresfijos   (    INPUT vbalanza,     
    748   1             OUTPUT vsucursal,
    749   1             OUTPUT vsucplaya,
    750   1             OUTPUT vtipomov,
    751   1             OUTPUT vsucorigen).
    752   1                             
    753   1     
    754             vfechaSalida  = DATE(INTEGER(SUBSTRING(SFECHASALIDA,5,2)) , 
    754     INTEGER(SUBSTRING(SFECHASALIDA,7,2)), INTEGER(SUBSTRING(SFECHASALIDA
    754   1 ,1,4)) ).
    755   1         vhoraSalida   = SHORASALIDA.
    756   1         vPesoEntrada  = DECIMAL(SPESOENTRADA). 
    757   1         vPesoSalida   = DECIMAL(SPESOSALIDA). 
    758   1         
    759   1         IF vfechasalida = DATE('30/12/1899') THEN
    760   1             vfechasalida = ?.
    761   1         vTransporte   = STRANSPORTE.
    762   1         vtransportista = STRANSPORTISTA.
    763   1 
    764   1 
    765   1 
    766   1         ASSIGN 
    767   1             vpesoneto = DECIMAL(SPESONETO).
    768   1         ASSIGN 
    769   1             vpesodescarte = DECIMAL(SPESODESCARTE).
    770   1 
    771   1 
    772   1     {creabalanzapesada.i}
 1    1   1 
 1    2     /*------------------------------------------------------------------
 1    2   1 ------
 1    3   1     File        : creabalanzapesada.i
 1    4   1     Purpose     : 
 1    5   1 
 1    6   1     Syntax      :
 1    7   1 
 1    8   1     Description : 
 1    9   1 
 1   10   1     Author(s)   : pdigonzelli
 1   11   1     Created     : Wed Jan 13 15:16:53 ACT 2016
 1   12   1     Notes       :
 1   13       ------------------------------------------------------------------
 1   13   1 ----*/
 1   14   1 
 1   15     /* ***************************  Definitions  ***********************
 1   15   1 *** */
 1   16   1 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 20  

{} Line Blk
-- ---- ---
 1   17   1 
 1   18     /* ********************  Preprocessor Definitions  *****************
 1   18   1 *** */
 1   19   1 
 1   20   1 
 1   21     /* ***************************  Main Block  ************************
 1   21   1 *** */
 1   22   1     
 1   23   1     CREATE balanza_pesadas.
 1   24   1     ASSIGN
 1   25   1         balanza_pesadas.fecha_entrada       = vfechaentrada
 1   26   1         balanza_pesadas.fecha_operativa     = vfechaoperativa
 1   27   1         balanza_pesadas.fecha_salida        = vfechaentrada
 1   28   1         balanza_pesadas.hora_entrada        = vhoraentrada
 1   29   1         balanza_pesadas.hora_salida         = vhoraentrada
 1   30   1         balanza_pesadas.id_balanza          = vbalanza
 1   31   1         balanza_pesadas.id_pesada           = vpesada
 1   32   1         balanza_pesadas.id_pesada_sap       = vpesadasap   
 1   33   1         balanza_pesadas.id_proveedor        = vproveedor
 1   34   1         balanza_pesadas.id_sucursal         = vsucursal
 1   35   1         balanza_pesadas.id_tipo_movsto      = vtipomov
 1   36   1         balanza_pesadas.id_tipo_transporte  = vtipotransporte
 1   37   1         balanza_pesadas.id_transporte       = INTEGER(vtransporte)
 1   38   1         balanza_pesadas.marca               = vmarca
 1   39   1         balanza_pesadas.modelo              = vmodelo
 1   40   1         balanza_pesadas.nromov              = vnromov
 1   41   1         balanza_pesadas.orden_carga_sap     = vocarga
 1   42   1         balanza_pesadas.patente             = vpatente
 1   43   1         balanza_pesadas.peso_descarte       = vpesodescarte
 1   44   1         balanza_pesadas.peso_entrada        = vpesoentrada
 1   45   1         balanza_pesadas.peso_neto           = vpesoneto
 1   46   1         balanza_pesadas.peso_salida         = vpesosalida
 1   46   1         balanza_pesadas.tara                = vtara.
    772   1  
    773   1     
    774             /* RUN crearmovtransportedebalanza (  INPUT vbalanza, INPUT 
    774   1 vpesada) NO-ERROR. */ 
    775   1 
    776   1 
    777             FIND FIRST tipo_numero WHERE tipo_numero.id_sucursal = vsucp
    777   1 laya AND
    778   1             tipo_numero.id_tipo_movsto = vtipomov NO-ERROR.
    779   1         x_numero = tipo_numero.nro + 1.
    780   1 
    781   1    
    782   1         ASSIGN 
    783   1             tipo_numero.nro = x_numero.
    784   1         RELEASE tipo_numero.
    785   1 
    786   1         ASSIGN
    787   1             balanza_pesadas.id_sucursal    = vsucplaya
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 21  

{} Line Blk
-- ---- ---
    788   1             balanza_pesadas.id_tipo_movsto = vtipomov
    789   1             balanza_pesadas.nro            = x_numero.
    790   1 
    791   1         VTEXTO =  "CREAMOVSUCU".
    792   1         WLOG(ARCHIVO,VTEXTO).
    793   1 
    794   1     {creamovsucu.i}
 1    1   1 
 1    2     /*------------------------------------------------------------------
 1    2   1 ------
 1    3   1     File        : creamovsucu.i
 1    4   1     Purpose     : 
 1    5   1 
 1    6   1     Syntax      :
 1    7   1 
 1    8   1     Description : 
 1    9   1 
 1   10   1     Author(s)   : pdigonzelli
 1   11   1     Created     : Wed Jan 13 15:16:04 ACT 2016
 1   12   1     Notes       :
 1   13       ------------------------------------------------------------------
 1   13   1 ----*/
 1   14   1 
 1   15     /* ***************************  Definitions  ***********************
 1   15   1 *** */
 1   16   1 
 1   17   1 
 1   18     /* ********************  Preprocessor Definitions  *****************
 1   18   1 *** */
 1   19   1 
 1   20   1 
 1   21     /* ***************************  Main Block  ************************
 1   21   1 *** */
 1   22   1     CREATE  movsucu.
 1   23   1     ASSIGN
 1   24   1          movsucu.id_sucursal     = vsucplaya
 1   25   1          movsucu.id_tipo_movsto  = vtipomov
 1   26   1          movsucu.nro             = x_numero
 1   27   1          movsucu.id_suc_origen   = vsucplaya
 1   28   1          movsucu.id_suc_envio    = vsucorigen
 1   29   1          movsucu.fecha_proceso   = ?
 1   30   1          movsucu.fecha_operativa = balanza_pesadas.fecha_operativa
 1   31   1          movsucu.fecha       = balanza_pesadas.fecha_salida
 1   32              movsucu.hora        = SUBSTRING(balanza_pesadas.hora_salida
 1   32   1 ,1,2) + "00".
    794   1  
    795   1     
    796   1         VTEXTO =  "TERMINA CREAMOVSUCU".
    797   1         WLOG(ARCHIVO,VTEXTO).
    798   1 
    799         END.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 22  

{} Line Blk
-- ---- ---
    800   1     FINALLY.
    801   1         pobalanza = vbalanza.
    802   1         popesada  = vpesada.
    803         END FINALLY.
    804     
    805     
    806     END PROCEDURE.       
    807     
    808     
    809     PROCEDURE procesarBalanzaTicket :
    810         /*--------------------------------------------------------------
    810     ----------------
    811           Purpose:     
    812           Parameters:  <none>
    813           Notes:       
    814         ----------------------------------------------------------------
    814     --------------*/
    815         DEFINE PARAMETER BUFFER balanza_tickets FOR balanza_tickets.
    816     
    817         
    818         DEFINE VARIABLE hProd AS HANDLE NO-UNDO.
    819         DEFINE BUFFER aux_pesada  FOR balanza_pesadas.
    820         DEFINE BUFFER aux_tickets FOR balanza_tickets.
    821         DEFINE BUFFER aux_salida  FOR balanza_salidas.
    822         DEFINE VARIABLE X_peso_envases AS DECIMAL   NO-UNDO.
    823         DEFINE VARIABLE v1             AS INTEGER.
    824         DEFINE VARIABLE v2             AS INTEGER.
    825     
    826         DEFINE VARIABLE cerror         AS CHARACTER NO-UNDO INITIAL 'Err
    826     or en la rutina de proceso de la balanza'.
    827     
    828     
    829     
    830   1     DO ON ERROR UNDO , THROW:
    831   1     
    832   1 
    833             FIND FIRST      lotes_plantacion WHERE lotes_plantacion.codi
    833   1 go_trazabilidad = balanza_tickets.codigo_trazabilidad NO-LOCK.
    834             /*    IF NOT AVAILABLE lotes_plantacion THEN RETURN ERROR 'E
    834   1 rror de lotes de plantacion'. */
    835   1 
    836   1         FIND FIRST   lote        OF lotes_plantacion  NO-LOCK.
    837             /*    IF NOT AVAILABLE lotes_plantacion THEN RETURN ERROR 'E
    837   1 rror de lotes'. */
    838   1 
    839   1         IF balanza_tickets.UNION_europea THEN
    840   1             ASSIGN  balanza_tickets.certificado = lote.certificado.
    841   1         ELSE
    842   1             ASSIGN  balanza_tickets.certificado = ""
    843   1                 balanza_tickets.cert_china  = "".
    844   1 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 23  

{} Line Blk
-- ---- ---
    845   1         IF balanza_tickets.china THEN
    846   1             ASSIGN  balanza_tickets.certificado = lote.cert_china
    847   1                 balanza_tickets.cert_china  = lote.cert_china.
    848   1     
    849   1     
    850   1         CASE balanza_tickets.id_balanza:
    851   1             WHEN  2 OR  
    852   1             WHEN 4 THEN
    853   2                 DO:
    854   2                     WLOG(ARCHIVO,'CREAPARTTIDAS').
    855                         RUN crearpartidas (INPUT balanza_tickets.id_sucu
    855   2 rsal,
    856   2                         INPUT balanza_tickets.nro_partida ).
    857   2                     WLOG(ARCHIVO,'CREAITEMS').
    858                         RUN crearitemsstockdebalanza (INPUT balanza_tick
    858   2 ets.id_balanza, 
    859                             INPUT balanza_tickets.id_pesada, balanza_tic
    859   2 kets.nro_ticket).
    860   2                     WLOG(ARCHIVO,'SALECREAITEMS').
    861   1                 END.
    862   1             WHEN 7 THEN
    863   2                 DO:
    864   2                     FIND FIRST aux_pesada WHERE
    865                             aux_pesada.id_balanza = balanza_tickets.id_b
    865   2 alanza AND
    866                             aux_pesada.id_pesada  = balanza_tickets.id_p
    866   2 esada NO-LOCK.
    867   2     
    868   2     
    869   2                     FIND FIRST aux_tickets WHERE   
    870                             aux_tickets.id_balanza = balanza_tickets.id_
    870   2 balanza AND
    871                             aux_tickets.id_pesada  = balanza_tickets.id_
    871   2 pesada NO-LOCK.
    872   2                     IF AVAILABLE aux_tickets THEN 
    873   3                     DO:
    874   4                         FOR EACH aux_salida OF aux_pesada:
    875   4                             DELETE aux_salida.
    876   3                         END.
    877   4                         FOR EACH aux_tickets OF aux_pesada:
    878   4                             CREATE aux_salida.
    879   4                             ASSIGN
    880                                     aux_salida.id_balanza          = aux
    880   4 _tickets.id_balanza
    881                                     aux_salida.id_pesada           = aux
    881   4 _tickets.id_pesada
    882                                     aux_salida.id_envase           = aux
    882   4 _tickets.id_envase
    883                                     aux_salida.cant_env_salida     = aux
    883   4 _tickets.cant_env_entrada
    884                                     aux_salida.peso_envases_salida = aux
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 24  

{} Line Blk
-- ---- ---
    884   4 _tickets.peso_envases_entrada.
    885   4     
    886   3                         END.
    887   3                         FIND aux_pesada WHERE
    888                                 aux_pesada.id_balanza = balanza_tickets.
    888   3 id_balanza AND
    889                                 aux_pesada.id_pesada  = balanza_tickets.
    889   3 id_pesada.
    890   3     
    891   3                         IF AVAILABLE aux_pesada THEN 
    892   4                         DO:
    893   4                             FOR EACH aux_tickets WHERE
    894                                     aux_tickets.id_balanza = balanza_tic
    894   4 kets.id_balanza AND
    895                                     aux_tickets.id_pesada  = balanza_tic
    895   5 kets.id_pesada:
    896                                     x_peso_envases  = x_peso_envases  + 
    896   5 aux_tickets.peso_envases_entrada.
    897   4                             END.
    898   4                             ASSIGN 
    899                                     aux_pesada.peso_envases_entrada = x_
    899   4 peso_envases.
    900   3                         END.
    901   2                     END.
    902   1                 END.
    903   1         END CASE.
    904   1     
    905   1         /* Creo tabla items_transporte */
    906   1 
    907   1         /*
    908             RUN crearitemstranspdebalanza IN hprod (    INPUT balanza_ti
    908   1 ckets.id_balanza,
    909                                                         INPUT balanza_ti
    909   1 ckets.id_pesada). */
    910   1     
    911   1     
    912   1         /* Actualizo fecha y hora salida de balanza_pesada */
    913             FIND FIRST aux_pesada WHERE aux_pesada.id_balanza = balanza_
    913   1 tickets.id_balanza AND
    914   1             aux_pesada.id_pesada = balanza_tickets.id_pesada.
    915   1         IF AVAILABLE aux_pesada THEN
    916   2         DO:
    917   2             ASSIGN 
    918                     aux_pesada.fecha_salida = balanza_tickets.fecha_sali
    918   2 da
    919                     aux_pesada.hora_salida  = balanza_tickets.hora_salid
    919   2 a.
    920   1         END.
    921   1     
    922   1 
    923             IF balanza_tickets.id_balanza = 2 OR balanza_tickets.id_bala
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 25  

{} Line Blk
-- ---- ---
    923   1 nza = 4 THEN
    924   2         DO:
    925   2 
    926   2             WLOG(ARCHIVO,'PESOSBALANZAS').
    927   2             
    928   2             /* Actualizo pesos */
    929                 RUN pesosbalanzapesada (INPUT balanza_tickets.id_balanza
    929   2  , balanza_tickets.ID_PESADA ). 
    930   2     
    931   2             /* Actualizo saldos de partida */
    932   2             WLOG(ARCHIVO,'SALDOSPARTIDAS').
    933                 RUN actsaldospartidadebalanza (INPUT balanza_tickets.id_
    933     sucursal, INPUT balanza_tickets.nro_partida , INPUT balanza_tickets.
    933   2 nro_partida_serial). 
    934   2             WLOG(ARCHIVO,'SALESALDOSPARTIDAS').
    935   2     
    936   2         /*
    937   2             /* Imprimo etiqueta */
    938   2             RUN dd_etibal.p (input balanza_tickets.nro_partida).
    939   2         */
    940   1         END.
    941         END.
    942     /*
    943     CATCH err AS Progress.Lang.Error:
    944         OUTPUT TO D:\TEMP\WS2.TXT APPEND.
    945         EXPORT DELIMITER ';' "21" err:GetMEssage(1).
    946         OUTPUT CLOSE.    
    947         UNDO, THROW ERR .    
    948     END CATCH.
    949     */
    950     END PROCEDURE.
    951     
    952     
    953     PROCEDURE valoresfijos :
    954         /*--------------------------------------------------------------
    954     ----------------
    955           Purpose:     
    956           Parameters:  <none>
    957           Notes:       
    958         ----------------------------------------------------------------
    958     --------------*/
    959         /* REVISAR:  */
    960         DEFINE INPUT PARAMETER X_balanza AS INTEGER NO-UNDO.
    961         DEFINE OUTPUT PARAMETER x_sucursal  AS INTEGER NO-UNDO.
    962         DEFINE OUTPUT PARAMETER x_suc_playa AS INTEGER NO-UNDO.
    963         DEFINE OUTPUT PARAMETER x_tipo_mov  AS INTEGER NO-UNDO.
    964         DEFINE OUTPUT PARAMETER x_suc_origen AS INTEGER NO-UNDO.
    965     
    966         
    967         FIND FIRST balanzas WHERE
    968             balanzas.id_balanza   = X_balanza AND
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 26  

{} Line Blk
-- ---- ---
    969             balanzas.id_suc_envio <> 0 NO-LOCK.
    970         IF AVAILABLE balanzas THEN
    971   1     DO:
    972             FIND FIRST tipo_movsto WHERE tipo_movsto.abreviatura = "ingr
    972   1 eso"
    973   1             NO-LOCK NO-ERROR.
    974   1     
    975   1         x_sucursal  = balanzas.id_sucursal.
    976   1         x_suc_playa = balanzas.id_suc_envio.
    977   1         x_tipo_mov  = tipo_movsto.id_tipo_movsto.
    978   1         X_suc_origen = balanzas.id_suc_origen.
    979         END.
    980     END PROCEDURE.
    981     
    982     PROCEDURE devuelvevaloresmovflete :
    983         /*--------------------------------------------------------------
    983     ----------------
    984           Purpose:     
    985           Parameters:  <none>
    986           Notes:       
    987         ----------------------------------------------------------------
    987     --------------*/
    988         DEFINE INPUT PARAMETER i AS INTEGER NO-UNDO.
    989         DEFINE INPUT PARAMETER vsucursal AS INTEGER NO-UNDO.
    990     
    991         DEFINE OUTPUT PARAMETER cmateriaprima AS CHARACTER NO-UNDO.
    992         DEFINE OUTPUT PARAMETER vcantenvasesentrada AS INTEGER NO-UNDO.
    993         DEFINE OUTPUT PARAMETER vpesoenvasesentrada AS DECIMAL NO-UNDO D
    993     ECIMALS 3.
    994         DEFINE OUTPUT PARAMETER ctipocosecha        AS  CHARACTER NO-UND
    994     O.
    995         DEFINE OUTPUT PARAMETER ctiposervicio       AS CHARACTER NO-UNDO
    995     .
    996         DEFINE OUTPUT PARAMETER cenvase             AS CHARACTER NO-UNDO
    996     .
    997         DEFINE OUTPUT PARAMETER corigensap          AS CHARACTER NO-UNDO
    997     .
    998         DEFINE OUTPUT PARAMETER ccodigotrazabilidad AS CHARACTER NO-UNDO
    998     .
    999         DEFINE OUTPUT PARAMETER vcolor              AS INTEGER NO-UNDO.
   1000         DEFINE OUTPUT PARAMETER cmercado            AS CHARACTER NO-UNDO
   1000     .
   1001         DEFINE OUTPUT PARAMETER vpesonetoticket     AS INTEGER NO-UNDO.
   1002         DEFINE OUTPUT PARAMETER vunioneuropea       AS LOGICAL NO-UNDO.
   1003         DEFINE OUTPUT PARAMETER vchina              AS LOGICAL NO-UNDO.
   1004         DEFINE OUTPUT PARAMETER vusa                AS LOGICAL NO-UNDO.
   1005         DEFINE OUTPUT PARAMETER vfinca              AS LOGICAL NO-UNDO.
   1006         DEFINE OUTPUT PARAMETER vsucursaletiqueta   AS INTEGER NO-UNDO.
   1007         DEFINE OUTPUT PARAMETER vsucursalpacking    AS INTEGER NO-UNDO.
   1008         DEFINE OUTPUT PARAMETER vproveedor          AS INTEGER NO-UNDO.
   1009         DEFINE OUTPUT PARAMETER vproveedororigen    AS INTEGER NO-UNDO.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 27  

{} Line Blk
-- ---- ---
   1010         DEFINE OUTPUT PARAMETER vorigen             AS INTEGER NO-UNDO.
   1011         DEFINE OUTPUT PARAMETER vorigenorigen       AS INTEGER NO-UNDO.
   1012         DEFINE OUTPUT PARAMETER vtipocosecha        AS INTEGER NO-UNDO.
   1013         DEFINE OUTPUT PARAMETER vcalidadbalanza     AS INTEGER NO-UNDO.
   1014         DEFINE OUTPUT PARAMETER vtiposervicio       AS INTEGER NO-UNDO.
   1015         DEFINE OUTPUT PARAMETER venvase             AS INTEGER NO-UNDO.
   1016         DEFINE OUTPUT PARAMETER vlotesenasa         AS INTEGER NO-UNDO.
   1017         DEFINE OUTPUT PARAMETER vlote               AS INTEGER NO-UNDO.
   1018         DEFINE OUTPUT PARAMETER vfincasenasa        AS INTEGER NO-UNDO.
   1019         DEFINE OUTPUT PARAMETER vcertunion          AS CHARACTER NO-UNDO
   1019     .
   1020         DEFINE OUTPUT PARAMETER vcertchina          AS CHARACTER NO-UNDO
   1020     .
   1021         DEFINE OUTPUT PARAMETER vcertificado        AS CHARACTER NO-UNDO
   1021     .
   1022         DEFINE OUTPUT PARAMETER v1                  AS INTEGER NO-UNDO.
   1023         DEFINE OUTPUT PARAMETER v2                  AS INTEGER NO-UNDO.
   1024         DEFINE OUTPUT PARAMETER iarticulo           AS INTEGER NO-UNDO.
   1025         DEFINE OUTPUT PARAMETER ivariedad           AS INTEGER NO-UNDO.
   1026         DEFINE OUTPUT PARAMETER vzona_up            AS CHARACTER NO-UNDO
   1026     .
   1027         DEFINE OUTPUT PARAMETER vrenspa             AS CHARACTER NO-UNDO
   1027     .
   1028     
   1029         DEFINE VARIABLE cantpes  AS DECIMAL   NO-UNDO.
   1030         DEFINE VARIABLE vcantpes AS CHARACTER NO-UNDO.
   1031     
   1032         VTEXTO = "DEVUELVE VALORES #1".
   1033         WLOG(ARCHIVO,VTEXTO)  .
   1034     
   1035         cmateriaprima       = POSICIONES.PSMATERIAL. /* REVISAR */   
   1036         ctipocosecha        = SUBSTRING(POSICIONES.PSMATERIAL,4,1).
   1037         /*  ctiposervicio       = PSTIPOSERVICIO. NO LO TENGO */
   1038         cenvase             = PSTIPOENVASE.
   1039             /*     corigensap          = STRING(htableMovFleteD:VALUE(i,
   1039     15),"x(4)") + STRING(htableMovFleteD:VALUE(i,16),"9999"). */ /* NO S
   1039     E USA */
   1040         ccodigoTrazabilidad = PSTRAZABILIDAD.
   1041         cmercado            = PSMERCADO. /**** REVISAR MERCADO SEGUN TAB
   1041     LA ***/
   1042         
   1043         VTEXTO = "DEVUELVE VALORES #2".
   1044         WLOG(ARCHIVO,VTEXTO)  .
   1045         
   1046         CASE SUBSTRING(cmateriaprima,6,2):
   1047             WHEN '01' THEN 
   1048                 iarticulo = 1. /* LIMON */
   1049             WHEN '04' THEN 
   1050                 iarticulo = 2. /* POMELO */
   1051             WHEN '02' THEN 
   1052                 iarticulo = 3. /* NARANJA */
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 28  

{} Line Blk
-- ---- ---
   1053             WHEN '03' THEN 
   1054                 iarticulo = 4. /* MANDARINA */
   1055             
   1056             /*        WHEN 'PALTA001' THEN iarticulo = 5. FALTAN VARIEDA
   1056     DES
   1057                     WHEN 'TANGELO001' THEN iarticulo = 6.
   1058                     WHEN 'KUNKUA001' THEN iarticulo = 7. */
   1059             OTHERWISE 
   1060             iarticulo = 0.
   1061         END CASE.
   1062         
   1063         
   1064         /* PROCESAR EL MATERIAL SAP PARA DETERMINAR EL ARTICULO */
   1065     
   1066         FIND FIRST      tipo_cosecha WHERE id_tipo_cosecha_sap      =  (
   1066     '0' + ctipocosecha) NO-LOCK NO-ERROR.
   1067         IF AVAILABLE    tipo_cosecha THEN ASSIGN vtipocosecha    = tipo_
   1067     cosecha.id_tipo_cosecha
   1068                 vcalidadbalanza = tipo_cosecha.id_calidad_balanza. 
   1069         ELSE ASSIGN vtipocosecha    = 0 vcalidadbalanza = 0.
   1070         FIND FIRST      tipos_servicios WHERE id_tipo_servicio_sap =  ct
   1070     iposervicio NO-LOCK NO-ERROR.
   1071         IF AVAILABLE    tipos_servicios THEN  vtiposervicio = tipos_serv
   1071     icios.id_tipo_servicio. 
   1072         ELSE vtiposervicio = 0.
   1073         
   1074         VTEXTO = "DEVUELVE VALORES #3".
   1075         WLOG(ARCHIVO,VTEXTO)  .
   1076          
   1077         vcantpes = PSCANTPES.                                  
   1078         IF INDEX(SESSION:NUMERIC-DECIMAL-POINT , vcantpes ) <> 0 THEN
   1079             cantpes = DECIMAL(vcantpes).
   1080         ELSE
   1081   1     DO:
   1082   1         IF SESSION:NUMERIC-DECIMAL-POINT = '.' THEN
   1083   1             cantpes = DECIMAL (REPLACE(vcantpes , ',' , '.')  ).
   1084   1         ELSE
   1085   1             cantpes = DECIMAL (REPLACE(vcantpes , '.' , ',') ).
   1086         END.
   1087     
   1088         /* cantpes = truncate(cantpes,0). */
   1089         VTEXTO = "DEVUELVE VALORES #5".
   1090         WLOG(ARCHIVO,VTEXTO)  .
   1091         
   1092         IF cenvase <> "" THEN 
   1093   1     DO:
   1094             FIND FIRST      envases_prod WHERE id_envase_sap =  cenvase 
   1094   1 NO-LOCK NO-ERROR.
   1095             IF AVAILABLE    envases_prod THEN venvase = envases_prod.id_
   1095   1 envase . 
   1096   1         ELSE venvase = 0.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 29  

{} Line Blk
-- ---- ---
   1097   1 
   1098             FIND r_envases_prod WHERE r_envases_prod.id_envase = envases
   1098   1 _prod.id_envase AND
   1099   1             r_envases_prod.id_articulo = iArticulo NO-LOCK NO-ERROR.
   1100   1 
   1101     /*        vcantenvasesentrada = IF TRIM(STRING( PSUNIDAD )) = 'KG' T
   1101     HEN (IF AVAILABLE r_envases_prod THEN cantpes / r_envases_prod.Kilos
   1101   1  ELSE 0) ELSE INTEGER(PSCANTPES). */
   1102             vpesoenvasesentrada = vcantenvasesentrada * ( IF AVAILABLE e
   1102   1 nvases_prod THEN envases_prod.tara ELSE 0  ).
   1103             vpesonetoticket     = IF TRIM(STRING( PSUNIDAD )) = 'KG' THE
   1103     N ( CANTPES - VPESOENVASESENTRADA ) ELSE vcantenvasesentrada * ( IF 
   1103   1 AVAILABLE r_envases_prod THEN r_envases_prod.kilos ELSE 0  ).
   1104         END.
   1105         ELSE
   1106   1     DO:
   1107   1         venvase = 0.
   1108   1         vcantenvasesentrada = 0.
   1109   1         vpesoenvasesentrada = 0.
   1110   1         vpesonetoticket     = cantpes.
   1111         END.
   1112         /*
   1113              FIND FIRST      colores  WHERE colores.id_color_sap = PSCOL
   1113     OR NO-LOCK NO-ERROR.
   1114              IF AVAILABLE    colores  THEN vcolor = colores.id_color . E
   1114     LSE vcolor = 0. */
   1115     
   1116         VTEXTO = "DEVUELVE VALORES #6".
   1117         WLOG(ARCHIVO,VTEXTO)  .
   1118         
   1119         FIND FIRST      colores  WHERE colores.id_color_sap = INTEGER(PS
   1119     COLOR) NO-LOCK NO-ERROR.
   1120         IF AVAILABLE    colores  THEN vcolor = colores.id_color . 
   1121         ELSE vcolor = 0. 
   1122     
   1123         VTEXTO = "DEVUELVE VALORES #61 " + CCODIGOTRAZABILIDAD.
   1124         WLOG(ARCHIVO,VTEXTO)  .
   1125     
   1126         FIND FIRST      lotes_plantacion WHERE lotes_plantacion.codigo_t
   1126     razabilidad = ccodigotrazabilidad NO-LOCK.
   1127         /* IF NOT AVAILABLE lotes_plantacion THEN RETURN ERROR 'Error de
   1127      lotes de plantacion'. */
   1128     
   1129         VTEXTO = "DEVUELVE VALORES #612 " + STRING(AVAILABLE(LOTES_PLANT
   1129     ACION)).
   1130     
   1131         FIND FIRST   lote        OF lotes_plantacion  NO-LOCK NO-ERROR.
   1132         IF AVAILABLE lote  THEN ASSIGN 
   1133                 vlotesenasa = lote.id_lote_senasa
   1134                 vlote       = lote.id_lote. 
   1135         ELSE ASSIGN vlotesenasa = 0 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 30  

{} Line Blk
-- ---- ---
   1136                     vlote       = 0.
   1137     
   1138         VTEXTO = "DEVUELVE VALORES #62".
   1139         WLOG(ARCHIVO,VTEXTO)  .
   1140     
   1141         FIND FIRST      origenes    OF lote NO-LOCK NO-ERROR.       
   1142         IF AVAILABLE    origenes  THEN
   1143             ASSIGN
   1144                 vfincasenasa = origenes.id_finca_senasa 
   1145                 vorigen      = origenes.id_origen 
   1146                 vzona_up     = origenes.zona_up 
   1147                 vrenspa      = origenes.renspa.
   1148         ELSE
   1149             ASSIGN
   1150                 vfincasenasa = 0
   1151                 vorigen      = 0
   1152                 vzona_up     = "" 
   1153                 vrenspa      = "".
   1154     
   1155         VTEXTO = "DEVUELVE VALORES #63".
   1156         WLOG(ARCHIVO,VTEXTO)  .
   1157     
   1158         FIND FIRST      proveedores OF origenes  NO-LOCK NO-ERROR.
   1159         IF AVAILABLE    proveedores THEN vproveedor = proveedores.id_pro
   1159     veedor. 
   1160         ELSE vproveedor = 0.
   1161     
   1162         VTEXTO = "DEVUELVE VALORES #7".
   1163         WLOG(ARCHIVO,VTEXTO)  .
   1164         
   1165         FIND variedades WHERE variedades.id_articulo = iarticulo AND
   1166             variedades.id_variedad = lote.id_variedad NO-LOCK NO-ERROR.
   1167         IF NOT AVAILABLE variedades THEN ivariedad = 0. 
   1168         ELSE ivariedad = variedades.id_variedad.
   1169         
   1170         IF iarticulo = 1 THEN
   1171             ivariedad = 1.  /***** FUERZO VARIEDAD 1 EN LIMON ***/
   1172     
   1173         CASE cmercado: /*** CONFIRMAR LO QUE VUELVE DE MERCADO **/
   1174             WHEN 'UE' THEN
   1175   1             DO:
   1176   1                 vunioneuropea = TRUE.
   1177   1                 vchina        = FALSE.
   1178   1                 vusa          = FALSE.
   1179                 END.
   1180             WHEN 'CHINA' THEN
   1181   1             DO:
   1182   1                 vunioneuropea = FALSE.
   1183   1                 vchina = TRUE.
   1184   1                 vusa          = FALSE.
   1185                 END.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 31  

{} Line Blk
-- ---- ---
   1186             WHEN 'USA' THEN
   1187   1             DO:
   1188   1                 vunioneuropea   = FALSE.
   1189   1                 vchina          = FALSE.
   1190   1                 vusa            = TRUE.
   1191                 END.
   1192             OTHERWISE 
   1193   1         DO:
   1194   1             vunioneuropea = FALSE.
   1195   1             vchina        = FALSE.
   1196             END.
   1197         END CASE.
   1198         /*** DETERMINAR SI LA FRUTA ES DE FINCA O ES PROCESADA **/
   1199         /*
   1200         IF hTableMovfleteD:VALUE(1,15) = 'A300' THEN
   1201             vfinca = TRUE.
   1202         ELSE
   1203             vfinca = FALSE.
   1204         */
   1205         
   1206         VTEXTO = "DEVUELVE VALORES #7".
   1207         WLOG(ARCHIVO,VTEXTO)  .
   1208         
   1209         
   1210         
   1211         IF SUBSTRING(CMATERIAPRIMA,1,3) = '303' THEN
   1212             VFINCA = FALSE.
   1213         ELSE 
   1214             VFINCA = TRUE.
   1215             
   1216         IF vfinca THEN 
   1217   1     DO:
   1218   1 
   1219   1         IF vsucursal = 98 THEN
   1220   1             vsucursaletiqueta = 101.
   1221   1         ELSE
   1222   1             vsucursaletiqueta = 111.
   1223   1 
   1224   1         ASSIGN 
   1225   1             vsucursalpacking = 0
   1226   1             vproveedororigen = vproveedor
   1227   1             vorigenorigen    = vorigen.
   1228         END.
   1229     
   1230     
   1231         /**** MODIFICADO POR PABLO ****/
   1232         
   1233         IF NOT vfinca THEN 
   1234   1     DO:
   1235   1 
   1236   1         IF vsucursal = 98 THEN
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 32  

{} Line Blk
-- ---- ---
   1237   1             vsucursaletiqueta = 101.
   1238   1         ELSE
   1239   1             vsucursaletiqueta = 130.
   1240   1 
   1241   1         ASSIGN
   1242   1             vsucursalpacking = vsucursal
   1243   1             vproveedororigen = 1
   1244   1             vorigenorigen    = (IF vsucursal = 98 THEN 97 ELSE 98).
   1245         END.
   1246     
   1247         MESSAGE VSUCURSALETIQUETA VFINCA.
   1248     
   1249         IF vtipocosecha = 4 THEN 
   1250   1     DO:
   1251   1 
   1252   1         IF vsucursal = 98 THEN
   1253   1             vsucursaletiqueta = 110.
   1254   1         ELSE
   1255   1             vsucursaletiqueta = 130.
   1256   1 
   1257   1         ASSIGN
   1258   1             vsucursalpacking = vsucursal
   1259   1             vproveedororigen = 1
   1260   1             vorigenorigen    = (IF vsucursal = 98 THEN 97 ELSE 98).
   1261         END.
   1262         
   1263         VTEXTO = "DEVUELVE VALORES #8".
   1264         WLOG(ARCHIVO,VTEXTO)  .
   1265         
   1266         vcertunion  = lote.certificado.
   1267         vcertchina  = lote.cert_china.
   1268     
   1269     
   1270         vcertificado = "".
   1271         IF cmercado = 'UE' THEN
   1272   1     DO:
   1273             IF vcertunion = "" THEN UNDO , THROW NEW Progress.Lang.AppEr
   1273   1 ror("El lote no posee certificado UE", 550).
   1274   1         vchina = NO.
   1275   1         vunioneuropea = TRUE.
   1276   1         vcertificado = vcertunion.
   1277         END.
   1278     
   1279     
   1280         IF cmercado  = 'CHINA' THEN
   1281   1     DO:
   1282             IF vcertchina = "" THEN UNDO , THROW NEW Progress.Lang.AppEr
   1282   1 ror("El lote no posee certificado CH", 550).
   1283   1         vunioneuropea = NO.
   1284   1         vchina = TRUE.
   1285   1         vcertificado = vcertchina. 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 33  

{} Line Blk
-- ---- ---
   1286         END.
   1287         IF vsucursal = 98 THEN  ASSIGN v1 = 110
   1288                 v2 = 97.
   1289         ELSE  ASSIGN v1 = 130
   1290                 v2 = 98. 
   1291     /*
   1292         CATCH ERRX AS Progress.Lang.Error :
   1293             UNDO, THROW ERRX.
   1294         END CATCH.
   1295     */    
   1296         VTEXTO = "DEVUELVE VALORES #9".
   1297         WLOG(ARCHIVO,VTEXTO)  .
   1298     
   1299     END PROCEDURE.
   1300     
   1301     
   1302     PROCEDURE crearpartidas :
   1303         /*--------------------------------------------------------------
   1303     ----------------
   1304           Purpose:     
   1305           Parameters:  <none>
   1306           Notes:       
   1307         ----------------------------------------------------------------
   1307     --------------*/
   1308     
   1309         /** Crea tabla partidas a partir de balanza_tickets */
   1310         DEFINE INPUT PARAMETER vsuctrabajo AS INTEGER.
   1311         DEFINE INPUT PARAMETER vpartida AS INTEGER.
   1312     
   1313     
   1314         FIND FIRST produccion.partidas WHERE produccion.partidas.id_suc_
   1314     trabajo = vsuctrabajo AND
   1315             partidas.nro_partida = vpartida NO-ERROR.
   1316         IF NOT AVAILABLE partidas THEN
   1317   1     DO:
   1318   1         CREATE partidas.
   1319   1         ASSIGN 
   1320   1             partidas.id_suc_trabajo = vsuctrabajo
   1321   1             partidas.nro_partida    = vpartida.
   1322   1      
   1323             FIND FIRST balanza_tickets WHERE balanza_tickets.id_sucursal
   1323   1  = partidas.id_suc_trabajo AND
   1324   1             balanza_tickets.nro_partida = partidas.nro_partida AND 
   1325   1             balanza_tickets.nro_partida_serial = 1 NO-LOCK.
   1326   1         IF AVAILABLE balanza_tickets THEN
   1327   2         DO:
   1328   2             BUFFER-COPY balanza_tickets TO partidas.
   1329   1         END.
   1330         END.   
   1331     /*  
   1332     CATCH ERRX AS Progress.Lang.Error :
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 34  

{} Line Blk
-- ---- ---
   1333         UNDO, THROW ERRX.
   1334     END CATCH. */
   1335     END PROCEDURE.  
   1336       
   1337     PROCEDURE crearitemsstockdebalanza :
   1338         /*--------------------------------------------------------------
   1338     ----------------
   1339           Purpose:     
   1340           Parameters:  <none>
   1341           Notes:       
   1342         ----------------------------------------------------------------
   1342     --------------*/
   1343         DEFINE INPUT PARAMETER x_balanza    AS INTEGER NO-UNDO.
   1344         DEFINE INPUT PARAMETER x_pesada     AS INTEGER NO-UNDO.
   1345         DEFINE INPUT PARAMETER X_nro_ticket AS INTEGER NO-UNDO.
   1346     
   1347         DEFINE VARIABLE X_partida        AS INTEGER NO-UNDO.
   1348         DEFINE VARIABLE X_partida_serial AS INTEGER NO-UNDO.
   1349         DEFINE VARIABLE X_suc_etiq       AS INTEGER NO-UNDO.
   1350         DEFINE VARIABLE X_etiqueta       AS INTEGER NO-UNDO.
   1351         DEFINE VARIABLE v1               AS INTEGER NO-UNDO.
   1352         DEFINE VARIABLE v2               AS INTEGER NO-UNDO.
   1353         DEFINE VARIABLE K                AS INTEGER NO-UNDO.
   1354     
   1355         FIND FIRST balanza_pesadas WHERE balanza_pesadas.id_balanza = x_
   1355     balanza AND
   1356             balanza_pesadas.id_pesada = x_pesada NO-LOCK.
   1357         /*    IF NOT AVAILABLE balanza_pesadas THEN RETURN ERROR 'PESADA
   1357      INEXISTENTE'. */
   1358     
   1359         FIND FIRST balanza_tickets WHERE balanza_tickets.id_balanza = X_
   1359     balanza AND
   1360             balanza_tickets.id_pesada = X_pesada AND
   1361             balanza_tickets.nro_ticket = X_nro_ticket NO-LOCK.
   1362         /*    IF NOT AVAILABLE balanza_tickets THEN RETURN ERROR 'TICKET
   1362      INEXISTENTE'. */
   1363     
   1364         X_partida = balanza_tickets.nro_partida.
   1365         x_partida_serial = balanza_tickets.nro_partida_serial.
   1366         X_suc_etiq = balanza_tickets.id_sucursal_etiqueta.
   1367         X_etiqueta = balanza_tickets.id_etiqueta.
   1368     
   1369         FIND FIRST  movsucu OF balanza_pesadas.
   1370         IF AVAILABLE  movsucu THEN 
   1371   1     DO:
   1372   1         IF  movsucu.fecha_proceso = ? THEN 
   1373   2         DO:
   1374   2             ASSIGN
   1375   2                 movsucu.fecha     = balanza_pesadas.fecha_salida
   1376                     movsucu.hora      = SUBSTRING(balanza_pesadas.hora_s
   1376   2 alida,1,2) + "00"
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 35  

{} Line Blk
-- ---- ---
   1377   2                 movsucu.peso      = balanza_pesadas.peso_neto
   1378   2                 movsucu.c_usuario = USERID("userdb")
   1379   2                 movsucu.c_fecha   = TODAY
   1380   2                 movsucu.c_hora    = STRING(TIME, "hh:mm:ss").
   1381   2 
   1382   2             ASSIGN  
   1383                     movsucu.fecha_operativa = balanza_pesadas.fecha_oper
   1383   2 ativa.
   1384   2             
   1385   2             WLOG(ARCHIVO, 'CREAITEMSTOCK').
   1386   2             FIND FIRST  items_stock WHERE
   1387   2                 items_stock.id_sucursal =  movsucu.id_sucursal AND
   1388                     items_stock.id_tipo_movsto =  movsucu.id_tipo_movsto
   1388   2  AND
   1389   2                 items_stock.nro =  movsucu.nro AND
   1390   2                 items_stock.item = x_nro_ticket NO-ERROR.
   1391   2             IF NOT AVAILABLE  items_stock THEN 
   1392   3             DO:
   1393   3                 CREATE  items_stock.
   1394   3                 ASSIGN
   1395                         items_stock.id_sucursal     = movsucu.id_sucursa
   1395   3 l
   1396                         items_stock.id_tipo_movsto  = movsucu.id_tipo_mo
   1396   3 vsto
   1397                         items_stock.id_suc_envio    = movsucu.id_suc_env
   1397   3 io
   1398   3                     items_stock.nro             = movsucu.nro
   1399                         items_stock.fecha_operativa = movsucu.fecha_oper
   1399   3 ativa.
   1400   3                 RUN s_stock.p (OUTPUT  items_stock.id_serial).
   1401   2             END.
   1402   2             
   1403   2             
   1404   2             ASSIGN
   1405   2                 items_stock.nro_partida          = x_partida
   1406   2                 items_stock.nro_partida_origen   = x_partida
   1407                     items_stock.nro_partida_serial   = x_partida_serial 
   1407   2     
   1408   2                 items_stock.id_sucursal_etiqueta = x_suc_etiq
   1409   2                 items_stock.id_etiqueta          = x_etiqueta
   1410                     items_stock.item                 = balanza_tickets.n
   1410   2 ro_ticket
   1411                     items_stock.fecha                = balanza_tickets.f
   1411   2 echa_salida
   1412                     items_stock.hora                 = SUBSTRING(balanza
   1412   2 _tickets.hora_salida,1,2) +
   1413                                                           substring(bala
   1413   2 nza_tickets.hora_salida,4,2)
   1414                     items_stock.dia                  = WEEKDAY(balanza_t
   1414   2 ickets.fecha_salida)
   1415                     items_stock.nro_comprobante      = balanza_tickets.n
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 36  

{} Line Blk
-- ---- ---
   1415   2 ro_remito
   1416                     items_stock.id_articulo          = balanza_tickets.i
   1416   2 d_materia_prima
   1417                     items_stock.peso                 = balanza_tickets.p
   1417   2 eso_neto_ticket
   1418   2                 items_stock.codigo_stock         = "I"
   1419                     items_stock.cantidad             = balanza_tickets.c
   1419   2 ant_env_entrada
   1420                     items_stock.cantidad1            = balanza_tickets.p
   1420   2 eso_neto_ticket / 20 /* cantidad de bandejas */
   1421                     items_stock.id_calidad           = balanza_tickets.i
   1421   2 d_calidad_balanza
   1422                     items_stock.id_variedad          = balanza_tickets.i
   1422   2 d_variedad
   1423                     items_stock.id_envase            = balanza_tickets.i
   1423   2 d_envase
   1424   2                 items_stock.id_color             = 0
   1425                     items_stock.fecha_cosecha        = balanza_tickets.f
   1425   2 echa_cosecha
   1426                     items_stock.union_europea        = balanza_tickets.u
   1426   2 nion_europea
   1427                     items_stock.china                = balanza_tickets.c
   1427   2 hina
   1428                     items_stock.id_proveedor         = balanza_tickets.i
   1428   2 d_proveedor
   1429                     items_stock.id_origen            = balanza_tickets.i
   1429   2 d_origen
   1430                     items_stock.id_lote              = balanza_tickets.i
   1430   2 d_lote
   1431                     items_stock.id_finca_senasa      = balanza_tickets.i
   1431   2 d_finca_senasa
   1432                     items_stock.id_lote_senasa       = balanza_tickets.i
   1432   2 d_lote_senasa
   1433                     items_stock.codigo_trazabilidad  = balanza_tickets.c
   1433   2 odigo_trazabilidad
   1434                     items_stock.id_tipo_cosecha      = balanza_tickets.i
   1434   2 d_tipo_cosecha
   1435                     items_stock.periodo_cosecha      = balanza_tickets.p
   1435   2 eriodo_cosecha
   1436                     items_stock.certificado          = balanza_tickets.c
   1436   2 ertificado
   1437                     items_stock.cert_china           = balanza_tickets.c
   1437   2 ert_china
   1438                     items_stock.id_mercado           = balanza_tickets.i
   1438   2 d_mercado          
   1439   2                 items_stock.c_usuario            = USERID("userdb")
   1440   2                 items_stock.c_fecha              = TODAY
   1441                     items_stock.c_hora               = STRING(TIME, "hh:
   1441   2 mm:ss").
   1442   2 
   1443   2             WLOG(ARCHIVO, 'TERMINACREAITEMSTOCK').
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 37  

{} Line Blk
-- ---- ---
   1444   2         
   1445   2             IF  items_stock.peso <> 0 THEN
   1446                     ASSIGN  items_stock.cantidad1 = items_stock.peso / 2
   1446   2 0.
   1447   2         
   1448   2             CASE balanza_tickets.id_tipo_cosecha:
   1449   2                 WHEN 1 THEN
   1450   2                     items_stock.estado_fruta = FALSE.
   1451   2                 WHEN 4 THEN
   1452   2                     items_stock.estado_fruta = TRUE.
   1453   2                 OTHERWISE
   1454   2                 items_stock.estado_fruta = FALSE.
   1455   2             END CASE.
   1456                 WLOG(ARCHIVO, 'EMPIEZABINES ' + STRING(balanza_tickets.N
   1456   2 RO_REMITO)).
   1457   2             /******* Archivo de Bines *******/
   1458   2             /***
   1459   2             FIND FIRST bines USE-INDEX proveedor_remito WHERE
   1460                     bines.id_proveedor  = balanza_tickets.id_proveedor A
   1460   2 ND
   1461   2                 bines.nro_remito    = balanza_tickets.nro_remito AND
   1462   2                 balanza_tickets.nro_remito <> '' and
   1463   2                 balanza_tickets.nro_remito <> ? NO-LOCK NO-ERROR.
   1464   2             IF AVAILABLE bines THEN 
   1465   2             DO:
   1466   2                 WLOG(ARCHIVO, 'EMPIEZABINES1').
   1467   2                 FOR EACH bines WHERE
   1468                         bines.id_proveedor  = balanza_tickets.id_proveed
   1468   2 or AND
   1469                         bines.nro_remito    = balanza_tickets.nro_remito
   1469   2  AND 
   1470   2                     bines.nro_ticket    = 0 :
   1471   2             
   1472   2                     ASSIGN
   1473   2                         bines.id_balanza         = x_balanza
   1474   2                         bines.id_pesada          = x_pesada
   1475   2                         bines.nro_ticket         = x_nro_ticket
   1476   2                         bines.nro_partida        = x_partida
   1477   2                         bines.nro_partida_serial = x_partida_serial
   1478                             bines.id_sucursal        = items_stock.id_su
   1478   2 cursal
   1479                             bines.id_tipo_movsto     = items_stock.id_ti
   1479   2 po_movsto
   1480   2                         bines.nro                = items_stock.nro
   1481   2                         bines.item               = items_stock.item
   1482                             bines.id_suc_envio       = items_stock.id_su
   1482   2 c_envio
   1483                             bines.fecha_operativa    = items_stock.fecha
   1483   2 _operativa
   1484   2                         bines.fecha              = items_stock.fecha
   1485   2                         bines.hora               = items_stock.hora.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 38  

{} Line Blk
-- ---- ---
   1486   2                 END.
   1487   2             END.
   1488   2             ELSE 
   1489   2             DO:    
   1490   2                 DO k = 1 TO balanza_tickets.cant_env_entrada:
   1491   2                     WLOG(ARCHIVO, 'EMPIEZABINES2').
   1492   2                     
   1493   2                     CREATE bines.
   1494   2                     ASSIGN
   1495   2                         bines.id_balanza         = x_balanza
   1496   2                         bines.id_pesada          = x_pesada
   1497   2                         bines.nro_ticket         = x_nro_ticket
   1498   2                         bines.nro_partida        = x_partida
   1499   2                         bines.nro_partida_serial = x_partida_serial
   1500                             bines.id_sucursal        = items_stock.id_su
   1500   2 cursal
   1501                             bines.id_tipo_movsto     = items_stock.id_ti
   1501   2 po_movsto
   1502   2                         bines.nro                = items_stock.nro
   1503   2                         bines.item               = items_stock.item
   1504                             bines.id_suc_envio       = items_stock.id_su
   1504   2 c_envio
   1505                             bines.fecha_operativa    = items_stock.fecha
   1505   2 _operativa
   1506   2                         bines.fecha              = items_stock.fecha
   1507   2                         bines.hora               = items_stock.hora
   1508                             bines.id_proveedor       = items_stock.id_pr
   1508   2 oveedor
   1509                             bines.id_origen          = items_stock.id_or
   1509   2 igen
   1510                             bines.id_lote            = items_stock.id_lo
   1510   2 te.
   1511   2                 END.
   1512   2             END.
   1513   2     
   1514   2             RELEASE bines.
   1515   2             */
   1516   2             WLOG(ARCHIVO, 'EMPIEZABINES3').
   1517   2     
   1518   2             /******* Archivo Relacion Bines/Items Stock *******/
   1519   2             FOR EACH bines NO-LOCK WHERE
   1520   2                 bines.nro_partida           = x_partida AND
   1521   3                 bines.nro_partida_serial    = x_partida_serial:
   1522   3                 WLOG(ARCHIVO, 'EMPIEZABINES4').
   1523   3             
   1524   3                 CREATE r_bines_items_stock.
   1525   3                 ASSIGN
   1526                         r_bines_items_stock.nro_bin            = bines.n
   1526   3 ro_bin
   1527                         r_bines_items_stock.nro_partida        = bines.n
   1527   3 ro_partida
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 39  

{} Line Blk
-- ---- ---
   1528                         r_bines_items_stock.nro_partida_serial = bines.n
   1528   3 ro_partida_serial
   1529                         r_bines_items_stock.id_sucursal        = bines.i
   1529   3 d_sucursal
   1530                         r_bines_items_stock.id_tipo_movsto     = bines.i
   1530   3 d_tipo_movsto
   1531                         r_bines_items_stock.item               = bines.i
   1531   3 tem
   1532                         r_bines_items_stock.nro                = bines.n
   1532   3 ro.
   1533   2             END.
   1534   2            
   1535   2             RELEASE r_bines_items_stock.
   1536   2 
   1537   2             WLOG(ARCHIVO, 'TERMINABINES').
   1538   2 
   1539   2 
   1540   2 
   1541   2             /* Revisar --ver parametrizar */
   1542                 IF balanza_tickets.id_sucursal = 98 THEN  ASSIGN v1 = 11
   1542   2 0
   1543   2                     v2 = 97.
   1544   2             ELSE ASSIGN v1 = 130
   1545   2                     v2 = 98. 
   1546   2             
   1547   2             
   1548   2             
   1549   2 
   1550                 /******* Llama al programa para estimacion cosecha *****
   1550   2 **/
   1551   2             IF balanza_tickets.id_tipo_cosecha = 1 AND
   1552   2                 (balanza_tickets.union_europea OR 
   1553   2                 balanza_tickets.china) AND
   1554   2                 balanza_tickets.id_sucursal_etiqueta <> v1 AND
   1555   2                 balanza_tickets.id_origen_origen <> v2 THEN 
   1556   3             DO:
   1557   3 
   1558   3                 WLOG(ARCHIVO, 'ESTIMACIONCOSECHA').
   1559   3                 RUN dd_sdoest.p
   1560   3                     (INPUT balanza_tickets.fecha_cosecha,
   1561   3                     INPUT balanza_tickets.id_proveedor,
   1562   3                     INPUT balanza_tickets.id_finca_senasa,
   1563   3                     INPUT balanza_tickets.id_lote_senasa,
   1564   3                     INPUT balanza_tickets.certificado,
   1565   3                     INPUT balanza_tickets.codigo_trazabilidad,
   1566   3                     INPUT balanza_tickets.peso_neto_ticket,
   1567   3                     INPUT "alta").
   1568   2             END.
   1569   2 
   1570   1         END.
   1571         END.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 40  

{} Line Blk
-- ---- ---
   1572     /*
   1573         CATCH ERRX AS Progress.Lang.Error :
   1574             UNDO, THROW ERRX.
   1575         END CATCH. */
   1576     END PROCEDURE.
   1577     
   1578     PROCEDURE pesosbalanzapesada :
   1579         /*--------------------------------------------------------------
   1579     ----------------
   1580           Purpose:     
   1581           Parameters:  <none>
   1582           Notes:       
   1583         ----------------------------------------------------------------
   1583     --------------*/
   1584         DEFINE INPUT PARAMETER X_BALANZA AS INTEGER NO-UNDO.    
   1585         DEFINE INPUT PARAMETER x_pesada AS INTEGER NO-UNDO.
   1586     
   1587         DEFINE BUFFER auxbalticket FOR balanza_tickets.
   1588         DEFINE BUFFER auxbalpes    FOR balanza_tickets.
   1589         DEFINE BUFFER AUXBAL       FOR balanza_PESADAS.
   1590         
   1591         DEFINE VARIABLE vpesoneto     AS DECIMAL.
   1592         DEFINE VARIABLE vpesodescarte AS DECIMAL.
   1593     
   1594         FIND FIRST AUXBAL WHERE AUXBAL.id_balanza = X_PESADA AND AUXBAL.
   1594     ID_PESADA = X_PESADA  NO-LOCK NO-ERROR.
   1595     
   1596         
   1597     
   1598         IF AVAILABLE AUXBAL THEN
   1599   1     DO:
   1600             FIND FIRST balanzas WHERE balanzas.id_balanza = AUXBAL.ID_BA
   1600   1 LANZA NO-LOCK.
   1601   1         vpesoneto = 0.
   1602             FOR EACH auxbalticket WHERE auxbalticket.id_balanza = AUXBAL
   1602   1 .id_balanza AND
   1603   2             auxbalticket.id_pesada = AUXBAL.id_pesada NO-LOCK:
   1604   2             IF auxbalticket.id_tipo_cosecha = 1 OR
   1605   2                 auxbalticket.id_tipo_cosecha = 4 OR
   1606   2                 auxbalticket.id_tipo_cosecha = 5 THEN
   1607   2                 vpesoneto = vpesoneto + auxbalticket.peso_neto.
   1608   1         END.
   1609   1         
   1610   1         vpesodescarte = 0.
   1611   1         IF balanzas.id_suc_envio <> 0 THEN
   1612   2         DO:
   1613                 FOR EACH auxbalticket WHERE auxbalticket.id_balanza = AU
   1613   2 XBAL.id_balanza AND
   1614   3                 auxbalticket.id_pesada = AUXBAL.id_pesada NO-LOCK:
   1615   3                 IF auxbalticket.id_tipo_cosecha = 2 OR
   1616   3                     auxbalticket.id_tipo_cosecha = 3 THEN
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 41  

{} Line Blk
-- ---- ---
   1617                         vpesodescarte = vpesodescarte + auxbalticket.pes
   1617   3 o_neto.
   1618   2             END.
   1619   1         END.
   1620   1         ELSE
   1621   2         DO:
   1622                 FOR EACH auxbalticket WHERE auxbalticket.id_balanza = AU
   1622   2 XBAL.id_balanza AND
   1623   3                 auxbalticket.id_pesada = AUXBAL.id_pesada NO-LOCK:
   1624                     vpesodescarte = vpesodescarte + auxbalticket.peso_de
   1624   3 scarte.
   1625   2             END.
   1626   1         END.
   1627   1         ASSIGN 
   1628   1             AUXBAL.peso_neto     = vpesoneto
   1629   1             AUXBAL.peso_descarte = vpesodescarte.
   1630         END.
   1631     END PROCEDURE.  
   1632     
   1633     PROCEDURE actsaldospartidadebalanza :
   1634         /*--------------------------------------------------------------
   1634     ----------------
   1635           Purpose:     
   1636           Parameters:  <none>
   1637           Notes:       
   1638         ----------------------------------------------------------------
   1638     --------------*/
   1639     
   1640         DEFINE INPUT PARAMETER vsuctrabajo AS INTEGER.
   1641         DEFINE INPUT PARAMETER vpartida AS INTEGER.
   1642         DEFINE INPUT PARAMETER vpartidaserial AS INTEGER.
   1643     
   1644         FIND FIRST balanza_tickets WHERE balanza_tickets.nro_partida = v
   1644     partida AND 
   1645             balanza_tickets.nro_partida_serial = vpartidaserial NO-LOCK 
   1645     NO-ERROR.
   1646         IF AVAILABLE balanza_tickets THEN
   1647   1     DO:
   1648             FIND FIRST balanza_pesadas OF balanza_tickets NO-LOCK NO-ERR
   1648   1 OR.
   1649             FIND FIRST saldos_partidas WHERE saldos_partidas.id_suc_trab
   1649   1 ajo = vsuctrabajo  AND
   1650                 saldos_partidas.nro_partida = balanza_tickets.nro_partid
   1650   1 a AND 
   1651                 saldos_partidas.id_sucursal = balanza_pesada.id_sucursal
   1651   1  NO-ERROR.
   1652   1         IF NOT AVAILABLE saldos_partidas THEN
   1653   2         DO:
   1654   2             CREATE saldos_partidas.
   1655   2             ASSIGN 
   1656   2                 saldos_partidas.id_suc_trabajo = vsuctrabajo 
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 42  

{} Line Blk
-- ---- ---
   1657                     saldos_partidas.nro_partida    = balanza_tickets.nro
   1657   2 _partida
   1658                     saldos_partidas.id_sucursal    = balanza_pesada.id_s
   1658   2 ucursal.
   1659   2             
   1660   1         END.
   1661   1         ASSIGN 
   1662                 saldos_partida.ingreso = saldos_partidas.ingreso + balan
   1662   1 za_tickets.peso_neto_ticket
   1663                 saldos_partida.saldo   = saldos_partidas.ingreso - saldo
   1663   1 s_partidas.egreso.
   1664         END.
   1665     
   1666         /* Actualiza saldos_packing */
   1667         FIND FIRST saldos_packing WHERE
   1668             saldos_packing.nro_partida  = vpartida AND
   1669             saldos_packing.nro_partida_serial = vpartidaserial NO-ERROR.
   1670         IF NOT AVAILABLE saldos_packing THEN
   1671   1     DO:
   1672   1         CREATE saldos_packing.
   1673   1         ASSIGN
   1674   1             saldos_packing.nro_partida          = vpartida
   1675   1             saldos_packing.nro_partida_serial   = vpartidaserial
   1676                 saldos_packing.id_sucursal_etiqueta = balanza_tickets.id
   1676   1 _sucursal_etiqueta
   1677                 saldos_packing.id_etiqueta          = balanza_tickets.id
   1677   1 _etiqueta
   1678                 saldos_packing.id_sucursal          = balanza_pesadas.id
   1678   1 _sucursal
   1679                 saldos_packing.cantidad_total       = balanza_tickets.pe
   1679   1 so_neto_ticket / 20
   1680                 saldos_packing.saldo                = balanza_tickets.pe
   1680   1 so_neto_ticket / 20
   1681                 saldos_packing.saldo_camara         = balanza_tickets.pe
   1681   1 so_neto_ticket / 20
   1682   1             saldos_packing.c_usuario            = 'mm050'.
   1683   1 
   1684   1         RELEASE saldos_packing.
   1685         END.
   1686     
   1687     
   1688     END PROCEDURE.
   1689     FUNCTION devuelvefechaoperativa RETURNS DATE
   1690         ( INPUT pfecha AS DATE, INPUT phora AS CHARACTER) :
   1691         /*--------------------------------------------------------------
   1691     ----------------
   1692           Purpose:   
   1693             Notes:  
   1694         ----------------------------------------------------------------
   1694     --------------*/
   1695     
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 43  

{} Line Blk
-- ---- ---
   1696         DEFINE VARIABLE vfechaop AS DATE.
   1697       
   1698         FIND FIRST fechas_operativas WHERE
   1699             (fechas_operativas.fecha_inicio = pfecha AND phora >= fechas
   1699     _operativas.hora_inicio) OR
   1700             (fechas_operativas.fecha_fin = pfecha AND phora <= fechas_op
   1700     erativas.hora_fin)  NO-LOCK NO-ERROR.
   1701         IF  AVAILABLE fechas_operativas THEN 
   1702             vfechaop = fechas_operativas.fecha_inicio.
   1703     
   1704     
   1705     
   1706         RETURN vfechaop.
   1707     END FUNCTION.     
   1708     
   1709     FUNCTION nroPesada RETURNS INTEGER (INPUT IBALANZA AS INTEGER, INPUT
   1709      IPESASA AS INTEGER):
   1710         DEFINE VARIABLE VINROPESADA AS INTEGER NO-UNDO.
   1711         
   1712         VINROPESADA = IBALANZA * 1000000 + IPESADA.
   1713         OUTPUT TO D:\TEMP\WS2.TXT APPEND.
   1714         RETURN VINROPESADA.
   1715     END FUNCTION.
   1716      
   1717     FUNCTION WLOG RETURNS LOGICAL (INPUT ARCHIVO AS CHARACTER, INPUT TEX
   1717     TO AS CHARACTER):
   1718         OUTPUT TO VALUE(ARCHIVO) APPEND.
   1719         EXPORT DELIMITER "|" STRING(NOW)  TEXTO.
   1720         OUTPUT CLOSE.
   1721         RETURN TRUE.
   1721     END FUNCTION.
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 44  

     File Name       Line Blk. Type   Tran            Blk. Label            
-------------------- ---- ----------- ---- --------------------------------
...os\qas\mm050ing.p  665 Procedure   No   Procedure ACTUALIZADOCUMENTOMATERIALPESADA
    Buffers: produccion.bp

...os\qas\mm050ing.p  671 For         Yes                                   
...os\qas\mm050ing.p  680 Procedure   No   Procedure SAPTOBALANZAPESADA     
...os\qas\mm050ing.p  721 Do          Yes                                   
...os\qas\mm050ing.p  809 Procedure   No   Procedure procesarBalanzaTicket  
    Buffers: produccion.aux_salida
             produccion.aux_tickets
             produccion.aux_pesada
             produccion.balanza_tickets

...os\qas\mm050ing.p  830 Do          Yes                                   
...os\qas\mm050ing.p  851 Do          No                                    
...os\qas\mm050ing.p  862 Do          No                                    
...os\qas\mm050ing.p  872 Do          No                                    
...os\qas\mm050ing.p  874 For         Yes                                   
...os\qas\mm050ing.p  877 For         Yes                                   
...os\qas\mm050ing.p  891 Do          No                                    
...os\qas\mm050ing.p  893 For         No                                    
...os\qas\mm050ing.p  915 Do          No                                    
...os\qas\mm050ing.p  923 Do          No                                    
...os\qas\mm050ing.p  953 Procedure   No   Procedure valoresfijos           
...os\qas\mm050ing.p  970 Do          No                                    
...os\qas\mm050ing.p  982 Procedure   No   Procedure devuelvevaloresmovflete
...os\qas\mm050ing.p 1080 Do          No                                    
...os\qas\mm050ing.p 1092 Do          No                                    
...os\qas\mm050ing.p 1105 Do          No                                    
...os\qas\mm050ing.p 1174 Do          No                                    
...os\qas\mm050ing.p 1180 Do          No                                    
...os\qas\mm050ing.p 1186 Do          No                                    
...os\qas\mm050ing.p 1192 Do          No                                    
...os\qas\mm050ing.p 1216 Do          No                                    
...os\qas\mm050ing.p 1233 Do          No                                    
...os\qas\mm050ing.p 1249 Do          No                                    
...os\qas\mm050ing.p 1271 Do          No                                    
...os\qas\mm050ing.p 1280 Do          No                                    
...os\qas\mm050ing.p 1302 Procedure   Yes  Procedure crearpartidas          
...os\qas\mm050ing.p 1316 Do          No                                    
...os\qas\mm050ing.p 1326 Do          No                                    
...os\qas\mm050ing.p 1337 Procedure   Yes  Procedure crearitemsstockdebalanza
...os\qas\mm050ing.p 1370 Do          No                                    
...os\qas\mm050ing.p 1372 Do          No                                    
...os\qas\mm050ing.p 1391 Do          No                                    
...os\qas\mm050ing.p 1519 For         Yes                                   
...os\qas\mm050ing.p 1551 Do          No                                    
...os\qas\mm050ing.p 1578 Procedure   Yes  Procedure pesosbalanzapesada     
    Buffers: produccion.AUXBAL

...os\qas\mm050ing.p 1598 Do          No                                    
...os\qas\mm050ing.p 1602 For         No                                    
    Buffers: produccion.auxbalticket

...os\qas\mm050ing.p 1611 Do          No                                    
...os\qas\mm050ing.p 1613 For         No                                    
    Buffers: produccion.auxbalticket

...os\qas\mm050ing.p 1620 Do          No                                    
...os\qas\mm050ing.p 1622 For         No                                    
    Buffers: produccion.auxbalticket

...os\qas\mm050ing.p 1633 Procedure   Yes  Procedure actsaldospartidadebalanza
...os\qas\mm050ing.p 1646 Do          No                                    
...os\qas\mm050ing.p 1652 Do          No                                    
...os\qas\mm050ing.p 1670 Do          No                                    
...os\qas\mm050ing.p 1689 Function    No   Function devuelvefechaoperativa  
...os\qas\mm050ing.p 1709 Function    No   Function nroPesada               
...os\qas\mm050ing.p 1717 Function    No   Function WLOG                    
    Frames:  Unnamed

...os\qas\mm050ing.p    0 Procedure   No                                    
    Buffers: produccion.fechas_operativas
             produccion.saldos_packing
             produccion.saldos_partidas
             produccion.r_bines_items_stock
             ppacking.bines
             produccion.partidas
             produccion.variedades
             general.proveedores
             produccion.colores
             produccion.r_envases_prod
             produccion.envases_prod
             produccion.tipos_servicios
             produccion.tipo_cosecha
             general.tipo_movsto
             general.movsucu
             general.tipo_numero
             RESPUESTAS
             produccion.balanza_tickets
             produccion.balanza_pesadas
             TTING
             general.items_stock
             produccion.balanzas
             general.mercados
             produccion.origenes
             produccion.lote
             general.lotes_plantacion
             POSICIONES

...os\qas\mm050ing.p  199 Do          No                                    
...os\qas\mm050ing.p  219 For         No                                    
...os\qas\mm050ing.p  221 Do          No                                    
...os\qas\mm050ing.p  236 Do          No                                    
...os\qas\mm050ing.p  248 Do          No                                    
...os\qas\mm050ing.p  258 Do          No                                    
...os\qas\mm050ing.p  260 Do          No                                    
...os\qas\mm050ing.p  306 For         No                                    
...os\qas\mm050ing.p  309 Do          No                                    
...os\qas\mm050ing.p  323 Do          No                                    
...os\qas\mm050ing.p  333 Do          No                                    
...os\qas\mm050ing.p  343 Do          No                                    
...os\qas\mm050ing.p  353 Do          No                                    
...os\qas\mm050ing.p  388 For         No                                    
...os\qas\mm050ing.p  397 Do          No                                    
...os\qas\mm050ing.p  400 For         No                                    
    Buffers: general.AUX_IT

...os\qas\mm050ing.p  409 Do          No                                    
...os\qas\mm050ing.p  421 For         No                                    
...os\qas\mm050ing.p  437 Do          No                                    
...os\qas\mm050ing.p  449 Catch       No                                    
...os\qas\mm050ing.p                  06/19/2017 12:27:34   PROGRESS(R) Page 45  

     File Name       Line Blk. Type   Tran            Blk. Label            
-------------------- ---- ----------- ---- --------------------------------
...os\qas\mm050ing.p  455 Finally     No                                    
...os\qas\mm050ing.p  459 Do          Yes                                   
...os\qas\mm050ing.p  482 For         No                                    
...os\qas\mm050ing.p  491 For         Yes                                   
    Buffers: general.aux_items
             produccion.periodo_cosecha
             produccion.productos_terminados

...os\qas\mm050ing.p  571 Do          No                                    
...os\qas\mm050ing.p  598 Do          No                                    
